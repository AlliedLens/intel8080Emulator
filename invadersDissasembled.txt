
==========================================================================Program-Dissasembled===================================================================================================
address: 0x0000 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0001 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0002 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0003 instruction:  JMP adr;  PC <-- 0x18d4 opcodes:  0xc3 0xd4 0x18
address: 0x0006 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0007 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0008 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x0009 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x000a instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x000b instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x000c instruction:  JMP adr;  PC <-- 0x008c opcodes:  0xc3 0x8c 0x00
address: 0x000f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0010 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x0011 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x0012 instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x0013 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0014 instruction:  MVI A, D8; A <-- 0x80 opcodes:  0x3e 0x80 
address: 0x0016 instruction:  STA adr ; (0x2072) <-- A opcodes:  0x32 0x72 0x20
address: 0x0019 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xc0 opcodes:  0x21 0xc0 0x20
address: 0x001c instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x001d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x17cdopcodes:  0xcd 0xcd 0x17
address: 0x0020 instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x0022 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0023 instruction:  JC adr; if CY,  PC <-- 0x0067 opcodes:  0xda 0x67 0x00
address: 0x0026 instruction:  LDA adr; A <-- (0x20ea) opcodes:  0x3a 0xea 0x20
address: 0x0029 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x002a instruction:  JZ adr;  PC <-- 0x0042 opcodes:  0xca 0x42 0x00
address: 0x002d instruction:  LDA adr; A <-- (0x20eb) opcodes:  0x3a 0xeb 0x20
address: 0x0030 instruction:  CPI D8;  A - 0x99 opcodes:  0xfe 0x99 
address: 0x0032 instruction:  JZ adr;  PC <-- 0x003e opcodes:  0xca 0x3e 0x00
address: 0x0035 instruction:  ADI D8; A <-- A + 0x01 opcodes:  0xc6 0x01 
address: 0x0037 instruction:  DAA; special? opcodes:  0x27 
address: 0x0038 instruction:  STA adr ; (0x20eb) <-- A opcodes:  0x32 0xeb 0x20
address: 0x003b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1947opcodes:  0xcd 0x47 0x19
address: 0x003e instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x003f instruction:  STA adr ; (0x20ea) <-- A opcodes:  0x32 0xea 0x20
address: 0x0042 instruction:  LDA adr; A <-- (0x20e9) opcodes:  0x3a 0xe9 0x20
address: 0x0045 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0046 instruction:  JZ adr;  PC <-- 0x0082 opcodes:  0xca 0x82 0x00
address: 0x0049 instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x004c instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x004d instruction:  JNZ adr; if NZ, PC <-- 0x006f opcodes:  0xc2 0x6f 0x00
address: 0x0050 instruction:  LDA adr; A <-- (0x20eb) opcodes:  0x3a 0xeb 0x20
address: 0x0053 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0054 instruction:  JNZ adr; if NZ, PC <-- 0x005d opcodes:  0xc2 0x5d 0x00
address: 0x0057 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0abfopcodes:  0xcd 0xbf 0x0a
address: 0x005a instruction:  JMP adr;  PC <-- 0x0082 opcodes:  0xc3 0x82 0x00
address: 0x005d instruction:  LDA adr; A <-- (0x2093) opcodes:  0x3a 0x93 0x20
address: 0x0060 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0061 instruction:  JNZ adr; if NZ, PC <-- 0x0082 opcodes:  0xc2 0x82 0x00
address: 0x0064 instruction:  JMP adr;  PC <-- 0x0765 opcodes:  0xc3 0x65 0x07
address: 0x0067 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0069 instruction:  STA adr ; (0x20ea) <-- A opcodes:  0x32 0xea 0x20
address: 0x006c instruction:  JMP adr;  PC <-- 0x003f opcodes:  0xc3 0x3f 0x00
address: 0x006f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1740opcodes:  0xcd 0x40 0x17
address: 0x0072 instruction:  LDA adr; A <-- (0x2032) opcodes:  0x3a 0x32 0x20
address: 0x0075 instruction:  STA adr ; (0x2080) <-- A opcodes:  0x32 0x80 0x20
address: 0x0078 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0100opcodes:  0xcd 0x00 0x01
address: 0x007b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0248opcodes:  0xcd 0x48 0x02
address: 0x007e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0913opcodes:  0xcd 0x13 0x09
address: 0x0081 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0082 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0083 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x0084 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x0085 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x0086 instruction:  EI; special? opcodes:  0xfb 
address: 0x0087 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0088 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0089 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x008a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x008b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x008c instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x008d instruction:  STA adr ; (0x2072) <-- A opcodes:  0x32 0x72 0x20
address: 0x0090 instruction:  LDA adr; A <-- (0x20e9) opcodes:  0x3a 0xe9 0x20
address: 0x0093 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0094 instruction:  JZ adr;  PC <-- 0x0082 opcodes:  0xca 0x82 0x00
address: 0x0097 instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x009a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x009b instruction:  JNZ adr; if NZ, PC <-- 0x00a5 opcodes:  0xc2 0xa5 0x00
address: 0x009e instruction:  LDA adr; A <-- (0x20c1) opcodes:  0x3a 0xc1 0x20
address: 0x00a1 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x00a2 instruction:  JNC adr; if NCY, PC <-- 0x0082 opcodes:  0xd2 0x82 0x00
address: 0x00a5 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x20 opcodes:  0x21 0x20 0x20
address: 0x00a8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x024bopcodes:  0xcd 0x4b 0x02
address: 0x00ab instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0141opcodes:  0xcd 0x41 0x01
address: 0x00ae instruction:  JMP adr;  PC <-- 0x0082 opcodes:  0xc3 0x82 0x00
address: 0x00b1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0886opcodes:  0xcd 0x86 0x08
address: 0x00b4 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x00b5 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x00b6 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x00b7 instruction:  MOV H,M; H <-- (HL) opcodes:  0x66 
address: 0x00b8 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x00b9 instruction:  SHLD adr ; (0x2009) <-- L , (0x2009) + 1 <-- H opcodes:  0x22 0x09 0x20
address: 0x00bc instruction:  SHLD adr ; (0x200b) <-- L , (0x200b) + 1 <-- H opcodes:  0x22 0x0b 0x20
address: 0x00bf instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x00c0 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x00c1 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x00c2 instruction:  CPI D8;  A - 0x03 opcodes:  0xfe 0x03 
address: 0x00c4 instruction:  JNZ adr; if NZ, PC <-- 0x00c8 opcodes:  0xc2 0xc8 0x00
address: 0x00c7 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x00c8 instruction:  STA adr ; (0x2008) <-- A opcodes:  0x32 0x08 0x20
address: 0x00cb instruction:  CPI D8;  A - 0xfe opcodes:  0xfe 0xfe 
address: 0x00cd instruction:  MVI A, D8; A <-- 0x00 opcodes:  0x3e 0x00 
address: 0x00cf instruction:  JNZ adr; if NZ, PC <-- 0x00d3 opcodes:  0xc2 0xd3 0x00
address: 0x00d2 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x00d3 instruction:  STA adr ; (0x200d) <-- A opcodes:  0x32 0x0d 0x20
address: 0x00d6 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x00d7 instruction:  MVI A, D8; A <-- 0x02 opcodes:  0x3e 0x02 
address: 0x00d9 instruction:  STA adr ; (0x21fb) <-- A opcodes:  0x32 0xfb 0x21
address: 0x00dc instruction:  STA adr ; (0x22fb) <-- A opcodes:  0x32 0xfb 0x22
address: 0x00df instruction:  JMP adr;  PC <-- 0x08e4 opcodes:  0xc3 0xe4 0x08
address: 0x00e2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00e9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00eb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00f9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00fa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00fb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00fc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00fd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00fe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x00ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0100 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x02 opcodes:  0x21 0x02 0x20
address: 0x0103 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0104 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0105 instruction:  JNZ adr; if NZ, PC <-- 0x1538 opcodes:  0xc2 0x38 0x15
address: 0x0108 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0109 instruction:  LDA adr; A <-- (0x2006) opcodes:  0x3a 0x06 0x20
address: 0x010c instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x010d instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x0110 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x0111 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0112 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0113 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0114 instruction:  JZ adr;  PC <-- 0x0136 opcodes:  0xca 0x36 0x01
address: 0x0117 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0118 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0119 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x011a instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x011b instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x011c instruction:  ANI D8; A <-- A & 0xfe opcodes:  0xe6 0xfe 
address: 0x011e instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x011f instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x0120 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x0121 instruction:  MOV E,A; E <-- A opcodes:  0x5f 
address: 0x0122 instruction:  MVI D, D8;  D <-- 0x00 opcodes:  0x16 0x00 
address: 0x0124 instruction:  LXI H, D16; H <-- 0x1c L <-- 0x00 opcodes:  0x21 0x00 0x1c
address: 0x0127 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x0128 instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0x78 
address: 0x012a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x012b instruction:  CNZ adr;  if NZ, CALL 0x013b opcodes:  0xc4 0x3b 0x01
address: 0x012e instruction:  LHLD adr; (0x200b) <-- L , (0x200b) + 1 <-- H opcodes:  0x2a 0x0b 0x20
address: 0x0131 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x0133 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x15d3opcodes:  0xcd 0xd3 0x15
address: 0x0136 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0137 instruction:  STA adr ; (0x2000) <-- A opcodes:  0x32 0x00 0x20
address: 0x013a instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x013b instruction:  LXI H, D16; H <-- 0x00 L <-- 0x30 opcodes:  0x21 0x30 0x00
address: 0x013e instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x013f instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xc9 
address: 0x0141 instruction:  LDA adr; A <-- (0x2068) opcodes:  0x3a 0x68 0x20
address: 0x0144 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0145 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0146 instruction:  LDA adr; A <-- (0x2000) opcodes:  0x3a 0x00 0x20
address: 0x0149 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x014a instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x014b instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x014e instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x014f instruction:  LDA adr; A <-- (0x2006) opcodes:  0x3a 0x06 0x20
address: 0x0152 instruction:  MVI D, D8;  D <-- 0x02 opcodes:  0x16 0x02 
address: 0x0154 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0155 instruction:  CPI D8;  A - 0x37 opcodes:  0xfe 0x37 
address: 0x0157 instruction:  CZ adr;  if Z,  CALL 0x01a1 opcodes:  0xcc 0xa1 0x01
address: 0x015a instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x015b instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x015c instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x015d instruction:  JNZ adr; if NZ, PC <-- 0x0154 opcodes:  0xc2 0x54 0x01
address: 0x0160 instruction:  STA adr ; (0x2006) <-- A opcodes:  0x32 0x06 0x20
address: 0x0163 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x017aopcodes:  0xcd 0x7a 0x01
address: 0x0166 instruction:  MOV H,C; H <-- C opcodes:  0x61 
address: 0x0167 instruction:  SHLD adr ; (0x200b) <-- L , (0x200b) + 1 <-- H opcodes:  0x22 0x0b 0x20
address: 0x016a instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x016b instruction:  CPI D8;  A - 0x28 opcodes:  0xfe 0x28 
address: 0x016d instruction:  JC adr; if CY,  PC <-- 0x1971 opcodes:  0xda 0x71 0x19
address: 0x0170 instruction:  MOV A,D; A <--  Dopcodes:  0x7a 
address: 0x0171 instruction:  STA adr ; (0x2004) <-- A opcodes:  0x32 0x04 0x20
address: 0x0174 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0176 instruction:  STA adr ; (0x2000) <-- A opcodes:  0x32 0x00 0x20
address: 0x0179 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x017a instruction:  MVI D, D8;  D <-- 0x00 opcodes:  0x16 0x00 
address: 0x017c instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x017d instruction:  LXI H, D16; H <-- 0x20 L <-- 0x09 opcodes:  0x21 0x09 0x20
address: 0x0180 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x0181 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0182 instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x0183 instruction:  CPI D8;  A - 0x0b opcodes:  0xfe 0x0b 
address: 0x0185 instruction:  JM adr; if M,  PC <-- 0x0194 opcodes:  0xfa 0x94 0x01
address: 0x0188 instruction:  SBI D8;  A <-- A - 0x0b - CY opcodes:  0xde 0x0b 
address: 0x018a instruction:  MOV E,A; E <-- A opcodes:  0x5f 
address: 0x018b instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x018c instruction:  ADI D8; A <-- A + 0x10 opcodes:  0xc6 0x10 
address: 0x018e instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x018f instruction:  MOV A,E; A <-- E opcodes:  0x7b 
address: 0x0190 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x0191 instruction:  JMP adr;  PC <-- 0x0183 opcodes:  0xc3 0x83 0x01
address: 0x0194 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x0195 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0196 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0197 instruction:  MOV E,A; E <-- A opcodes:  0x5f 
address: 0x0198 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x0199 instruction:  ADI D8; A <-- A + 0x10 opcodes:  0xc6 0x10 
address: 0x019b instruction:  MOV C,A; C <-- A opcodes:  0x4f 
address: 0x019c instruction:  MOV A,E; A <-- E opcodes:  0x7b 
address: 0x019d instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x019e instruction:  JMP adr;  PC <-- 0x0195 opcodes:  0xc3 0x95 0x01
address: 0x01a1 instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x01a2 instruction:  JZ adr;  PC <-- 0x01cd opcodes:  0xca 0xcd 0x01
address: 0x01a5 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x06 opcodes:  0x21 0x06 0x20
address: 0x01a8 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x01aa instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x01ab instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x01ac instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x01ae instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01d9opcodes:  0xcd 0xd9 0x01
address: 0x01b1 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x05 opcodes:  0x21 0x05 0x20
address: 0x01b4 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x01b5 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x01b6 instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x01b8 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x01b9 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x01ba instruction:  LXI H, D16; H <-- 0x20 L <-- 0x67 opcodes:  0x21 0x67 0x20
address: 0x01bd instruction:  MOV H,M; H <-- (HL) opcodes:  0x66 
address: 0x01be instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x01bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x01c0 instruction:  LXI H, D16; H <-- 0x21 L <-- 0x00 opcodes:  0x21 0x00 0x21
address: 0x01c3 instruction:  MVI B, D8;  B <-- 0x37 opcodes:  0x06 0x37 
address: 0x01c5 instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x01c7 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x01c8 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x01c9 instruction:  JNZ adr; if NZ, PC <-- 0x01c5 opcodes:  0xc2 0xc5 0x01
address: 0x01cc instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x01cd instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x01ce instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x01cf instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x01d1 instruction:  MVI B, D8;  B <-- 0xe0 opcodes:  0x06 0xe0 
address: 0x01d3 instruction:  LXI H, D16; H <-- 0x24 L <-- 0x02 opcodes:  0x21 0x02 0x24
address: 0x01d6 instruction:  JMP adr;  PC <-- 0x14cc opcodes:  0xc3 0xcc 0x14
address: 0x01d9 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x01da instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x01db instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x01dc instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x01dd instruction:  ADD M; A <-- A + (HL) opcodes:  0x86 
address: 0x01de instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x01df instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x01e0 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x01e1 instruction:  ADD M; A <-- A + (HL) opcodes:  0x86 
address: 0x01e2 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x01e3 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x01e4 instruction:  MVI B, D8;  B <-- 0xc0 opcodes:  0x06 0xc0 
address: 0x01e6 instruction:  LXI D, D16; D <-- 0x1b E <-- 0x00 opcodes:  0x11 0x00 0x1b
address: 0x01e9 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x00 opcodes:  0x21 0x00 0x20
address: 0x01ec instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x01ef instruction:  LXI H, D16; H <-- 0x21 L <-- 0x42 opcodes:  0x21 0x42 0x21
address: 0x01f2 instruction:  JMP adr;  PC <-- 0x01f8 opcodes:  0xc3 0xf8 0x01
address: 0x01f5 instruction:  LXI H, D16; H <-- 0x22 L <-- 0x42 opcodes:  0x21 0x42 0x22
address: 0x01f8 instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x01fa instruction:  LXI D, D16; D <-- 0x1d E <-- 0x20 opcodes:  0x11 0x20 0x1d
address: 0x01fd instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x01fe instruction:  MVI B, D8;  B <-- 0x2c opcodes:  0x06 0x2c 
address: 0x0200 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x0203 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x0204 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x0205 instruction:  JNZ adr; if NZ, PC <-- 0x01fd opcodes:  0xc2 0xfd 0x01
address: 0x0208 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0209 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x020b instruction:  JMP adr;  PC <-- 0x021b opcodes:  0xc3 0x1b 0x02
address: 0x020e instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0210 instruction:  JMP adr;  PC <-- 0x0214 opcodes:  0xc3 0x14 0x02
address: 0x0213 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0214 instruction:  LXI D, D16; D <-- 0x22 E <-- 0x42 opcodes:  0x11 0x42 0x22
address: 0x0217 instruction:  JMP adr;  PC <-- 0x021e opcodes:  0xc3 0x1e 0x02
address: 0x021a instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x021b instruction:  LXI D, D16; D <-- 0x21 E <-- 0x42 opcodes:  0x11 0x42 0x21
address: 0x021e instruction:  STA adr ; (0x2081) <-- A opcodes:  0x32 0x81 0x20
address: 0x0221 instruction:  LXI B, D16; B<--0x16 C<--0x02 opcodes:  0x01 0x02 0x16
address: 0x0224 instruction:  LXI H, D16; H <-- 0x28 L <-- 0x06 opcodes:  0x21 0x06 0x28
address: 0x0227 instruction:  MVI A, D8; A <-- 0x04 opcodes:  0x3e 0x04 
address: 0x0229 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x022a instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x022b instruction:  LDA adr; A <-- (0x2081) opcodes:  0x3a 0x81 0x20
address: 0x022e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x022f instruction:  JNZ adr; if NZ, PC <-- 0x0242 opcodes:  0xc2 0x42 0x02
address: 0x0232 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a69opcodes:  0xcd 0x69 0x1a
address: 0x0235 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x0236 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x0237 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0238 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0239 instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x023a instruction:  LXI D, D16; D <-- 0x02 E <-- 0xe0 opcodes:  0x11 0xe0 0x02
address: 0x023d instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x023e instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x023f instruction:  JMP adr;  PC <-- 0x0229 opcodes:  0xc3 0x29 0x02
address: 0x0242 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x147copcodes:  0xcd 0x7c 0x14
address: 0x0245 instruction:  JMP adr;  PC <-- 0x0235 opcodes:  0xc3 0x35 0x02
address: 0x0248 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x10 opcodes:  0x21 0x10 0x20
address: 0x024b instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x024c instruction:  CPI D8;  A - 0xff opcodes:  0xfe 0xff 
address: 0x024e instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x024f instruction:  CPI D8;  A - 0xfe opcodes:  0xfe 0xfe 
address: 0x0251 instruction:  JZ adr;  PC <-- 0x0281 opcodes:  0xca 0x81 0x02
address: 0x0254 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0255 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x0256 instruction:  MOV C,A; C <-- A opcodes:  0x4f 
address: 0x0257 instruction:  ORA B; A <-- A | B opcodes:  0xb0 
address: 0x0258 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x0259 instruction:  JNZ adr; if NZ, PC <-- 0x0277 opcodes:  0xc2 0x77 0x02
address: 0x025c instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x025d instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x025e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x025f instruction:  JNZ adr; if NZ, PC <-- 0x0288 opcodes:  0xc2 0x88 0x02
address: 0x0262 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0263 instruction:  MOV E,M; E <-- (HL) opcodes:  0x5e 
address: 0x0264 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0265 instruction:  MOV D,M; D <-- (HL) opcodes:  0x56 
address: 0x0266 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0267 instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xe5 
address: 0x0269 instruction:  LXI H, D16; H <-- 0x02 L <-- 0x6f opcodes:  0x21 0x6f 0x02
address: 0x026c instruction:  XTHL;  L <-> (SP); H <-> (SP+1) opcodes:  0xe3 
address: 0x026d instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x026e instruction:  PCHL; PC.hi <- H; PC.lo <- L opcodes:  0xe9 
address: 0x026f instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0270 instruction:  LXI D, D16; D <-- 0x00 E <-- 0x0c opcodes:  0x11 0x0c 0x00
address: 0x0273 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x0274 instruction:  JMP adr;  PC <-- 0x024b opcodes:  0xc3 0x4b 0x02
address: 0x0277 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x0278 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x0279 instruction:  JNZ adr; if NZ, PC <-- 0x027d opcodes:  0xc2 0x7d 0x02
address: 0x027c instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x027d instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x027e instruction:  MOV M,B; (HL) <-- B opcodes:  0x70 
address: 0x027f instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0280 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0281 instruction:  LXI D, D16; D <-- 0x00 E <-- 0x10 opcodes:  0x11 0x10 0x00
address: 0x0284 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x0285 instruction:  JMP adr;  PC <-- 0x024b opcodes:  0xc3 0x4b 0x02
address: 0x0288 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x0289 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x028a instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x028b instruction:  JMP adr;  PC <-- 0x0281 opcodes:  0xc3 0x81 0x02
address: 0x028e instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x028f instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0290 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0291 instruction:  CPI D8;  A - 0xff opcodes:  0xfe 0xff 
address: 0x0293 instruction:  JZ adr;  PC <-- 0x033b opcodes:  0xca 0x3b 0x03
address: 0x0296 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0297 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x0298 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x0299 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x029a instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x029b instruction:  STA adr ; (0x2068) <-- A opcodes:  0x32 0x68 0x20
address: 0x029e instruction:  STA adr ; (0x2069) <-- A opcodes:  0x32 0x69 0x20
address: 0x02a1 instruction:  MVI A, D8; A <-- 0x30 opcodes:  0x3e 0x30 
address: 0x02a3 instruction:  STA adr ; (0x206a) <-- A opcodes:  0x32 0x6a 0x20
address: 0x02a6 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x02a7 instruction:  MVI M, D8;  (HL) <-- 0x05 opcodes:  0x36 0x05 
address: 0x02a9 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x02aa instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x02ab instruction:  JNZ adr; if NZ, PC <-- 0x039b opcodes:  0xc2 0x9b 0x03
address: 0x02ae instruction:  LHLD adr; (0x201a) <-- L , (0x201a) + 1 <-- H opcodes:  0x2a 0x1a 0x20
address: 0x02b1 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x02b3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1424opcodes:  0xcd 0x24 0x14
address: 0x02b6 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x10 opcodes:  0x21 0x10 0x20
address: 0x02b9 instruction:  LXI D, D16; D <-- 0x1b E <-- 0x10 opcodes:  0x11 0x10 0x1b
address: 0x02bc instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x02be instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x02c1 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x02c3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19dcopcodes:  0xcd 0xdc 0x19
address: 0x02c6 instruction:  LDA adr; A <-- (0x206d) opcodes:  0x3a 0x6d 0x20
address: 0x02c9 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x02ca instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x02cb instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x02ce instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x02cf instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x02d0 instruction:  LXI SP, D16; SP.hi <-- 0x24 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x24
address: 0x02d3 instruction:  EI; special? opcodes:  0xfb 
address: 0x02d4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d7opcodes:  0xcd 0xd7 0x19
address: 0x02d7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x092eopcodes:  0xcd 0x2e 0x09
address: 0x02da instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x02db instruction:  JZ adr;  PC <-- 0x166d opcodes:  0xca 0x6d 0x16
address: 0x02de instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18e7opcodes:  0xcd 0xe7 0x18
address: 0x02e1 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x02e2 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x02e3 instruction:  JZ adr;  PC <-- 0x032c opcodes:  0xca 0x2c 0x03
address: 0x02e6 instruction:  LDA adr; A <-- (0x20ce) opcodes:  0x3a 0xce 0x20
address: 0x02e9 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x02ea instruction:  JZ adr;  PC <-- 0x032c opcodes:  0xca 0x2c 0x03
address: 0x02ed instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x02f0 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x02f1 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x02f2 instruction:  JC adr; if CY,  PC <-- 0x0332 opcodes:  0xda 0x32 0x03
address: 0x02f5 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x020eopcodes:  0xcd 0x0e 0x02
address: 0x02f8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0878opcodes:  0xcd 0x78 0x08
address: 0x02fb instruction:  MOV M,E; (HL) <-- E opcodes:  0x73 
address: 0x02fc instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x02fd instruction:  MOV M,D; (HL) <-- D opcodes:  0x72 
address: 0x02fe instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x02ff instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0300 instruction:  MOV M,B; (HL) <-- B opcodes:  0x70 
address: 0x0301 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0302 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01e4opcodes:  0xcd 0xe4 0x01
address: 0x0305 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x0306 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0307 instruction:  MVI A, D8; A <-- 0x21 opcodes:  0x3e 0x21 
address: 0x0309 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x030b instruction:  JNC adr; if NCY, PC <-- 0x0312 opcodes:  0xd2 0x12 0x03
address: 0x030e instruction:  MVI B, D8;  B <-- 0x20 opcodes:  0x06 0x20 
address: 0x0310 instruction:  MVI A, D8; A <-- 0x22 opcodes:  0x3e 0x22 
address: 0x0312 instruction:  STA adr ; (0x2067) <-- A opcodes:  0x32 0x67 0x20
address: 0x0315 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab6opcodes:  0xcd 0xb6 0x0a
address: 0x0318 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0319 instruction:  STA adr ; (0x2011) <-- A opcodes:  0x32 0x11 0x20
address: 0x031c instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x031d instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x031f instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0320 instruction:  STA adr ; (0x2098) <-- A opcodes:  0x32 0x98 0x20
address: 0x0323 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x0326 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a7fopcodes:  0xcd 0x7f 0x1a
address: 0x0329 instruction:  JMP adr;  PC <-- 0x07f9 opcodes:  0xc3 0xf9 0x07
address: 0x032c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a7fopcodes:  0xcd 0x7f 0x1a
address: 0x032f instruction:  JMP adr;  PC <-- 0x0817 opcodes:  0xc3 0x17 0x08
address: 0x0332 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0209opcodes:  0xcd 0x09 0x02
address: 0x0335 instruction:  JMP adr;  PC <-- 0x02f8 opcodes:  0xc3 0xf8 0x02
address: 0x0338 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0339 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x033a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x033b instruction:  LXI H, D16; H <-- 0x20 L <-- 0x68 opcodes:  0x21 0x68 0x20
address: 0x033e instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x0340 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0341 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0342 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0343 instruction:  JMP adr;  PC <-- 0x03b0 opcodes:  0xc3 0xb0 0x03
address: 0x0346 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0347 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0348 instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x034a instruction:  LDA adr; A <-- (0x201b) opcodes:  0x3a 0x1b 0x20
address: 0x034d instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x034e instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x0351 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0352 instruction:  JNZ adr; if NZ, PC <-- 0x0363 opcodes:  0xc2 0x63 0x03
address: 0x0355 instruction:  LDA adr; A <-- (0x201d) opcodes:  0x3a 0x1d 0x20
address: 0x0358 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0359 instruction:  JC adr; if CY,  PC <-- 0x0381 opcodes:  0xda 0x81 0x03
address: 0x035c instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x035d instruction:  JC adr; if CY,  PC <-- 0x038e opcodes:  0xda 0x8e 0x03
address: 0x0360 instruction:  JMP adr;  PC <-- 0x036f opcodes:  0xc3 0x6f 0x03
address: 0x0363 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x17c0opcodes:  0xcd 0xc0 0x17
address: 0x0366 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x0367 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x0368 instruction:  JC adr; if CY,  PC <-- 0x0381 opcodes:  0xda 0x81 0x03
address: 0x036b instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x036c instruction:  JC adr; if CY,  PC <-- 0x038e opcodes:  0xda 0x8e 0x03
address: 0x036f instruction:  LXI H, D16; H <-- 0x20 L <-- 0x18 opcodes:  0x21 0x18 0x20
address: 0x0372 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x0375 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a47opcodes:  0xcd 0x47 0x1a
address: 0x0378 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1439opcodes:  0xcd 0x39 0x14
address: 0x037b instruction:  MVI A, D8; A <-- 0x00 opcodes:  0x3e 0x00 
address: 0x037d instruction:  STA adr ; (0x2012) <-- A opcodes:  0x32 0x12 0x20
address: 0x0380 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0381 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x0382 instruction:  CPI D8;  A - 0xd9 opcodes:  0xfe 0xd9 
address: 0x0384 instruction:  JZ adr;  PC <-- 0x036f opcodes:  0xca 0x6f 0x03
address: 0x0387 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0388 instruction:  STA adr ; (0x201b) <-- A opcodes:  0x32 0x1b 0x20
address: 0x038b instruction:  JMP adr;  PC <-- 0x036f opcodes:  0xc3 0x6f 0x03
address: 0x038e instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x038f instruction:  CPI D8;  A - 0x30 opcodes:  0xfe 0x30 
address: 0x0391 instruction:  JZ adr;  PC <-- 0x036f opcodes:  0xca 0x6f 0x03
address: 0x0394 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0395 instruction:  STA adr ; (0x201b) <-- A opcodes:  0x32 0x1b 0x20
address: 0x0398 instruction:  JMP adr;  PC <-- 0x036f opcodes:  0xc3 0x6f 0x03
address: 0x039b instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x039c instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x039e instruction:  STA adr ; (0x2015) <-- A opcodes:  0x32 0x15 0x20
address: 0x03a1 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x03a2 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x03a3 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x03a4 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x03a5 instruction:  LXI H, D16; H <-- 0x1c L <-- 0x70 opcodes:  0x21 0x70 0x1c
address: 0x03a8 instruction:  ADD L; A <-- A + L opcodes:  0x85 
address: 0x03a9 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x03aa instruction:  SHLD adr ; (0x2018) <-- L , (0x2018) + 1 <-- H opcodes:  0x22 0x18 0x20
address: 0x03ad instruction:  JMP adr;  PC <-- 0x036f opcodes:  0xc3 0x6f 0x03
address: 0x03b0 instruction:  JNZ adr; if NZ, PC <-- 0x034a opcodes:  0xc2 0x4a 0x03
address: 0x03b3 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03b4 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03b5 instruction:  JNZ adr; if NZ, PC <-- 0x034a opcodes:  0xc2 0x4a 0x03
address: 0x03b8 instruction:  JMP adr;  PC <-- 0x0346 opcodes:  0xc3 0x46 0x03
address: 0x03bb instruction:  LXI D, D16; D <-- 0x20 E <-- 0x2a opcodes:  0x11 0x2a 0x20
address: 0x03be instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a06opcodes:  0xcd 0x06 0x1a
address: 0x03c1 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x03c2 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x03c3 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03c4 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x03c5 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x03c6 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x03c7 instruction:  CPI D8;  A - 0x01 opcodes:  0xfe 0x01 
address: 0x03c9 instruction:  JZ adr;  PC <-- 0x03fa opcodes:  0xca 0xfa 0x03
address: 0x03cc instruction:  CPI D8;  A - 0x02 opcodes:  0xfe 0x02 
address: 0x03ce instruction:  JZ adr;  PC <-- 0x040a opcodes:  0xca 0x0a 0x04
address: 0x03d1 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03d2 instruction:  CPI D8;  A - 0x03 opcodes:  0xfe 0x03 
address: 0x03d4 instruction:  JNZ adr; if NZ, PC <-- 0x042a opcodes:  0xc2 0x2a 0x04
address: 0x03d7 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03d8 instruction:  JZ adr;  PC <-- 0x0436 opcodes:  0xca 0x36 0x04
address: 0x03db instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x03dc instruction:  CPI D8;  A - 0x0f opcodes:  0xfe 0x0f 
address: 0x03de instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x03df instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x03e0 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0430opcodes:  0xcd 0x30 0x04
address: 0x03e3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1452opcodes:  0xcd 0x52 0x14
address: 0x03e6 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x03e7 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03e8 instruction:  INR M; (HL) <-- (HL) + 1 opcodes:  0x34 
address: 0x03e9 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03ea instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03eb instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03ec instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03ed instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03ee instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03ef instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03f0 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x03f1 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x03f2 instruction:  MVI M, D8;  (HL) <-- 0x08 opcodes:  0x36 0x08 
address: 0x03f4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0430opcodes:  0xcd 0x30 0x04
address: 0x03f7 instruction:  JMP adr;  PC <-- 0x1400 opcodes:  0xc3 0x00 0x14
address: 0x03fa instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x03fb instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x03fc instruction:  LDA adr; A <-- (0x201b) opcodes:  0x3a 0x1b 0x20
address: 0x03ff instruction:  ADI D8; A <-- A + 0x08 opcodes:  0xc6 0x08 
address: 0x0401 instruction:  STA adr ; (0x202a) <-- A opcodes:  0x32 0x2a 0x20
address: 0x0404 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0430opcodes:  0xcd 0x30 0x04
address: 0x0407 instruction:  JMP adr;  PC <-- 0x1400 opcodes:  0xc3 0x00 0x14
address: 0x040a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0430opcodes:  0xcd 0x30 0x04
address: 0x040d instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x040e instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x040f instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x0410 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1452opcodes:  0xcd 0x52 0x14
address: 0x0413 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x0414 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0415 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x0416 instruction:  LDA adr; A <-- (0x202c) opcodes:  0x3a 0x2c 0x20
address: 0x0419 instruction:  ADD L; A <-- A + L opcodes:  0x85 
address: 0x041a instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x041b instruction:  STA adr ; (0x2029) <-- A opcodes:  0x32 0x29 0x20
address: 0x041e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1491opcodes:  0xcd 0x91 0x14
address: 0x0421 instruction:  LDA adr; A <-- (0x2061) opcodes:  0x3a 0x61 0x20
address: 0x0424 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0425 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0426 instruction:  STA adr ; (0x2002) <-- A opcodes:  0x32 0x02 0x20
address: 0x0429 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x042a instruction:  CPI D8;  A - 0x05 opcodes:  0xfe 0x05 
address: 0x042c instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x042d instruction:  JMP adr;  PC <-- 0x0436 opcodes:  0xc3 0x36 0x04
address: 0x0430 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x27 opcodes:  0x21 0x27 0x20
address: 0x0433 instruction:  JMP adr;  PC <-- 0x1a3b opcodes:  0xc3 0x3b 0x1a
address: 0x0436 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0430opcodes:  0xcd 0x30 0x04
address: 0x0439 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1452opcodes:  0xcd 0x52 0x14
address: 0x043c instruction:  LXI H, D16; H <-- 0x20 L <-- 0x25 opcodes:  0x21 0x25 0x20
address: 0x043f instruction:  LXI D, D16; D <-- 0x1b E <-- 0x25 opcodes:  0x11 0x25 0x1b
address: 0x0442 instruction:  MVI B, D8;  B <-- 0x07 opcodes:  0x06 0x07 
address: 0x0444 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x0447 instruction:  LHLD adr; (0x208d) <-- L , (0x208d) + 1 <-- H opcodes:  0x2a 0x8d 0x20
address: 0x044a instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x044b instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x044c instruction:  CPI D8;  A - 0x63 opcodes:  0xfe 0x63 
address: 0x044e instruction:  JC adr; if CY,  PC <-- 0x0453 opcodes:  0xda 0x53 0x04
address: 0x0451 instruction:  MVI L, D8; L <-- 0x54 opcodes:  0x2e 0x54 
address: 0x0453 instruction:  SHLD adr ; (0x208d) <-- L , (0x208d) + 1 <-- H opcodes:  0x22 0x8d 0x20
address: 0x0456 instruction:  LHLD adr; (0x208f) <-- L , (0x208f) + 1 <-- H opcodes:  0x2a 0x8f 0x20
address: 0x0459 instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x045a instruction:  SHLD adr ; (0x208f) <-- L , (0x208f) + 1 <-- H opcodes:  0x22 0x8f 0x20
address: 0x045d instruction:  LDA adr; A <-- (0x2084) opcodes:  0x3a 0x84 0x20
address: 0x0460 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0461 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x0462 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0463 instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x0465 instruction:  LXI B, D16; B<--0x02 C<--0x29 opcodes:  0x01 0x29 0x02
address: 0x0468 instruction:  JNZ adr; if NZ, PC <-- 0x046e opcodes:  0xc2 0x6e 0x04
address: 0x046b instruction:  LXI B, D16; B<--0xfe C<--0xe0 opcodes:  0x01 0xe0 0xfe
address: 0x046e instruction:  LXI H, D16; H <-- 0x20 L <-- 0x8a opcodes:  0x21 0x8a 0x20
address: 0x0471 instruction:  MOV M,C; (HL) <-- C opcodes:  0x71 
address: 0x0472 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0473 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0474 instruction:  MOV M,B; (HL) <-- B opcodes:  0x70 
address: 0x0475 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0476 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0477 instruction:  LDA adr; A <-- (0x1b32) opcodes:  0x3a 0x32 0x1b
address: 0x047a instruction:  STA adr ; (0x2032) <-- A opcodes:  0x32 0x32 0x20
address: 0x047d instruction:  LHLD adr; (0x2038) <-- L , (0x2038) + 1 <-- H opcodes:  0x2a 0x38 0x20
address: 0x0480 instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x0481 instruction:  ORA H; A <-- A | H opcodes:  0xb4 
address: 0x0482 instruction:  JNZ adr; if NZ, PC <-- 0x048a opcodes:  0xc2 0x8a 0x04
address: 0x0485 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0486 instruction:  SHLD adr ; (0x2038) <-- L , (0x2038) + 1 <-- H opcodes:  0x22 0x38 0x20
address: 0x0489 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x048a instruction:  LXI D, D16; D <-- 0x20 E <-- 0x35 opcodes:  0x11 0x35 0x20
address: 0x048d instruction:  MVI A, D8; A <-- 0xf9 opcodes:  0x3e 0xf9 
address: 0x048f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0550opcodes:  0xcd 0x50 0x05
address: 0x0492 instruction:  LDA adr; A <-- (0x2046) opcodes:  0x3a 0x46 0x20
address: 0x0495 instruction:  STA adr ; (0x2070) <-- A opcodes:  0x32 0x70 0x20
address: 0x0498 instruction:  LDA adr; A <-- (0x2056) opcodes:  0x3a 0x56 0x20
address: 0x049b instruction:  STA adr ; (0x2071) <-- A opcodes:  0x32 0x71 0x20
address: 0x049e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0563opcodes:  0xcd 0x63 0x05
address: 0x04a1 instruction:  LDA adr; A <-- (0x2078) opcodes:  0x3a 0x78 0x20
address: 0x04a4 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x04a5 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x35 opcodes:  0x21 0x35 0x20
address: 0x04a8 instruction:  JNZ adr; if NZ, PC <-- 0x055b opcodes:  0xc2 0x5b 0x05
address: 0x04ab instruction:  LXI D, D16; D <-- 0x1b E <-- 0x30 opcodes:  0x11 0x30 0x1b
address: 0x04ae instruction:  LXI H, D16; H <-- 0x20 L <-- 0x30 opcodes:  0x21 0x30 0x20
address: 0x04b1 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x04b3 instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x04b6 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x04b7 instruction:  LDA adr; A <-- (0x206e) opcodes:  0x3a 0x6e 0x20
address: 0x04ba instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x04bb instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x04bc instruction:  LDA adr; A <-- (0x2080) opcodes:  0x3a 0x80 0x20
address: 0x04bf instruction:  CPI D8;  A - 0x01 opcodes:  0xfe 0x01 
address: 0x04c1 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x04c2 instruction:  LXI D, D16; D <-- 0x20 E <-- 0x45 opcodes:  0x11 0x45 0x20
address: 0x04c5 instruction:  MVI A, D8; A <-- 0xed opcodes:  0x3e 0xed 
address: 0x04c7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0550opcodes:  0xcd 0x50 0x05
address: 0x04ca instruction:  LDA adr; A <-- (0x2036) opcodes:  0x3a 0x36 0x20
address: 0x04cd instruction:  STA adr ; (0x2070) <-- A opcodes:  0x32 0x70 0x20
address: 0x04d0 instruction:  LDA adr; A <-- (0x2056) opcodes:  0x3a 0x56 0x20
address: 0x04d3 instruction:  STA adr ; (0x2071) <-- A opcodes:  0x32 0x71 0x20
address: 0x04d6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0563opcodes:  0xcd 0x63 0x05
address: 0x04d9 instruction:  LDA adr; A <-- (0x2076) opcodes:  0x3a 0x76 0x20
address: 0x04dc instruction:  CPI D8;  A - 0x10 opcodes:  0xfe 0x10 
address: 0x04de instruction:  JC adr; if CY,  PC <-- 0x04e7 opcodes:  0xda 0xe7 0x04
address: 0x04e1 instruction:  LDA adr; A <-- (0x1b48) opcodes:  0x3a 0x48 0x1b
address: 0x04e4 instruction:  STA adr ; (0x2076) <-- A opcodes:  0x32 0x76 0x20
address: 0x04e7 instruction:  LDA adr; A <-- (0x2078) opcodes:  0x3a 0x78 0x20
address: 0x04ea instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x04eb instruction:  LXI H, D16; H <-- 0x20 L <-- 0x45 opcodes:  0x21 0x45 0x20
address: 0x04ee instruction:  JNZ adr; if NZ, PC <-- 0x055b opcodes:  0xc2 0x5b 0x05
address: 0x04f1 instruction:  LXI D, D16; D <-- 0x1b E <-- 0x40 opcodes:  0x11 0x40 0x1b
address: 0x04f4 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x40 opcodes:  0x21 0x40 0x20
address: 0x04f7 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x04f9 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x04fc instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x04ff instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0500 instruction:  JNZ adr; if NZ, PC <-- 0x0508 opcodes:  0xc2 0x08 0x05
address: 0x0503 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0505 instruction:  STA adr ; (0x206e) <-- A opcodes:  0x32 0x6e 0x20
address: 0x0508 instruction:  LHLD adr; (0x2076) <-- L , (0x2076) + 1 <-- H opcodes:  0x2a 0x76 0x20
address: 0x050b instruction:  JMP adr;  PC <-- 0x067e opcodes:  0xc3 0x7e 0x06
address: 0x050e instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x050f instruction:  LXI D, D16; D <-- 0x20 E <-- 0x55 opcodes:  0x11 0x55 0x20
address: 0x0512 instruction:  MVI A, D8; A <-- 0xdb opcodes:  0x3e 0xdb 
address: 0x0514 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0550opcodes:  0xcd 0x50 0x05
address: 0x0517 instruction:  LDA adr; A <-- (0x2046) opcodes:  0x3a 0x46 0x20
address: 0x051a instruction:  STA adr ; (0x2070) <-- A opcodes:  0x32 0x70 0x20
address: 0x051d instruction:  LDA adr; A <-- (0x2036) opcodes:  0x3a 0x36 0x20
address: 0x0520 instruction:  STA adr ; (0x2071) <-- A opcodes:  0x32 0x71 0x20
address: 0x0523 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0563opcodes:  0xcd 0x63 0x05
address: 0x0526 instruction:  LDA adr; A <-- (0x2076) opcodes:  0x3a 0x76 0x20
address: 0x0529 instruction:  CPI D8;  A - 0x15 opcodes:  0xfe 0x15 
address: 0x052b instruction:  JC adr; if CY,  PC <-- 0x0534 opcodes:  0xda 0x34 0x05
address: 0x052e instruction:  LDA adr; A <-- (0x1b58) opcodes:  0x3a 0x58 0x1b
address: 0x0531 instruction:  STA adr ; (0x2076) <-- A opcodes:  0x32 0x76 0x20
address: 0x0534 instruction:  LDA adr; A <-- (0x2078) opcodes:  0x3a 0x78 0x20
address: 0x0537 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0538 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x55 opcodes:  0x21 0x55 0x20
address: 0x053b instruction:  JNZ adr; if NZ, PC <-- 0x055b opcodes:  0xc2 0x5b 0x05
address: 0x053e instruction:  LXI D, D16; D <-- 0x1b E <-- 0x50 opcodes:  0x11 0x50 0x1b
address: 0x0541 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x50 opcodes:  0x21 0x50 0x20
address: 0x0544 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x0546 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x0549 instruction:  LHLD adr; (0x2076) <-- L , (0x2076) + 1 <-- H opcodes:  0x2a 0x76 0x20
address: 0x054c instruction:  SHLD adr ; (0x2058) <-- L , (0x2058) + 1 <-- H opcodes:  0x22 0x58 0x20
address: 0x054f instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0550 instruction:  STA adr ; (0x207f) <-- A opcodes:  0x32 0x7f 0x20
address: 0x0553 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x73 opcodes:  0x21 0x73 0x20
address: 0x0556 instruction:  MVI B, D8;  B <-- 0x0b opcodes:  0x06 0x0b 
address: 0x0558 instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x055b instruction:  LXI D, D16; D <-- 0x20 E <-- 0x73 opcodes:  0x11 0x73 0x20
address: 0x055e instruction:  MVI B, D8;  B <-- 0x0b opcodes:  0x06 0x0b 
address: 0x0560 instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x0563 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x73 opcodes:  0x21 0x73 0x20
address: 0x0566 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0567 instruction:  ANI D8; A <-- A & 0x80 opcodes:  0xe6 0x80 
address: 0x0569 instruction:  JNZ adr; if NZ, PC <-- 0x05c1 opcodes:  0xc2 0xc1 0x05
address: 0x056c instruction:  LDA adr; A <-- (0x20c1) opcodes:  0x3a 0xc1 0x20
address: 0x056f instruction:  CPI D8;  A - 0x04 opcodes:  0xfe 0x04 
address: 0x0571 instruction:  LDA adr; A <-- (0x2069) opcodes:  0x3a 0x69 0x20
address: 0x0574 instruction:  JZ adr;  PC <-- 0x05b7 opcodes:  0xca 0xb7 0x05
address: 0x0577 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0578 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0579 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x057a instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x057c instruction:  LDA adr; A <-- (0x2070) opcodes:  0x3a 0x70 0x20
address: 0x057f instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0580 instruction:  JZ adr;  PC <-- 0x0589 opcodes:  0xca 0x89 0x05
address: 0x0583 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x0584 instruction:  LDA adr; A <-- (0x20cf) opcodes:  0x3a 0xcf 0x20
address: 0x0587 instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x0588 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x0589 instruction:  LDA adr; A <-- (0x2071) opcodes:  0x3a 0x71 0x20
address: 0x058c instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x058d instruction:  JZ adr;  PC <-- 0x0596 opcodes:  0xca 0x96 0x05
address: 0x0590 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x0591 instruction:  LDA adr; A <-- (0x20cf) opcodes:  0x3a 0xcf 0x20
address: 0x0594 instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x0595 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x0596 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0597 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0598 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0599 instruction:  JZ adr;  PC <-- 0x061b opcodes:  0xca 0x1b 0x06
address: 0x059c instruction:  LHLD adr; (0x2076) <-- L , (0x2076) + 1 <-- H opcodes:  0x2a 0x76 0x20
address: 0x059f instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x05a0 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x05a1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x05a2 instruction:  SHLD adr ; (0x2076) <-- L , (0x2076) + 1 <-- H opcodes:  0x22 0x76 0x20
address: 0x05a5 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x062fopcodes:  0xcd 0x2f 0x06
address: 0x05a8 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x05a9 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x017aopcodes:  0xcd 0x7a 0x01
address: 0x05ac instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x05ad instruction:  ADI D8; A <-- A + 0x07 opcodes:  0xc6 0x07 
address: 0x05af instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x05b0 instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x05b1 instruction:  SUI D8; A <-- A - 0x0a opcodes:  0xd6 0x0a 
address: 0x05b3 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x05b4 instruction:  SHLD adr ; (0x207b) <-- L , (0x207b) + 1 <-- H opcodes:  0x22 0x7b 0x20
address: 0x05b7 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x73 opcodes:  0x21 0x73 0x20
address: 0x05ba instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x05bb instruction:  ORI D8; A <-- A | 0x80 opcodes:  0xf6 0x80 
address: 0x05bd instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x05be instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x05bf instruction:  INR M; (HL) <-- (HL) + 1 opcodes:  0x34 
address: 0x05c0 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x05c1 instruction:  LXI D, D16; D <-- 0x20 E <-- 0x7c opcodes:  0x11 0x7c 0x20
address: 0x05c4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a06opcodes:  0xcd 0x06 0x1a
address: 0x05c7 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x05c8 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x05c9 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x05ca instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x05cc instruction:  JNZ adr; if NZ, PC <-- 0x0644 opcodes:  0xc2 0x44 0x06
address: 0x05cf instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x05d0 instruction:  INR M; (HL) <-- (HL) + 1 opcodes:  0x34 
address: 0x05d1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0675opcodes:  0xcd 0x75 0x06
address: 0x05d4 instruction:  LDA adr; A <-- (0x2079) opcodes:  0x3a 0x79 0x20
address: 0x05d7 instruction:  ADI D8; A <-- A + 0x03 opcodes:  0xc6 0x03 
address: 0x05d9 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x7f opcodes:  0x21 0x7f 0x20
address: 0x05dc instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x05dd instruction:  JC adr; if CY,  PC <-- 0x05e2 opcodes:  0xda 0xe2 0x05
address: 0x05e0 instruction:  SUI D8; A <-- A - 0x0c opcodes:  0xd6 0x0c 
address: 0x05e2 instruction:  STA adr ; (0x2079) <-- A opcodes:  0x32 0x79 0x20
address: 0x05e5 instruction:  LDA adr; A <-- (0x207b) opcodes:  0x3a 0x7b 0x20
address: 0x05e8 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x05e9 instruction:  LDA adr; A <-- (0x207e) opcodes:  0x3a 0x7e 0x20
address: 0x05ec instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x05ed instruction:  STA adr ; (0x207b) <-- A opcodes:  0x32 0x7b 0x20
address: 0x05f0 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x066copcodes:  0xcd 0x6c 0x06
address: 0x05f3 instruction:  LDA adr; A <-- (0x207b) opcodes:  0x3a 0x7b 0x20
address: 0x05f6 instruction:  CPI D8;  A - 0x15 opcodes:  0xfe 0x15 
address: 0x05f8 instruction:  JC adr; if CY,  PC <-- 0x0612 opcodes:  0xda 0x12 0x06
address: 0x05fb instruction:  LDA adr; A <-- (0x2061) opcodes:  0x3a 0x61 0x20
address: 0x05fe instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x05ff instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0600 instruction:  LDA adr; A <-- (0x207b) opcodes:  0x3a 0x7b 0x20
address: 0x0603 instruction:  CPI D8;  A - 0x1e opcodes:  0xfe 0x1e 
address: 0x0605 instruction:  JC adr; if CY,  PC <-- 0x0612 opcodes:  0xda 0x12 0x06
address: 0x0608 instruction:  CPI D8;  A - 0x27 opcodes:  0xfe 0x27 
address: 0x060a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x060b instruction:  JNC adr; if NCY, PC <-- 0x0612 opcodes:  0xd2 0x12 0x06
address: 0x060e instruction:  SUB A; A <-- A - A opcodes:  0x97 
address: 0x060f instruction:  STA adr ; (0x2015) <-- A opcodes:  0x32 0x15 0x20
address: 0x0612 instruction:  LDA adr; A <-- (0x2073) opcodes:  0x3a 0x73 0x20
address: 0x0615 instruction:  ORI D8; A <-- A | 0x01 opcodes:  0xf6 0x01 
address: 0x0617 instruction:  STA adr ; (0x2073) <-- A opcodes:  0x32 0x73 0x20
address: 0x061a instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x061b instruction:  LDA adr; A <-- (0x201b) opcodes:  0x3a 0x1b 0x20
address: 0x061e instruction:  ADI D8; A <-- A + 0x08 opcodes:  0xc6 0x08 
address: 0x0620 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x0621 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x156fopcodes:  0xcd 0x6f 0x15
address: 0x0624 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x0625 instruction:  CPI D8;  A - 0x0c opcodes:  0xfe 0x0c 
address: 0x0627 instruction:  JC adr; if CY,  PC <-- 0x05a5 opcodes:  0xda 0xa5 0x05
address: 0x062a instruction:  MVI C, D8; C <-- 0x0b opcodes:  0x0e 0x0b 
address: 0x062c instruction:  JMP adr;  PC <-- 0x05a5 opcodes:  0xc3 0xa5 0x05
address: 0x062f instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x0630 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x0633 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x0634 instruction:  MOV L,C; L <-- C opcodes:  0x69 
address: 0x0635 instruction:  MVI D, D8;  D <-- 0x05 opcodes:  0x16 0x05 
address: 0x0637 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0638 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0639 instruction:  STC; CY = 1 opcodes:  0x37 
address: 0x063a instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x063b instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x063c instruction:  ADI D8; A <-- A + 0x0b opcodes:  0xc6 0x0b 
address: 0x063e instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x063f instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x0640 instruction:  JNZ adr; if NZ, PC <-- 0x0637 opcodes:  0xc2 0x37 0x06
address: 0x0643 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0644 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x78 opcodes:  0x21 0x78 0x20
address: 0x0647 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x0648 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0649 instruction:  CPI D8;  A - 0x03 opcodes:  0xfe 0x03 
address: 0x064b instruction:  JNZ adr; if NZ, PC <-- 0x0667 opcodes:  0xc2 0x67 0x06
address: 0x064e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0675opcodes:  0xcd 0x75 0x06
address: 0x0651 instruction:  LXI H, D16; H <-- 0x1c L <-- 0xdc opcodes:  0x21 0xdc 0x1c
address: 0x0654 instruction:  SHLD adr ; (0x2079) <-- L , (0x2079) + 1 <-- H opcodes:  0x22 0x79 0x20
address: 0x0657 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x7c opcodes:  0x21 0x7c 0x20
address: 0x065a instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x065b instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x065c instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x065d instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x065e instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x065f instruction:  MVI A, D8; A <-- 0x06 opcodes:  0x3e 0x06 
address: 0x0661 instruction:  STA adr ; (0x207d) <-- A opcodes:  0x32 0x7d 0x20
address: 0x0664 instruction:  JMP adr;  PC <-- 0x066c opcodes:  0xc3 0x6c 0x06
address: 0x0667 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0668 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x0669 instruction:  JMP adr;  PC <-- 0x0675 opcodes:  0xc3 0x75 0x06
address: 0x066c instruction:  LXI H, D16; H <-- 0x20 L <-- 0x79 opcodes:  0x21 0x79 0x20
address: 0x066f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x0672 instruction:  JMP adr;  PC <-- 0x1491 opcodes:  0xc3 0x91 0x14
address: 0x0675 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x79 opcodes:  0x21 0x79 0x20
address: 0x0678 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x067b instruction:  JMP adr;  PC <-- 0x1452 opcodes:  0xc3 0x52 0x14
address: 0x067e instruction:  SHLD adr ; (0x2048) <-- L , (0x2048) + 1 <-- H opcodes:  0x22 0x48 0x20
address: 0x0681 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0682 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0683 instruction:  LDA adr; A <-- (0x2080) opcodes:  0x3a 0x80 0x20
address: 0x0686 instruction:  CPI D8;  A - 0x02 opcodes:  0xfe 0x02 
address: 0x0688 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x0689 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x83 opcodes:  0x21 0x83 0x20
address: 0x068c instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x068d instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x068e instruction:  JZ adr;  PC <-- 0x050f opcodes:  0xca 0x0f 0x05
address: 0x0691 instruction:  LDA adr; A <-- (0x2056) opcodes:  0x3a 0x56 0x20
address: 0x0694 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0695 instruction:  JNZ adr; if NZ, PC <-- 0x050f opcodes:  0xc2 0x0f 0x05
address: 0x0698 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0699 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x069a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x069b instruction:  JNZ adr; if NZ, PC <-- 0x06ab opcodes:  0xc2 0xab 0x06
address: 0x069e instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x06a1 instruction:  CPI D8;  A - 0x08 opcodes:  0xfe 0x08 
address: 0x06a3 instruction:  JC adr; if CY,  PC <-- 0x050f opcodes:  0xda 0x0f 0x05
address: 0x06a6 instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x06a8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x073copcodes:  0xcd 0x3c 0x07
address: 0x06ab instruction:  LXI D, D16; D <-- 0x20 E <-- 0x8a opcodes:  0x11 0x8a 0x20
address: 0x06ae instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a06opcodes:  0xcd 0x06 0x1a
address: 0x06b1 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x06b2 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x85 opcodes:  0x21 0x85 0x20
address: 0x06b5 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x06b6 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x06b7 instruction:  JNZ adr; if NZ, PC <-- 0x06d6 opcodes:  0xc2 0xd6 0x06
address: 0x06ba instruction:  LXI H, D16; H <-- 0x20 L <-- 0x8a opcodes:  0x21 0x8a 0x20
address: 0x06bd instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x06be instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x06bf instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x06c0 instruction:  ADD M; A <-- A + (HL) opcodes:  0x86 
address: 0x06c1 instruction:  STA adr ; (0x208a) <-- A opcodes:  0x32 0x8a 0x20
address: 0x06c4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x073copcodes:  0xcd 0x3c 0x07
address: 0x06c7 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x8a opcodes:  0x21 0x8a 0x20
address: 0x06ca instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x06cb instruction:  CPI D8;  A - 0x28 opcodes:  0xfe 0x28 
address: 0x06cd instruction:  JC adr; if CY,  PC <-- 0x06f9 opcodes:  0xda 0xf9 0x06
address: 0x06d0 instruction:  CPI D8;  A - 0xe1 opcodes:  0xfe 0xe1 
address: 0x06d2 instruction:  JNC adr; if NCY, PC <-- 0x06f9 opcodes:  0xd2 0xf9 0x06
address: 0x06d5 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x06d6 instruction:  MVI B, D8;  B <-- 0xfe opcodes:  0x06 0xfe 
address: 0x06d8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19dcopcodes:  0xcd 0xdc 0x19
address: 0x06db instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x06dc instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x06dd instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x06de instruction:  CPI D8;  A - 0x1f opcodes:  0xfe 0x1f 
address: 0x06e0 instruction:  JZ adr;  PC <-- 0x074b opcodes:  0xca 0x4b 0x07
address: 0x06e3 instruction:  CPI D8;  A - 0x18 opcodes:  0xfe 0x18 
address: 0x06e5 instruction:  JZ adr;  PC <-- 0x070c opcodes:  0xca 0x0c 0x07
address: 0x06e8 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x06e9 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x06ea instruction:  MVI B, D8;  B <-- 0xef opcodes:  0x06 0xef 
address: 0x06ec instruction:  LXI H, D16; H <-- 0x20 L <-- 0x98 opcodes:  0x21 0x98 0x20
address: 0x06ef instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x06f0 instruction:  ANA B; A <-- A & B opcodes:  0xa0 
address: 0x06f1 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x06f2 instruction:  ANI D8; A <-- A & 0x20 opcodes:  0xe6 0x20 
address: 0x06f4 instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x06f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x06f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x06f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x06f9 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0742opcodes:  0xcd 0x42 0x07
address: 0x06fc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14cbopcodes:  0xcd 0xcb 0x14
address: 0x06ff instruction:  LXI H, D16; H <-- 0x20 L <-- 0x83 opcodes:  0x21 0x83 0x20
address: 0x0702 instruction:  MVI B, D8;  B <-- 0x0a opcodes:  0x06 0x0a 
address: 0x0704 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x075fopcodes:  0xcd 0x5f 0x07
address: 0x0707 instruction:  MVI B, D8;  B <-- 0xfe opcodes:  0x06 0xfe 
address: 0x0709 instruction:  JMP adr;  PC <-- 0x19dc opcodes:  0xc3 0xdc 0x19
address: 0x070c instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x070e instruction:  STA adr ; (0x20f1) <-- A opcodes:  0x32 0xf1 0x20
address: 0x0711 instruction:  LHLD adr; (0x208d) <-- L , (0x208d) + 1 <-- H opcodes:  0x2a 0x8d 0x20
address: 0x0714 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x0715 instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x0717 instruction:  LXI H, D16; H <-- 0x1d L <-- 0x50 opcodes:  0x21 0x50 0x1d
address: 0x071a instruction:  LXI D, D16; D <-- 0x1d E <-- 0x4c opcodes:  0x11 0x4c 0x1d
address: 0x071d instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x071e instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x071f instruction:  JZ adr;  PC <-- 0x0728 opcodes:  0xca 0x28 0x07
address: 0x0722 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0723 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x0724 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x0725 instruction:  JNZ adr; if NZ, PC <-- 0x071d opcodes:  0xc2 0x1d 0x07
address: 0x0728 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0729 instruction:  STA adr ; (0x2087) <-- A opcodes:  0x32 0x87 0x20
address: 0x072c instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x072e instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x072f instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0730 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0731 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0732 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0733 instruction:  SHLD adr ; (0x20f2) <-- L , (0x20f2) + 1 <-- H opcodes:  0x22 0xf2 0x20
address: 0x0736 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0742opcodes:  0xcd 0x42 0x07
address: 0x0739 instruction:  JMP adr;  PC <-- 0x08f1 opcodes:  0xc3 0xf1 0x08
address: 0x073c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0742opcodes:  0xcd 0x42 0x07
address: 0x073f instruction:  JMP adr;  PC <-- 0x1439 opcodes:  0xc3 0x39 0x14
address: 0x0742 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x87 opcodes:  0x21 0x87 0x20
address: 0x0745 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x0748 instruction:  JMP adr;  PC <-- 0x1a47 opcodes:  0xc3 0x47 0x1a
address: 0x074b instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x074d instruction:  LXI H, D16; H <-- 0x20 L <-- 0x98 opcodes:  0x21 0x98 0x20
address: 0x0750 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0751 instruction:  ORA B; A <-- A | B opcodes:  0xb0 
address: 0x0752 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0753 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1770opcodes:  0xcd 0x70 0x17
address: 0x0756 instruction:  LXI H, D16; H <-- 0x1d L <-- 0x7c opcodes:  0x21 0x7c 0x1d
address: 0x0759 instruction:  SHLD adr ; (0x2087) <-- L , (0x2087) + 1 <-- H opcodes:  0x22 0x87 0x20
address: 0x075c instruction:  JMP adr;  PC <-- 0x073c opcodes:  0xc3 0x3c 0x07
address: 0x075f instruction:  LXI D, D16; D <-- 0x1b E <-- 0x83 opcodes:  0x11 0x83 0x1b
address: 0x0762 instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x0765 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0767 instruction:  STA adr ; (0x2093) <-- A opcodes:  0x32 0x93 0x20
address: 0x076a instruction:  LXI SP, D16; SP.hi <-- 0x24 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x24
address: 0x076d instruction:  EI; special? opcodes:  0xfb 
address: 0x076e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1979opcodes:  0xcd 0x79 0x19
address: 0x0771 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x0774 instruction:  LXI H, D16; H <-- 0x30 L <-- 0x13 opcodes:  0x21 0x13 0x30
address: 0x0777 instruction:  LXI D, D16; D <-- 0x1f E <-- 0xf3 opcodes:  0x11 0xf3 0x1f
address: 0x077a instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x077c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x077f instruction:  LDA adr; A <-- (0x20eb) opcodes:  0x3a 0xeb 0x20
address: 0x0782 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0783 instruction:  LXI H, D16; H <-- 0x28 L <-- 0x10 opcodes:  0x21 0x10 0x28
address: 0x0786 instruction:  MVI C, D8; C <-- 0x14 opcodes:  0x0e 0x14 
address: 0x0788 instruction:  JNZ adr; if NZ, PC <-- 0x0857 opcodes:  0xc2 0x57 0x08
address: 0x078b instruction:  LXI D, D16; D <-- 0x1a E <-- 0xcf opcodes:  0x11 0xcf 0x1a
address: 0x078e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x0791 instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x0793 instruction:  ANI D8; A <-- A & 0x04 opcodes:  0xe6 0x04 
address: 0x0795 instruction:  JZ adr;  PC <-- 0x077f opcodes:  0xca 0x7f 0x07
address: 0x0798 instruction:  MVI B, D8;  B <-- 0x99 opcodes:  0x06 0x99 
address: 0x079a instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x079b instruction:  STA adr ; (0x20ce) <-- A opcodes:  0x32 0xce 0x20
address: 0x079e instruction:  LDA adr; A <-- (0x20eb) opcodes:  0x3a 0xeb 0x20
address: 0x07a1 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x07a2 instruction:  DAA; special? opcodes:  0x27 
address: 0x07a3 instruction:  STA adr ; (0x20eb) <-- A opcodes:  0x32 0xeb 0x20
address: 0x07a6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1947opcodes:  0xcd 0x47 0x19
address: 0x07a9 instruction:  LXI H, D16; H <-- 0x00 L <-- 0x00 opcodes:  0x21 0x00 0x00
address: 0x07ac instruction:  SHLD adr ; (0x20f8) <-- L , (0x20f8) + 1 <-- H opcodes:  0x22 0xf8 0x20
address: 0x07af instruction:  SHLD adr ; (0x20fc) <-- L , (0x20fc) + 1 <-- H opcodes:  0x22 0xfc 0x20
address: 0x07b2 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1925opcodes:  0xcd 0x25 0x19
address: 0x07b5 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x192bopcodes:  0xcd 0x2b 0x19
address: 0x07b8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d7opcodes:  0xcd 0xd7 0x19
address: 0x07bb instruction:  LXI H, D16; H <-- 0x01 L <-- 0x01 opcodes:  0x21 0x01 0x01
address: 0x07be instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x07bf instruction:  STA adr ; (0x20ef) <-- A opcodes:  0x32 0xef 0x20
address: 0x07c2 instruction:  SHLD adr ; (0x20e7) <-- L , (0x20e7) + 1 <-- H opcodes:  0x22 0xe7 0x20
address: 0x07c5 instruction:  SHLD adr ; (0x20e5) <-- L , (0x20e5) + 1 <-- H opcodes:  0x22 0xe5 0x20
address: 0x07c8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1956opcodes:  0xcd 0x56 0x19
address: 0x07cb instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01efopcodes:  0xcd 0xef 0x01
address: 0x07ce instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01f5opcodes:  0xcd 0xf5 0x01
address: 0x07d1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08d1opcodes:  0xcd 0xd1 0x08
address: 0x07d4 instruction:  STA adr ; (0x21ff) <-- A opcodes:  0x32 0xff 0x21
address: 0x07d7 instruction:  STA adr ; (0x22ff) <-- A opcodes:  0x32 0xff 0x22
address: 0x07da instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x00d7opcodes:  0xcd 0xd7 0x00
address: 0x07dd instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x07de instruction:  STA adr ; (0x21fe) <-- A opcodes:  0x32 0xfe 0x21
address: 0x07e1 instruction:  STA adr ; (0x22fe) <-- A opcodes:  0x32 0xfe 0x22
address: 0x07e4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01c0opcodes:  0xcd 0xc0 0x01
address: 0x07e7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1904opcodes:  0xcd 0x04 0x19
address: 0x07ea instruction:  LXI H, D16; H <-- 0x38 L <-- 0x78 opcodes:  0x21 0x78 0x38
address: 0x07ed instruction:  SHLD adr ; (0x21fc) <-- L , (0x21fc) + 1 <-- H opcodes:  0x22 0xfc 0x21
address: 0x07f0 instruction:  SHLD adr ; (0x22fc) <-- L , (0x22fc) + 1 <-- H opcodes:  0x22 0xfc 0x22
address: 0x07f3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01e4opcodes:  0xcd 0xe4 0x01
address: 0x07f6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a7fopcodes:  0xcd 0x7f 0x1a
address: 0x07f9 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x088dopcodes:  0xcd 0x8d 0x08
address: 0x07fc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x07ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0800 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0801 instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x0804 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01cfopcodes:  0xcd 0xcf 0x01
address: 0x0807 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x080a instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x080b instruction:  JC adr; if CY,  PC <-- 0x0872 opcodes:  0xda 0x72 0x08
address: 0x080e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0213opcodes:  0xcd 0x13 0x02
address: 0x0811 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01cfopcodes:  0xcd 0xcf 0x01
address: 0x0814 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x00b1opcodes:  0xcd 0xb1 0x00
address: 0x0817 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d1opcodes:  0xcd 0xd1 0x19
address: 0x081a instruction:  MVI B, D8;  B <-- 0x20 opcodes:  0x06 0x20 
address: 0x081c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18faopcodes:  0xcd 0xfa 0x18
address: 0x081f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1618opcodes:  0xcd 0x18 0x16
address: 0x0822 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x190aopcodes:  0xcd 0x0a 0x19
address: 0x0825 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x15f3opcodes:  0xcd 0xf3 0x15
address: 0x0828 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0988opcodes:  0xcd 0x88 0x09
address: 0x082b instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x082e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x082f instruction:  JZ adr;  PC <-- 0x09ef opcodes:  0xca 0xef 0x09
address: 0x0832 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x170eopcodes:  0xcd 0x0e 0x17
address: 0x0835 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0935opcodes:  0xcd 0x35 0x09
address: 0x0838 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08d8opcodes:  0xcd 0xd8 0x08
address: 0x083b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x172copcodes:  0xcd 0x2c 0x17
address: 0x083e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0841 instruction:  JZ adr;  PC <-- 0x0849 opcodes:  0xca 0x49 0x08
address: 0x0844 instruction:  MVI B, D8;  B <-- 0x04 opcodes:  0x06 0x04 
address: 0x0846 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18faopcodes:  0xcd 0xfa 0x18
address: 0x0849 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1775opcodes:  0xcd 0x75 0x17
address: 0x084c instruction:  OUT D8;  special? opcodes:  0xd3 0x06 
address: 0x084e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1804opcodes:  0xcd 0x04 0x18
address: 0x0851 instruction:  JMP adr;  PC <-- 0x081f opcodes:  0xc3 0x1f 0x08
address: 0x0854 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0855 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0856 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0857 instruction:  LXI D, D16; D <-- 0x1a E <-- 0xba opcodes:  0x11 0xba 0x1a
address: 0x085a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x085d instruction:  MVI B, D8;  B <-- 0x98 opcodes:  0x06 0x98 
address: 0x085f instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x0861 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0862 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0863 instruction:  JC adr; if CY,  PC <-- 0x086d opcodes:  0xda 0x6d 0x08
address: 0x0866 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0867 instruction:  JC adr; if CY,  PC <-- 0x0798 opcodes:  0xda 0x98 0x07
address: 0x086a instruction:  JMP adr;  PC <-- 0x077f opcodes:  0xc3 0x7f 0x07
address: 0x086d instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x086f instruction:  JMP adr;  PC <-- 0x079b opcodes:  0xc3 0x9b 0x07
address: 0x0872 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x021aopcodes:  0xcd 0x1a 0x02
address: 0x0875 instruction:  JMP adr;  PC <-- 0x0814 opcodes:  0xc3 0x14 0x08
address: 0x0878 instruction:  LDA adr; A <-- (0x2008) opcodes:  0x3a 0x08 0x20
address: 0x087b instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x087c instruction:  LHLD adr; (0x2009) <-- L , (0x2009) + 1 <-- H opcodes:  0x2a 0x09 0x20
address: 0x087f instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xc3 
address: 0x0881 instruction:  ADD M; A <-- A + (HL) opcodes:  0x86 
address: 0x0882 instruction:  NOP; no operation opcodes:  0x08 
address: 0x0883 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0884 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0885 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0886 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x0889 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x088a instruction:  MVI L, D8; L <-- 0xfc opcodes:  0x2e 0xfc 
address: 0x088c instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x088d instruction:  LXI H, D16; H <-- 0x2b L <-- 0x11 opcodes:  0x21 0x11 0x2b
address: 0x0890 instruction:  LXI D, D16; D <-- 0x1b E <-- 0x70 opcodes:  0x11 0x70 0x1b
address: 0x0893 instruction:  MVI C, D8; C <-- 0x0e opcodes:  0x0e 0x0e 
address: 0x0895 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x0898 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x089b instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x089c instruction:  MVI A, D8; A <-- 0x1c opcodes:  0x3e 0x1c 
address: 0x089e instruction:  LXI H, D16; H <-- 0x37 L <-- 0x11 opcodes:  0x21 0x11 0x37
address: 0x08a1 instruction:  CNC adr;  if NCY, CALL (0x08ff) opcodes:  0xd4 0xff 0x08
address: 0x08a4 instruction:  MVI A, D8; A <-- 0xb0 opcodes:  0x3e 0xb0 
address: 0x08a6 instruction:  STA adr ; (0x20c0) <-- A opcodes:  0x32 0xc0 0x20
address: 0x08a9 instruction:  LDA adr; A <-- (0x20c0) opcodes:  0x3a 0xc0 0x20
address: 0x08ac instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x08ad instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x08ae instruction:  ANI D8; A <-- A & 0x04 opcodes:  0xe6 0x04 
address: 0x08b0 instruction:  JNZ adr; if NZ, PC <-- 0x08bc opcodes:  0xc2 0xbc 0x08
address: 0x08b3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09caopcodes:  0xcd 0xca 0x09
address: 0x08b6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1931opcodes:  0xcd 0x31 0x19
address: 0x08b9 instruction:  JMP adr;  PC <-- 0x08a9 opcodes:  0xc3 0xa9 0x08
address: 0x08bc instruction:  MVI B, D8;  B <-- 0x20 opcodes:  0x06 0x20 
address: 0x08be instruction:  LXI H, D16; H <-- 0x27 L <-- 0x1c opcodes:  0x21 0x1c 0x27
address: 0x08c1 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x08c4 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x08c5 instruction:  JC adr; if CY,  PC <-- 0x08cb opcodes:  0xda 0xcb 0x08
address: 0x08c8 instruction:  LXI H, D16; H <-- 0x39 L <-- 0x1c opcodes:  0x21 0x1c 0x39
address: 0x08cb instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14cbopcodes:  0xcd 0xcb 0x14
address: 0x08ce instruction:  JMP adr;  PC <-- 0x08a9 opcodes:  0xc3 0xa9 0x08
address: 0x08d1 instruction:  IN D8; special opcodes:  0xdb 0x02 
address: 0x08d3 instruction:  ANI D8; A <-- A & 0x03 opcodes:  0xe6 0x03 
address: 0x08d5 instruction:  ADI D8; A <-- A + 0x03 opcodes:  0xc6 0x03 
address: 0x08d7 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x08d8 instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x08db instruction:  CPI D8;  A - 0x09 opcodes:  0xfe 0x09 
address: 0x08dd instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x08de instruction:  MVI A, D8; A <-- 0xfb opcodes:  0x3e 0xfb 
address: 0x08e0 instruction:  STA adr ; (0x207e) <-- A opcodes:  0x32 0x7e 0x20
address: 0x08e3 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x08e4 instruction:  LDA adr; A <-- (0x20ce) opcodes:  0x3a 0xce 0x20
address: 0x08e7 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x08e8 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x08e9 instruction:  LXI H, D16; H <-- 0x39 L <-- 0x1c opcodes:  0x21 0x1c 0x39
address: 0x08ec instruction:  MVI B, D8;  B <-- 0x20 opcodes:  0x06 0x20 
address: 0x08ee instruction:  JMP adr;  PC <-- 0x14cb opcodes:  0xc3 0xcb 0x14
address: 0x08f1 instruction:  MVI C, D8; C <-- 0x03 opcodes:  0x0e 0x03 
address: 0x08f3 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x08f4 instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x08f5 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08ffopcodes:  0xcd 0xff 0x08
address: 0x08f8 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x08f9 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x08fa instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x08fb instruction:  JNZ adr; if NZ, PC <-- 0x08f3 opcodes:  0xc2 0xf3 0x08
address: 0x08fe instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x08ff instruction:  LXI D, D16; D <-- 0x1e E <-- 0x00 opcodes:  0x11 0x00 0x1e
address: 0x0902 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0903 instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x0905 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x0906 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0907 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0908 instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x0909 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x090a instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xe1 
address: 0x090c instruction:  MVI B, D8;  B <-- 0x08 opcodes:  0x06 0x08 
address: 0x090e instruction:  OUT D8;  special? opcodes:  0xd3 0x06 
address: 0x0910 instruction:  JMP adr;  PC <-- 0x1439 opcodes:  0xc3 0x39 0x14
address: 0x0913 instruction:  LDA adr; A <-- (0x2009) opcodes:  0x3a 0x09 0x20
address: 0x0916 instruction:  CPI D8;  A - 0x78 opcodes:  0xfe 0x78 
address: 0x0918 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x0919 instruction:  LHLD adr; (0x2091) <-- L , (0x2091) + 1 <-- H opcodes:  0x2a 0x91 0x20
address: 0x091c instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x091d instruction:  ORA H; A <-- A | H opcodes:  0xb4 
address: 0x091e instruction:  JNZ adr; if NZ, PC <-- 0x0929 opcodes:  0xc2 0x29 0x09
address: 0x0921 instruction:  LXI H, D16; H <-- 0x06 L <-- 0x00 opcodes:  0x21 0x00 0x06
address: 0x0924 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0926 instruction:  STA adr ; (0x2083) <-- A opcodes:  0x32 0x83 0x20
address: 0x0929 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x092a instruction:  SHLD adr ; (0x2091) <-- L , (0x2091) + 1 <-- H opcodes:  0x22 0x91 0x20
address: 0x092d instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x092e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1611opcodes:  0xcd 0x11 0x16
address: 0x0931 instruction:  MVI L, D8; L <-- 0xff opcodes:  0x2e 0xff 
address: 0x0933 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0934 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0935 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1910opcodes:  0xcd 0x10 0x19
address: 0x0938 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0939 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x093a instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x093b instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x093c instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x093d instruction:  MVI B, D8;  B <-- 0x15 opcodes:  0x06 0x15 
address: 0x093f instruction:  IN D8; special opcodes:  0xdb 0x02 
address: 0x0941 instruction:  ANI D8; A <-- A & 0x08 opcodes:  0xe6 0x08 
address: 0x0943 instruction:  JZ adr;  PC <-- 0x0948 opcodes:  0xca 0x48 0x09
address: 0x0946 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x0948 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09caopcodes:  0xcd 0xca 0x09
address: 0x094b instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x094c instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x094d instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x094e instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x094f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x092eopcodes:  0xcd 0x2e 0x09
address: 0x0952 instruction:  INR M; (HL) <-- (HL) + 1 opcodes:  0x34 
address: 0x0953 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0954 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x0955 instruction:  LXI H, D16; H <-- 0x25 L <-- 0x01 opcodes:  0x21 0x01 0x25
address: 0x0958 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x0959 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x095a instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x095b instruction:  JNZ adr; if NZ, PC <-- 0x0958 opcodes:  0xc2 0x58 0x09
address: 0x095e instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x0960 instruction:  LXI D, D16; D <-- 0x1c E <-- 0x60 opcodes:  0x11 0x60 0x1c
address: 0x0963 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1439opcodes:  0xcd 0x39 0x14
address: 0x0966 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x0967 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0968 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a8bopcodes:  0xcd 0x8b 0x1a
address: 0x096b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1910opcodes:  0xcd 0x10 0x19
address: 0x096e instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x096f instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0970 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x0972 instruction:  MVI A, D8; A <-- 0xff opcodes:  0x3e 0xff 
address: 0x0974 instruction:  STA adr ; (0x2099) <-- A opcodes:  0x32 0x99 0x20
address: 0x0977 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x0979 instruction:  JMP adr;  PC <-- 0x18fa opcodes:  0xc3 0xfa 0x18
address: 0x097c instruction:  LXI H, D16; H <-- 0x1d L <-- 0xa0 opcodes:  0x21 0xa0 0x1d
address: 0x097f instruction:  CPI D8;  A - 0x02 opcodes:  0xfe 0x02 
address: 0x0981 instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x0982 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0983 instruction:  CPI D8;  A - 0x04 opcodes:  0xfe 0x04 
address: 0x0985 instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x0986 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0987 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0988 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09caopcodes:  0xcd 0xca 0x09
address: 0x098b instruction:  LDA adr; A <-- (0x20f1) opcodes:  0x3a 0xf1 0x20
address: 0x098e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x098f instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0990 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0991 instruction:  STA adr ; (0x20f1) <-- A opcodes:  0x32 0xf1 0x20
address: 0x0994 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0995 instruction:  LHLD adr; (0x20f2) <-- L , (0x20f2) + 1 <-- H opcodes:  0x2a 0xf2 0x20
address: 0x0998 instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xe1 
address: 0x099a instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x099b instruction:  ADD E; A <-- A + E opcodes:  0x83 
address: 0x099c instruction:  DAA; special? opcodes:  0x27 
address: 0x099d instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x099e instruction:  MOV E,A; E <-- A opcodes:  0x5f 
address: 0x099f instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x09a0 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x09a1 instruction:  ADC D; A <-- A + D + CY opcodes:  0x8a 
address: 0x09a2 instruction:  DAA; special? opcodes:  0x27 
address: 0x09a3 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x09a4 instruction:  MOV D,A; D <-- A opcodes:  0x57 
address: 0x09a5 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x09a6 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x09a7 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x09a8 instruction:  MOV H,M; H <-- (HL) opcodes:  0x66 
address: 0x09a9 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x09aa instruction:  JMP adr;  PC <-- 0x09ad opcodes:  0xc3 0xad 0x09
address: 0x09ad instruction:  MOV A,D; A <--  Dopcodes:  0x7a 
address: 0x09ae instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09b2opcodes:  0xcd 0xb2 0x09
address: 0x09b1 instruction:  MOV A,E; A <-- E opcodes:  0x7b 
address: 0x09b2 instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x09b3 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x09b4 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x09b5 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x09b6 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x09b7 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x09b8 instruction:  ANI D8; A <-- A & 0x0f opcodes:  0xe6 0x0f 
address: 0x09ba instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09c5opcodes:  0xcd 0xc5 0x09
address: 0x09bd instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x09be instruction:  ANI D8; A <-- A & 0x0f opcodes:  0xe6 0x0f 
address: 0x09c0 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09c5opcodes:  0xcd 0xc5 0x09
address: 0x09c3 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x09c4 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x09c5 instruction:  ADI D8; A <-- A + 0x1a opcodes:  0xc6 0x1a 
address: 0x09c7 instruction:  JMP adr;  PC <-- 0x08ff opcodes:  0xc3 0xff 0x08
address: 0x09ca instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x09cd instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x09ce instruction:  LXI H, D16; H <-- 0x20 L <-- 0xf8 opcodes:  0x21 0xf8 0x20
address: 0x09d1 instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x09d2 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xfc opcodes:  0x21 0xfc 0x20
address: 0x09d5 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x09d6 instruction:  LXI H, D16; H <-- 0x24 L <-- 0x02 opcodes:  0x21 0x02 0x24
address: 0x09d9 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x09db instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x09dc instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x09dd instruction:  ANI D8; A <-- A & 0x1f opcodes:  0xe6 0x1f 
address: 0x09df instruction:  CPI D8;  A - 0x1c opcodes:  0xfe 0x1c 
address: 0x09e1 instruction:  JC adr; if CY,  PC <-- 0x09e8 opcodes:  0xda 0xe8 0x09
address: 0x09e4 instruction:  LXI D, D16; D <-- 0x00 E <-- 0x06 opcodes:  0x11 0x06 0x00
address: 0x09e7 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x09e8 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x09e9 instruction:  CPI D8;  A - 0x40 opcodes:  0xfe 0x40 
address: 0x09eb instruction:  JC adr; if CY,  PC <-- 0x09d9 opcodes:  0xda 0xd9 0x09
address: 0x09ee instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x09ef instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a3copcodes:  0xcd 0x3c 0x0a
address: 0x09f2 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x09f3 instruction:  STA adr ; (0x20e9) <-- A opcodes:  0x32 0xe9 0x20
address: 0x09f6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x09f9 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x09fc instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x09fd instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01e4opcodes:  0xcd 0xe4 0x01
address: 0x0a00 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x0a01 instruction:  STA adr ; (0x2067) <-- A opcodes:  0x32 0x67 0x20
address: 0x0a04 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x0a07 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x0a08 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x0a09 instruction:  MVI L, D8; L <-- 0xfe opcodes:  0x2e 0xfe 
address: 0x0a0b instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0a0c instruction:  ANI D8; A <-- A & 0x07 opcodes:  0xe6 0x07 
address: 0x0a0e instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0a0f instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0a10 instruction:  LXI H, D16; H <-- 0x1d L <-- 0xa2 opcodes:  0x21 0xa2 0x1d
address: 0x0a13 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0a14 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0a15 instruction:  JNZ adr; if NZ, PC <-- 0x0a13 opcodes:  0xc2 0x13 0x0a
address: 0x0a18 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0a19 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0a1a instruction:  MVI L, D8; L <-- 0xfc opcodes:  0x2e 0xfc 
address: 0x0a1c instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0a1d instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x0a1e instruction:  MVI M, D8;  (HL) <-- 0x38 opcodes:  0x36 0x38 
address: 0x0a20 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x0a21 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0a22 instruction:  JC adr; if CY,  PC <-- 0x0a33 opcodes:  0xda 0x33 0x0a
address: 0x0a25 instruction:  MVI A, D8; A <-- 0x21 opcodes:  0x3e 0x21 
address: 0x0a27 instruction:  STA adr ; (0x2098) <-- A opcodes:  0x32 0x98 0x20
address: 0x0a2a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01f5opcodes:  0xcd 0xf5 0x01
address: 0x0a2d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1904opcodes:  0xcd 0x04 0x19
address: 0x0a30 instruction:  JMP adr;  PC <-- 0x0804 opcodes:  0xc3 0x04 0x08
address: 0x0a33 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01efopcodes:  0xcd 0xef 0x01
address: 0x0a36 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01c0opcodes:  0xcd 0xc0 0x01
address: 0x0a39 instruction:  JMP adr;  PC <-- 0x0804 opcodes:  0xc3 0x04 0x08
address: 0x0a3c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0a3f instruction:  JNZ adr; if NZ, PC <-- 0x0a52 opcodes:  0xc2 0x52 0x0a
address: 0x0a42 instruction:  MVI A, D8; A <-- 0x30 opcodes:  0x3e 0x30 
address: 0x0a44 instruction:  STA adr ; (0x20c0) <-- A opcodes:  0x32 0xc0 0x20
address: 0x0a47 instruction:  LDA adr; A <-- (0x20c0) opcodes:  0x3a 0xc0 0x20
address: 0x0a4a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0a4b instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x0a4c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0a4f instruction:  JZ adr;  PC <-- 0x0a47 opcodes:  0xca 0x47 0x0a
address: 0x0a52 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0a55 instruction:  JNZ adr; if NZ, PC <-- 0x0a52 opcodes:  0xc2 0x52 0x0a
address: 0x0a58 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0a59 instruction:  LDA adr; A <-- (0x2015) opcodes:  0x3a 0x15 0x20
address: 0x0a5c instruction:  CPI D8;  A - 0xff opcodes:  0xfe 0xff 
address: 0x0a5e instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0a5f instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x0a62 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0a63 instruction:  JZ adr;  PC <-- 0x0a7c opcodes:  0xca 0x7c 0x0a
address: 0x0a66 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x0a67 instruction:  MVI B, D8;  B <-- 0x08 opcodes:  0x06 0x08 
address: 0x0a69 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18faopcodes:  0xcd 0xfa 0x18
address: 0x0a6c instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x0a6d instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x0a6e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x097copcodes:  0xcd 0x7c 0x09
address: 0x0a71 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0a72 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xf3 opcodes:  0x21 0xf3 0x20
address: 0x0a75 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x0a77 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0a78 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0a79 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x0a7a instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x0a7c instruction:  LXI H, D16; H <-- 0x20 L <-- 0x62 opcodes:  0x21 0x62 0x20
address: 0x0a7f instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0a80 instruction:  MVI A, D8; A <-- 0x02 opcodes:  0x3e 0x02 
address: 0x0a82 instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x0a85 instruction:  OUT D8;  special? opcodes:  0xd3 0x06 
address: 0x0a87 instruction:  LDA adr; A <-- (0x20cb) opcodes:  0x3a 0xcb 0x20
address: 0x0a8a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0a8b instruction:  JZ adr;  PC <-- 0x0a85 opcodes:  0xca 0x85 0x0a
address: 0x0a8e instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0a8f instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x0a92 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0a93 instruction:  PUSH D;  (SP-2) <-- E; (SP-1) <-- D ; SP <-- SP - 2 opcodes:  0xd5 
address: 0x0a94 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x0a95 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08ffopcodes:  0xcd 0xff 0x08
address: 0x0a98 instruction:  POP D; E <- (SP); D <- (SP+1); SP <- SP + 2 opcodes:  0xd1 
address: 0x0a99 instruction:  MVI A, D8; A <-- 0x07 opcodes:  0x3e 0x07 
address: 0x0a9b instruction:  STA adr ; (0x20c0) <-- A opcodes:  0x32 0xc0 0x20
address: 0x0a9e instruction:  LDA adr; A <-- (0x20c0) opcodes:  0x3a 0xc0 0x20
address: 0x0aa1 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x0aa2 instruction:  JNZ adr; if NZ, PC <-- 0x0a9e opcodes:  0xc2 0x9e 0x0a
address: 0x0aa5 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x0aa6 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x0aa7 instruction:  JNZ adr; if NZ, PC <-- 0x0a93 opcodes:  0xc2 0x93 0x0a
address: 0x0aaa instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0aab instruction:  LXI H, D16; H <-- 0x20 L <-- 0x50 opcodes:  0x21 0x50 0x20
address: 0x0aae instruction:  JMP adr;  PC <-- 0x024b opcodes:  0xc3 0x4b 0x02
address: 0x0ab1 instruction:  MVI A, D8; A <-- 0x40 opcodes:  0x3e 0x40 
address: 0x0ab3 instruction:  JMP adr;  PC <-- 0x0ad7 opcodes:  0xc3 0xd7 0x0a
address: 0x0ab6 instruction:  MVI A, D8; A <-- 0x80 opcodes:  0x3e 0x80 
address: 0x0ab8 instruction:  JMP adr;  PC <-- 0x0ad7 opcodes:  0xc3 0xd7 0x0a
address: 0x0abb instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x0abc instruction:  JMP adr;  PC <-- 0x0072 opcodes:  0xc3 0x72 0x00
address: 0x0abf instruction:  LDA adr; A <-- (0x20c1) opcodes:  0x3a 0xc1 0x20
address: 0x0ac2 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0ac3 instruction:  JC adr; if CY,  PC <-- 0x0abb opcodes:  0xda 0xbb 0x0a
address: 0x0ac6 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0ac7 instruction:  JC adr; if CY,  PC <-- 0x1868 opcodes:  0xda 0x68 0x18
address: 0x0aca instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x0acb instruction:  JC adr; if CY,  PC <-- 0x0aab opcodes:  0xda 0xab 0x0a
address: 0x0ace instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0acf instruction:  LXI H, D16; H <-- 0x2b L <-- 0x14 opcodes:  0x21 0x14 0x2b
address: 0x0ad2 instruction:  MVI C, D8; C <-- 0x0f opcodes:  0x0e 0x0f 
address: 0x0ad4 instruction:  JMP adr;  PC <-- 0x0a93 opcodes:  0xc3 0x93 0x0a
address: 0x0ad7 instruction:  STA adr ; (0x20c0) <-- A opcodes:  0x32 0xc0 0x20
address: 0x0ada instruction:  LDA adr; A <-- (0x20c0) opcodes:  0x3a 0xc0 0x20
address: 0x0add instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0ade instruction:  JNZ adr; if NZ, PC <-- 0x0ada opcodes:  0xc2 0xda 0x0a
address: 0x0ae1 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x0ae2 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xc2 opcodes:  0x21 0xc2 0x20
address: 0x0ae5 instruction:  MVI B, D8;  B <-- 0x0c opcodes:  0x06 0x0c 
address: 0x0ae7 instruction:  JMP adr;  PC <-- 0x1a32 opcodes:  0xc3 0x32 0x1a
address: 0x0aea instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0aeb instruction:  OUT D8;  special? opcodes:  0xd3 0x03 
address: 0x0aed instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x0aef instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1982opcodes:  0xcd 0x82 0x19
address: 0x0af2 instruction:  EI; special? opcodes:  0xfb 
address: 0x0af3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x0af6 instruction:  LDA adr; A <-- (0x20ec) opcodes:  0x3a 0xec 0x20
address: 0x0af9 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0afa instruction:  LXI H, D16; H <-- 0x30 L <-- 0x17 opcodes:  0x21 0x17 0x30
address: 0x0afd instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x0aff instruction:  JNZ adr; if NZ, PC <-- 0x0be8 opcodes:  0xc2 0xe8 0x0b
address: 0x0b02 instruction:  LXI D, D16; D <-- 0x1c E <-- 0xfa opcodes:  0x11 0xfa 0x1c
address: 0x0b05 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x0b08 instruction:  LXI D, D16; D <-- 0x1d E <-- 0xaf opcodes:  0x11 0xaf 0x1d
address: 0x0b0b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0acfopcodes:  0xcd 0xcf 0x0a
address: 0x0b0e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x0b11 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1815opcodes:  0xcd 0x15 0x18
address: 0x0b14 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab6opcodes:  0xcd 0xb6 0x0a
address: 0x0b17 instruction:  LDA adr; A <-- (0x20ec) opcodes:  0x3a 0xec 0x20
address: 0x0b1a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0b1b instruction:  JNZ adr; if NZ, PC <-- 0x0b4a opcodes:  0xc2 0x4a 0x0b
address: 0x0b1e instruction:  LXI D, D16; D <-- 0x1a E <-- 0x95 opcodes:  0x11 0x95 0x1a
address: 0x0b21 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ae2opcodes:  0xcd 0xe2 0x0a
address: 0x0b24 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a80opcodes:  0xcd 0x80 0x0a
address: 0x0b27 instruction:  LXI D, D16; D <-- 0x1b E <-- 0xb0 opcodes:  0x11 0xb0 0x1b
address: 0x0b2a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ae2opcodes:  0xcd 0xe2 0x0a
address: 0x0b2d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a80opcodes:  0xcd 0x80 0x0a
address: 0x0b30 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x0b33 instruction:  LXI D, D16; D <-- 0x1f E <-- 0xc9 opcodes:  0x11 0xc9 0x1f
address: 0x0b36 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ae2opcodes:  0xcd 0xe2 0x0a
address: 0x0b39 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a80opcodes:  0xcd 0x80 0x0a
address: 0x0b3c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x0b3f instruction:  LXI H, D16; H <-- 0x33 L <-- 0xb7 opcodes:  0x21 0xb7 0x33
address: 0x0b42 instruction:  MVI B, D8;  B <-- 0x0a opcodes:  0x06 0x0a 
address: 0x0b44 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14cbopcodes:  0xcd 0xcb 0x14
address: 0x0b47 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab6opcodes:  0xcd 0xb6 0x0a
address: 0x0b4a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x0b4d instruction:  LDA adr; A <-- (0x21ff) opcodes:  0x3a 0xff 0x21
address: 0x0b50 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x0b51 instruction:  JNZ adr; if NZ, PC <-- 0x0b5d opcodes:  0xc2 0x5d 0x0b
address: 0x0b54 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08d1opcodes:  0xcd 0xd1 0x08
address: 0x0b57 instruction:  STA adr ; (0x21ff) <-- A opcodes:  0x32 0xff 0x21
address: 0x0b5a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a7fopcodes:  0xcd 0x7f 0x1a
address: 0x0b5d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01e4opcodes:  0xcd 0xe4 0x01
address: 0x0b60 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01c0opcodes:  0xcd 0xc0 0x01
address: 0x0b63 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01efopcodes:  0xcd 0xef 0x01
address: 0x0b66 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x021aopcodes:  0xcd 0x1a 0x02
address: 0x0b69 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x0b6b instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x0b6e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01cfopcodes:  0xcd 0xcf 0x01
address: 0x0b71 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1618opcodes:  0xcd 0x18 0x16
address: 0x0b74 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0bf1opcodes:  0xcd 0xf1 0x0b
address: 0x0b77 instruction:  OUT D8;  special? opcodes:  0xd3 0x06 
address: 0x0b79 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0b7c instruction:  JZ adr;  PC <-- 0x0b71 opcodes:  0xca 0x71 0x0b
address: 0x0b7f instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0b80 instruction:  STA adr ; (0x2025) <-- A opcodes:  0x32 0x25 0x20
address: 0x0b83 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x0b86 instruction:  JNZ adr; if NZ, PC <-- 0x0b83 opcodes:  0xc2 0x83 0x0b
address: 0x0b89 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x0b8a instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x0b8d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x0b90 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1988opcodes:  0xcd 0x88 0x19
address: 0x0b93 instruction:  MVI C, D8; C <-- 0x0c opcodes:  0x0e 0x0c 
address: 0x0b95 instruction:  LXI H, D16; H <-- 0x2c L <-- 0x11 opcodes:  0x21 0x11 0x2c
address: 0x0b98 instruction:  LXI D, D16; D <-- 0x1f E <-- 0x90 opcodes:  0x11 0x90 0x1f
address: 0x0b9b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x0b9e instruction:  LDA adr; A <-- (0x20ec) opcodes:  0x3a 0xec 0x20
address: 0x0ba1 instruction:  CPI D8;  A - 0x00 opcodes:  0xfe 0x00 
address: 0x0ba3 instruction:  JNZ adr; if NZ, PC <-- 0x0bae opcodes:  0xc2 0xae 0x0b
address: 0x0ba6 instruction:  LXI H, D16; H <-- 0x33 L <-- 0x11 opcodes:  0x21 0x11 0x33
address: 0x0ba9 instruction:  MVI A, D8; A <-- 0x02 opcodes:  0x3e 0x02 
address: 0x0bab instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08ffopcodes:  0xcd 0xff 0x08
address: 0x0bae instruction:  LXI B, D16; B<--0x1f C<--0x9c opcodes:  0x01 0x9c 0x1f
address: 0x0bb1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1856opcodes:  0xcd 0x56 0x18
address: 0x0bb4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x184copcodes:  0xcd 0x4c 0x18
address: 0x0bb7 instruction:  IN D8; special opcodes:  0xdb 0x02 
address: 0x0bb9 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x0bba instruction:  JC adr; if CY,  PC <-- 0x0bc3 opcodes:  0xda 0xc3 0x0b
address: 0x0bbd instruction:  LXI B, D16; B<--0x1f C<--0xa0 opcodes:  0x01 0xa0 0x1f
address: 0x0bc0 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x183aopcodes:  0xcd 0x3a 0x18
address: 0x0bc3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab6opcodes:  0xcd 0xb6 0x0a
address: 0x0bc6 instruction:  LDA adr; A <-- (0x20ec) opcodes:  0x3a 0xec 0x20
address: 0x0bc9 instruction:  CPI D8;  A - 0x00 opcodes:  0xfe 0x00 
address: 0x0bcb instruction:  JNZ adr; if NZ, PC <-- 0x0bda opcodes:  0xc2 0xda 0x0b
address: 0x0bce instruction:  LXI D, D16; D <-- 0x1f E <-- 0xd5 opcodes:  0x11 0xd5 0x1f
address: 0x0bd1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ae2opcodes:  0xcd 0xe2 0x0a
address: 0x0bd4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a80opcodes:  0xcd 0x80 0x0a
address: 0x0bd7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x189eopcodes:  0xcd 0x9e 0x18
address: 0x0bda instruction:  LXI H, D16; H <-- 0x20 L <-- 0xec opcodes:  0x21 0xec 0x20
address: 0x0bdd instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x0bde instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x0bdf instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x0be1 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x0be2 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x0be5 instruction:  JMP adr;  PC <-- 0x18df opcodes:  0xc3 0xdf 0x18
address: 0x0be8 instruction:  LXI D, D16; D <-- 0x1d E <-- 0xab opcodes:  0x11 0xab 0x1d
address: 0x0beb instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x0bee instruction:  JMP adr;  PC <-- 0x0b0b opcodes:  0xc3 0x0b 0x0b
address: 0x0bf1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x190aopcodes:  0xcd 0x0a 0x19
address: 0x0bf4 instruction:  JMP adr;  PC <-- 0x199a opcodes:  0xc3 0x9a 0x19
address: 0x0bf7 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x0bf8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0bf9 instruction:  NOP; no operation opcodes:  0x08 
address: 0x0bfa instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x0bfb instruction:  MVI C, D8; C <-- 0x26 opcodes:  0x0e 0x26 
address: 0x0bfd instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x0bfe instruction:  MVI C, D8; C <-- 0x0f opcodes:  0x0e 0x0f 
address: 0x0c00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c02 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c03 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c04 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c05 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c09 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c11 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c13 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c14 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c15 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c16 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c17 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c19 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c23 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c24 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c25 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c29 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c32 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c33 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c34 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c39 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c43 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c44 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c47 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c49 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c53 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c54 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c55 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c56 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c57 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c58 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c59 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c5f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c62 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c63 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c68 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c69 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c71 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c72 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c73 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c74 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c75 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c76 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c79 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c7f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c80 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c81 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c82 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c83 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c84 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c85 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c86 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c87 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c88 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c89 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c90 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c91 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c92 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c95 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c96 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c97 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c98 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c99 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0c9f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ca9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0caa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0caf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cb9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cbb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cbc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cbd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cbe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cbf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cc9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ccb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ccc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ccd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ccf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cd9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cda instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cdb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cdc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cdd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cde instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cdf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ce9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ceb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ced instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cf9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cfa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cfb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cfc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cfd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cfe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0cff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d02 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d03 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d04 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d05 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d09 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d11 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d13 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d14 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d15 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d16 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d17 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d19 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d23 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d24 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d25 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d29 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d32 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d33 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d34 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d39 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d43 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d44 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d47 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d49 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d53 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d54 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d55 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d56 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d57 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d58 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d59 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d5f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d62 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d63 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d68 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d69 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d71 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d72 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d73 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d74 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d75 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d76 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d79 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d7f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d80 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d81 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d82 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d83 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d84 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d85 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d86 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d87 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d88 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d89 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d90 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d91 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d92 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d95 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d96 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d97 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d98 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d99 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0d9f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0da9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0daa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0daf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0db9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dbb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dbc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dbd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dbe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dbf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dc9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dcb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dcc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dcd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dcf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dd9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dda instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ddb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ddc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ddd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dde instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ddf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0de9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0deb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ded instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0def instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0df9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dfa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dfb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dfc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dfd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dfe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0dff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e02 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e03 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e04 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e05 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e09 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e11 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e13 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e14 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e15 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e16 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e17 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e19 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e23 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e24 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e25 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e29 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e32 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e33 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e34 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e39 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e43 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e44 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e47 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e49 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e53 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e54 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e55 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e56 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e57 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e58 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e59 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e5f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e62 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e63 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e68 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e69 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e71 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e72 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e73 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e74 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e75 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e76 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e79 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e7f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e80 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e81 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e82 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e83 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e84 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e85 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e86 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e87 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e88 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e89 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e90 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e91 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e92 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e95 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e96 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e97 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e98 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e99 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0e9f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ea9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eaa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ead instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eaf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eb9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ebb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ebc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ebd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ebe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ebf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ec9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ecb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ecc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ecd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ece instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ecf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ed9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eda instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0edb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0edc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0edd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ede instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0edf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ee9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eeb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ef9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0efa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0efb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0efc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0efd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0efe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0eff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f02 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f03 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f04 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f05 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f09 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f11 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f13 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f14 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f15 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f16 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f17 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f19 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f23 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f24 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f25 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f29 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f32 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f33 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f34 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f39 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f43 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f44 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f47 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f49 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f53 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f54 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f55 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f56 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f57 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f58 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f59 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f5f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f62 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f63 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f68 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f69 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f71 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f72 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f73 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f74 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f75 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f76 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f79 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f7f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f80 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f81 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f82 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f83 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f84 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f85 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f86 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f87 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f88 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f89 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f90 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f91 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f92 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f95 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f96 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f97 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f98 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f99 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0f9f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fa9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0faa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0faf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fb9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fbb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fbc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fbd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fbe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fbf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fc9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fcb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fcc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fcd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fcf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fd9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fda instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fdb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fdc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fdd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fde instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fdf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fe9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0feb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ff9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ffa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ffb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ffc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ffd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0ffe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x0fff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1000 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1001 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1002 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1003 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1004 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1005 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1006 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1007 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1008 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1009 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x100f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1010 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1011 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1012 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1013 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1014 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1015 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1016 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1017 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1018 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1019 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x101f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1020 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1021 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1022 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1023 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1024 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1025 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1026 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1027 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1028 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1029 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x102f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1030 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1031 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1032 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1033 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1034 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1035 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1036 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1037 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1038 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1039 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x103f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1040 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1041 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1042 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1043 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1044 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1045 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1046 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1047 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1048 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1049 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x104f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1050 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1051 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1052 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1053 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1054 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1055 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1056 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1057 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1058 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1059 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x105f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1060 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1061 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1062 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1063 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1064 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1065 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1066 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1067 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1068 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1069 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x106f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1070 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1071 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1072 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1073 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1074 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1075 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1076 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1077 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1078 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1079 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x107f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1080 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1081 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1082 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1083 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1084 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1085 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1086 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1087 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1088 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1089 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x108f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1090 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1091 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1092 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1093 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1094 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1095 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1096 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1097 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1098 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1099 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x109f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10a9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10aa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10af instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10b9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10bb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10bc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10bd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10be instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10c9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10cb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10cc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10cd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10cf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10d9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10da instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10db instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10dc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10dd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10de instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10df instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10e9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10eb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10f9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10fa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10fb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10fc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10fd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10fe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x10ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1100 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1101 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1102 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1103 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1104 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1105 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1106 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1107 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1108 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1109 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x110f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1110 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1111 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1112 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1113 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1114 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1115 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1116 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1117 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1118 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1119 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x111f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1120 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1121 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1122 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1123 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1124 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1125 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1126 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1127 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1128 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1129 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x112f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1130 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1131 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1132 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1133 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1134 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1135 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1136 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1137 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1138 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1139 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x113f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1140 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1141 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1142 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1143 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1144 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1145 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1146 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1147 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1148 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1149 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x114f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1150 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1151 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1152 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1153 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1154 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1155 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1156 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1157 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1158 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1159 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x115f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1160 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1161 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1162 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1163 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1164 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1165 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1166 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1167 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1168 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1169 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x116f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1170 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1171 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1172 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1173 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1174 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1175 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1176 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1177 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1178 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1179 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x117f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1180 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1181 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1182 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1183 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1184 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1185 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1186 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1187 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1188 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1189 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x118f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1190 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1191 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1192 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1193 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1194 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1195 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1196 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1197 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1198 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1199 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x119f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11a9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11aa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11af instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11b9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11bb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11bc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11bd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11be instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11c9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11cb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11cc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11cd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11cf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11d9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11da instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11db instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11dc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11dd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11de instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11df instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11e9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11eb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11f9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11fa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11fb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11fc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11fd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11fe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x11ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1200 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1201 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1202 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1203 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1204 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1205 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1206 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1207 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1208 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1209 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x120f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1210 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1211 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1212 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1213 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1214 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1215 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1216 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1217 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1218 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1219 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x121f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1220 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1221 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1222 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1223 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1224 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1225 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1226 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1227 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1228 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1229 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x122f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1230 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1231 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1232 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1233 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1234 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1235 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1236 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1237 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1238 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1239 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x123f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1240 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1241 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1242 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1243 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1244 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1245 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1246 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1247 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1248 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1249 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x124f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1250 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1251 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1252 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1253 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1254 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1255 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1256 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1257 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1258 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1259 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x125f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1260 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1261 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1262 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1263 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1264 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1265 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1266 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1267 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1268 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1269 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x126f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1270 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1271 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1272 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1273 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1274 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1275 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1276 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1277 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1278 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1279 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x127f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1280 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1281 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1282 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1283 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1284 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1285 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1286 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1287 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1288 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1289 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x128f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1290 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1291 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1292 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1293 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1294 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1295 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1296 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1297 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1298 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1299 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x129f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12a9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12aa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12af instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12b9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12bb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12bc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12bd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12be instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12c9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12cb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12cc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12cd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12cf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12d9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12da instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12db instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12dc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12dd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12de instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12df instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12e9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12eb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12f9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12fa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12fb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12fc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12fd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12fe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x12ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1300 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1301 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1302 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1303 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1304 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1305 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1306 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1307 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1308 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1309 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x130f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1310 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1311 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1312 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1313 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1314 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1315 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1316 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1317 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1318 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1319 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x131f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1320 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1321 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1322 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1323 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1324 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1325 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1326 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1327 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1328 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1329 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x132f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1330 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1331 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1332 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1333 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1334 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1335 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1336 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1337 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1338 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1339 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x133f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1340 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1341 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1342 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1343 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1344 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1345 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1346 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1347 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1348 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1349 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x134f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1350 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1351 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1352 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1353 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1354 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1355 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1356 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1357 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1358 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1359 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x135f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1360 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1361 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1362 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1363 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1364 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1365 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1366 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1367 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1368 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1369 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x136f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1370 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1371 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1372 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1373 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1374 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1375 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1376 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1377 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1378 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1379 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x137f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1380 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1381 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1382 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1383 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1384 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1385 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1386 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1387 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1388 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1389 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x138f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1390 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1391 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1392 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1393 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1394 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1395 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1396 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1397 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1398 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1399 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x139f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13a9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13aa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ab instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ac instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13af instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13b9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ba instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13bb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13bc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13bd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13be instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13c9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13cb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13cc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13cd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13cf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13d9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13da instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13db instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13dc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13dd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13de instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13df instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13e9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ea instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13eb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ec instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ed instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13f9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13fa instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13fb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13fc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13fd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13fe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x13ff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1400 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1401 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1474opcodes:  0xcd 0x74 0x14
address: 0x1404 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1405 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1406 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x1407 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1408 instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x140a instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x140c instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x140d instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x140e instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x140f instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1410 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x1411 instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x1413 instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x1415 instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x1416 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1417 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x1418 instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x141b instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x141c instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x141d instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x141e instruction:  JNZ adr; if NZ, PC <-- 0x1405 opcodes:  0xc2 0x05 0x14
address: 0x1421 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1422 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1423 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1424 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1474opcodes:  0xcd 0x74 0x14
address: 0x1427 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1428 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x1429 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x142a instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x142b instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x142c instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x142d instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x142e instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x142f instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x1432 instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x1433 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x1434 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1435 instruction:  JNZ adr; if NZ, PC <-- 0x1427 opcodes:  0xc2 0x27 0x14
address: 0x1438 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1439 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x143a instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x143b instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x143c instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x143d instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x1440 instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x1441 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x1442 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1443 instruction:  JNZ adr; if NZ, PC <-- 0x1439 opcodes:  0xc2 0x39 0x14
address: 0x1446 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1447 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1448 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1449 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x144f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1450 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1451 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1452 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1474opcodes:  0xcd 0x74 0x14
address: 0x1455 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1456 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x1457 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1458 instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x145a instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x145c instruction:  CMA; A <-- !A opcodes:  0x2f 
address: 0x145d instruction:  ANA M; A <-- A & (HL) opcodes:  0xa6 
address: 0x145e instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x145f instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1460 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1461 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x1462 instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x1464 instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x1466 instruction:  CMA; A <-- !A opcodes:  0x2f 
address: 0x1467 instruction:  ANA M; A <-- A & (HL) opcodes:  0xa6 
address: 0x1468 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1469 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x146a instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x146d instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x146e instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x146f instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1470 instruction:  JNZ adr; if NZ, PC <-- 0x1455 opcodes:  0xc2 0x55 0x14
address: 0x1473 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1474 instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x1475 instruction:  ANI D8; A <-- A & 0x07 opcodes:  0xe6 0x07 
address: 0x1477 instruction:  OUT D8;  special? opcodes:  0xd3 0x02 
address: 0x1479 instruction:  JMP adr;  PC <-- 0x1a47 opcodes:  0xc3 0x47 0x1a
address: 0x147c instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x147d instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x147e instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x147f instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1480 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1481 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1482 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1483 instruction:  JNZ adr; if NZ, PC <-- 0x147e opcodes:  0xc2 0x7e 0x14
address: 0x1486 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x1487 instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x148a instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x148b instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x148c instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x148d instruction:  JNZ adr; if NZ, PC <-- 0x147c opcodes:  0xc2 0x7c 0x14
address: 0x1490 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1491 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1474opcodes:  0xcd 0x74 0x14
address: 0x1494 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x1495 instruction:  STA adr ; (0x2061) <-- A opcodes:  0x32 0x61 0x20
address: 0x1498 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1499 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x149a instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x149b instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x149d instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x149f instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x14a0 instruction:  ANA M; A <-- A & (HL) opcodes:  0xa6 
address: 0x14a1 instruction:  JZ adr;  PC <-- 0x14a9 opcodes:  0xca 0xa9 0x14
address: 0x14a4 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x14a6 instruction:  STA adr ; (0x2061) <-- A opcodes:  0x32 0x61 0x20
address: 0x14a9 instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x14aa instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x14ab instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x14ac instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x14ad instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x14ae instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x14af instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x14b1 instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x14b3 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x14b4 instruction:  ANA M; A <-- A & (HL) opcodes:  0xa6 
address: 0x14b5 instruction:  JZ adr;  PC <-- 0x14bd opcodes:  0xca 0xbd 0x14
address: 0x14b8 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x14ba instruction:  STA adr ; (0x2061) <-- A opcodes:  0x32 0x61 0x20
address: 0x14bd instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x14be instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x14bf instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x14c0 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x14c1 instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x14c4 instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x14c5 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x14c6 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x14c7 instruction:  JNZ adr; if NZ, PC <-- 0x1498 opcodes:  0xc2 0x98 0x14
address: 0x14ca instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x14cb instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x14cc instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x14cd instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x14ce instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x14d1 instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x14d2 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x14d3 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x14d4 instruction:  JNZ adr; if NZ, PC <-- 0x14cc opcodes:  0xc2 0xcc 0x14
address: 0x14d7 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x14d8 instruction:  LDA adr; A <-- (0x2025) opcodes:  0x3a 0x25 0x20
address: 0x14db instruction:  CPI D8;  A - 0x05 opcodes:  0xfe 0x05 
address: 0x14dd instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x14de instruction:  CPI D8;  A - 0x02 opcodes:  0xfe 0x02 
address: 0x14e0 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x14e1 instruction:  LDA adr; A <-- (0x2029) opcodes:  0x3a 0x29 0x20
address: 0x14e4 instruction:  CPI D8;  A - 0xd8 opcodes:  0xfe 0xd8 
address: 0x14e6 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x14e7 instruction:  JNC adr; if NCY, PC <-- 0x1530 opcodes:  0xd2 0x30 0x15
address: 0x14ea instruction:  LDA adr; A <-- (0x2002) opcodes:  0x3a 0x02 0x20
address: 0x14ed instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x14ee instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x14ef instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x14f0 instruction:  CPI D8;  A - 0xce opcodes:  0xfe 0xce 
address: 0x14f2 instruction:  JNC adr; if NCY, PC <-- 0x1579 opcodes:  0xd2 0x79 0x15
address: 0x14f5 instruction:  ADI D8; A <-- A + 0x06 opcodes:  0xc6 0x06 
address: 0x14f7 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x14f8 instruction:  LDA adr; A <-- (0x2009) opcodes:  0x3a 0x09 0x20
address: 0x14fb instruction:  CPI D8;  A - 0x90 opcodes:  0xfe 0x90 
address: 0x14fd instruction:  JNC adr; if NCY, PC <-- 0x1504 opcodes:  0xd2 0x04 0x15
address: 0x1500 instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x1501 instruction:  JNC adr; if NCY, PC <-- 0x1530 opcodes:  0xd2 0x30 0x15
address: 0x1504 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x1505 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1562opcodes:  0xcd 0x62 0x15
address: 0x1508 instruction:  LDA adr; A <-- (0x202a) opcodes:  0x3a 0x2a 0x20
address: 0x150b instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x150c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x156fopcodes:  0xcd 0x6f 0x15
address: 0x150f instruction:  SHLD adr ; (0x2064) <-- L , (0x2064) + 1 <-- H opcodes:  0x22 0x64 0x20
address: 0x1512 instruction:  MVI A, D8; A <-- 0x05 opcodes:  0x3e 0x05 
address: 0x1514 instruction:  STA adr ; (0x2025) <-- A opcodes:  0x32 0x25 0x20
address: 0x1517 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1581opcodes:  0xcd 0x81 0x15
address: 0x151a instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x151b instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x151c instruction:  JZ adr;  PC <-- 0x1530 opcodes:  0xca 0x30 0x15
address: 0x151f instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x1521 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a5fopcodes:  0xcd 0x5f 0x0a
address: 0x1524 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x1527 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x15d3opcodes:  0xcd 0xd3 0x15
address: 0x152a instruction:  MVI A, D8; A <-- 0x10 opcodes:  0x3e 0x10 
address: 0x152c instruction:  STA adr ; (0x2003) <-- A opcodes:  0x32 0x03 0x20
address: 0x152f instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1530 instruction:  MVI A, D8; A <-- 0x03 opcodes:  0x3e 0x03 
address: 0x1532 instruction:  STA adr ; (0x2025) <-- A opcodes:  0x32 0x25 0x20
address: 0x1535 instruction:  JMP adr;  PC <-- 0x154a opcodes:  0xc3 0x4a 0x15
address: 0x1538 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x03 opcodes:  0x21 0x03 0x20
address: 0x153b instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x153c instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x153d instruction:  LHLD adr; (0x2064) <-- L , (0x2064) + 1 <-- H opcodes:  0x2a 0x64 0x20
address: 0x1540 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x1542 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1424opcodes:  0xcd 0x24 0x14
address: 0x1545 instruction:  MVI A, D8; A <-- 0x04 opcodes:  0x3e 0x04 
address: 0x1547 instruction:  STA adr ; (0x2025) <-- A opcodes:  0x32 0x25 0x20
address: 0x154a instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x154b instruction:  STA adr ; (0x2002) <-- A opcodes:  0x32 0x02 0x20
address: 0x154e instruction:  MVI B, D8;  B <-- 0xf7 opcodes:  0x06 0xf7 
address: 0x1550 instruction:  JMP adr;  PC <-- 0x19dc opcodes:  0xc3 0xdc 0x19
address: 0x1553 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1554 instruction:  MVI C, D8; C <-- 0x00 opcodes:  0x0e 0x00 
address: 0x1556 instruction:  CMP H;  A - H opcodes:  0xbc 
address: 0x1557 instruction:  CNC adr;  if NCY, CALL (0x1590) opcodes:  0xd4 0x90 0x15
address: 0x155a instruction:  CMP H;  A - H opcodes:  0xbc 
address: 0x155b instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x155c instruction:  ADI D8; A <-- A + 0x10 opcodes:  0xc6 0x10 
address: 0x155e instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x155f instruction:  JMP adr;  PC <-- 0x155a opcodes:  0xc3 0x5a 0x15
address: 0x1562 instruction:  LDA adr; A <-- (0x2009) opcodes:  0x3a 0x09 0x20
address: 0x1565 instruction:  MOV H,L; H <-- L opcodes:  0x65 
address: 0x1566 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1554opcodes:  0xcd 0x54 0x15
address: 0x1569 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x156a instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x156b instruction:  SBI D8;  A <-- A - 0x10 - CY opcodes:  0xde 0x10 
address: 0x156d instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x156e instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x156f instruction:  LDA adr; A <-- (0x200a) opcodes:  0x3a 0x0a 0x20
address: 0x1572 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1554opcodes:  0xcd 0x54 0x15
address: 0x1575 instruction:  SBI D8;  A <-- A - 0x10 - CY opcodes:  0xde 0x10 
address: 0x1577 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x1578 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1579 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x157b instruction:  STA adr ; (0x2085) <-- A opcodes:  0x32 0x85 0x20
address: 0x157e instruction:  JMP adr;  PC <-- 0x1545 opcodes:  0xc3 0x45 0x15
address: 0x1581 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1582 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1583 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1584 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1585 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1586 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1587 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1588 instruction:  ADD C; A <-- A + C opcodes:  0x81 
address: 0x1589 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x158a instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x158b instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x158e instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x158f instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1590 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1591 instruction:  ADI D8; A <-- A + 0x10 opcodes:  0xc6 0x10 
address: 0x1593 instruction:  JM adr; if M,  PC <-- 0x1590 opcodes:  0xfa 0x90 0x15
address: 0x1596 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1597 instruction:  LDA adr; A <-- (0x200d) opcodes:  0x3a 0x0d 0x20
address: 0x159a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x159b instruction:  JNZ adr; if NZ, PC <-- 0x15b7 opcodes:  0xc2 0xb7 0x15
address: 0x159e instruction:  LXI H, D16; H <-- 0x3e L <-- 0xa4 opcodes:  0x21 0xa4 0x3e
address: 0x15a1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x15c5opcodes:  0xcd 0xc5 0x15
address: 0x15a4 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x15a5 instruction:  MVI B, D8;  B <-- 0xfe opcodes:  0x06 0xfe 
address: 0x15a7 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x15a9 instruction:  STA adr ; (0x200d) <-- A opcodes:  0x32 0x0d 0x20
address: 0x15ac instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x15ad instruction:  STA adr ; (0x2008) <-- A opcodes:  0x32 0x08 0x20
address: 0x15b0 instruction:  LDA adr; A <-- (0x200e) opcodes:  0x3a 0x0e 0x20
address: 0x15b3 instruction:  STA adr ; (0x2007) <-- A opcodes:  0x32 0x07 0x20
address: 0x15b6 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x15b7 instruction:  LXI H, D16; H <-- 0x25 L <-- 0x24 opcodes:  0x21 0x24 0x25
address: 0x15ba instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x15c5opcodes:  0xcd 0xc5 0x15
address: 0x15bd instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x15be instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18f1opcodes:  0xcd 0xf1 0x18
address: 0x15c1 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x15c2 instruction:  JMP adr;  PC <-- 0x15a9 opcodes:  0xc3 0xa9 0x15
address: 0x15c5 instruction:  MVI B, D8;  B <-- 0x17 opcodes:  0x06 0x17 
address: 0x15c7 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x15c8 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x15c9 instruction:  JNZ adr; if NZ, PC <-- 0x166b opcodes:  0xc2 0x6b 0x16
address: 0x15cc instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x15cd instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x15ce instruction:  JNZ adr; if NZ, PC <-- 0x15c7 opcodes:  0xc2 0xc7 0x15
address: 0x15d1 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x15d2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x15d3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1474opcodes:  0xcd 0x74 0x14
address: 0x15d6 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x15d7 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x15d8 instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x15d9 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x15da instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x15dc instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x15de instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x15df instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x15e0 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x15e1 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x15e2 instruction:  OUT D8;  special? opcodes:  0xd3 0x04 
address: 0x15e4 instruction:  IN D8; special opcodes:  0xdb 0x03 
address: 0x15e6 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x15e7 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x15e8 instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x15eb instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x15ec instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x15ed instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x15ee instruction:  JNZ adr; if NZ, PC <-- 0x15d7 opcodes:  0xc2 0xd7 0x15
address: 0x15f1 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x15f2 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x15f3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1611opcodes:  0xcd 0x11 0x16
address: 0x15f6 instruction:  LXI B, D16; B<--0x37 C<--0x00 opcodes:  0x01 0x00 0x37
address: 0x15f9 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x15fa instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x15fb instruction:  JZ adr;  PC <-- 0x15ff opcodes:  0xca 0xff 0x15
address: 0x15fe instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x15ff instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1600 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1601 instruction:  JNZ adr; if NZ, PC <-- 0x15f9 opcodes:  0xc2 0xf9 0x15
address: 0x1604 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x1605 instruction:  STA adr ; (0x2082) <-- A opcodes:  0x32 0x82 0x20
address: 0x1608 instruction:  CPI D8;  A - 0x01 opcodes:  0xfe 0x01 
address: 0x160a instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x160b instruction:  LXI H, D16; H <-- 0x20 L <-- 0x6b opcodes:  0x21 0x6b 0x20
address: 0x160e instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x1610 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1611 instruction:  MVI L, D8; L <-- 0x00 opcodes:  0x2e 0x00 
address: 0x1613 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x1616 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x1617 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1618 instruction:  LDA adr; A <-- (0x2015) opcodes:  0x3a 0x15 0x20
address: 0x161b instruction:  CPI D8;  A - 0xff opcodes:  0xfe 0xff 
address: 0x161d instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x161e instruction:  LXI H, D16; H <-- 0x20 L <-- 0x10 opcodes:  0x21 0x10 0x20
address: 0x1621 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1622 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1623 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x1624 instruction:  ORA B; A <-- A | B opcodes:  0xb0 
address: 0x1625 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x1626 instruction:  LDA adr; A <-- (0x2025) opcodes:  0x3a 0x25 0x20
address: 0x1629 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x162a instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x162b instruction:  LDA adr; A <-- (0x20ef) opcodes:  0x3a 0xef 0x20
address: 0x162e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x162f instruction:  JZ adr;  PC <-- 0x1652 opcodes:  0xca 0x52 0x16
address: 0x1632 instruction:  LDA adr; A <-- (0x202d) opcodes:  0x3a 0x2d 0x20
address: 0x1635 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x1636 instruction:  JNZ adr; if NZ, PC <-- 0x1648 opcodes:  0xc2 0x48 0x16
address: 0x1639 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x17c0opcodes:  0xcd 0xc0 0x17
address: 0x163c instruction:  ANI D8; A <-- A & 0x10 opcodes:  0xe6 0x10 
address: 0x163e instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x163f instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x1641 instruction:  STA adr ; (0x2025) <-- A opcodes:  0x32 0x25 0x20
address: 0x1644 instruction:  STA adr ; (0x202d) <-- A opcodes:  0x32 0x2d 0x20
address: 0x1647 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1648 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x17c0opcodes:  0xcd 0xc0 0x17
address: 0x164b instruction:  ANI D8; A <-- A & 0x10 opcodes:  0xe6 0x10 
address: 0x164d instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x164e instruction:  STA adr ; (0x202d) <-- A opcodes:  0x32 0x2d 0x20
address: 0x1651 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1652 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x25 opcodes:  0x21 0x25 0x20
address: 0x1655 instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x1657 instruction:  LHLD adr; (0x20ed) <-- L , (0x20ed) + 1 <-- H opcodes:  0x2a 0xed 0x20
address: 0x165a instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x165b instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x165c instruction:  CPI D8;  A - 0x7e opcodes:  0xfe 0x7e 
address: 0x165e instruction:  JC adr; if CY,  PC <-- 0x1663 opcodes:  0xda 0x63 0x16
address: 0x1661 instruction:  MVI L, D8; L <-- 0x74 opcodes:  0x2e 0x74 
address: 0x1663 instruction:  SHLD adr ; (0x20ed) <-- L , (0x20ed) + 1 <-- H opcodes:  0x22 0xed 0x20
address: 0x1666 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1667 instruction:  STA adr ; (0x201d) <-- A opcodes:  0x32 0x1d 0x20
address: 0x166a instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x166b instruction:  STC; CY = 1 opcodes:  0x37 
address: 0x166c instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x166d instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x166e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a8bopcodes:  0xcd 0x8b 0x1a
address: 0x1671 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1910opcodes:  0xcd 0x10 0x19
address: 0x1674 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x1676 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09caopcodes:  0xcd 0xca 0x09
address: 0x1679 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x167a instruction:  LXI D, D16; D <-- 0x20 E <-- 0xf5 opcodes:  0x11 0xf5 0x20
address: 0x167d instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x167e instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x167f instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1680 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x1681 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1682 instruction:  JZ adr;  PC <-- 0x168b opcodes:  0xca 0x8b 0x16
address: 0x1685 instruction:  JNC adr; if NCY, PC <-- 0x1698 opcodes:  0xd2 0x98 0x16
address: 0x1688 instruction:  JMP adr;  PC <-- 0x168f opcodes:  0xc3 0x8f 0x16
address: 0x168b instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x168c instruction:  JNC adr; if NCY, PC <-- 0x1698 opcodes:  0xd2 0x98 0x16
address: 0x168f instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1690 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1691 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1692 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1693 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1694 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1695 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1950opcodes:  0xcd 0x50 0x19
address: 0x1698 instruction:  LDA adr; A <-- (0x20ce) opcodes:  0x3a 0xce 0x20
address: 0x169b instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x169c instruction:  JZ adr;  PC <-- 0x16c9 opcodes:  0xca 0xc9 0x16
address: 0x169f instruction:  LXI H, D16; H <-- 0x28 L <-- 0x03 opcodes:  0x21 0x03 0x28
address: 0x16a2 instruction:  LXI D, D16; D <-- 0x1a E <-- 0xa6 opcodes:  0x11 0xa6 0x1a
address: 0x16a5 instruction:  MVI C, D8; C <-- 0x14 opcodes:  0x0e 0x14 
address: 0x16a7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x16aa instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x16ab instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x16ac instruction:  MVI B, D8;  B <-- 0x1b opcodes:  0x06 0x1b 
address: 0x16ae instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x16b1 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x16b2 instruction:  JC adr; if CY,  PC <-- 0x16b7 opcodes:  0xda 0xb7 0x16
address: 0x16b5 instruction:  MVI B, D8;  B <-- 0x1c opcodes:  0x06 0x1c 
address: 0x16b7 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x16b8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08ffopcodes:  0xcd 0xff 0x08
address: 0x16bb instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x16be instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18e7opcodes:  0xcd 0xe7 0x18
address: 0x16c1 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x16c2 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x16c3 instruction:  JZ adr;  PC <-- 0x16c9 opcodes:  0xca 0xc9 0x16
address: 0x16c6 instruction:  JMP adr;  PC <-- 0x02ed opcodes:  0xc3 0xed 0x02
address: 0x16c9 instruction:  LXI H, D16; H <-- 0x2d L <-- 0x18 opcodes:  0x21 0x18 0x2d
address: 0x16cc instruction:  LXI D, D16; D <-- 0x1a E <-- 0xa6 opcodes:  0x11 0xa6 0x1a
address: 0x16cf instruction:  MVI C, D8; C <-- 0x0a opcodes:  0x0e 0x0a 
address: 0x16d1 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x16d4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab6opcodes:  0xcd 0xb6 0x0a
address: 0x16d7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x16da instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x16db instruction:  STA adr ; (0x20ef) <-- A opcodes:  0x32 0xef 0x20
address: 0x16de instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x16e0 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d1opcodes:  0xcd 0xd1 0x19
address: 0x16e3 instruction:  JMP adr;  PC <-- 0x0b89 opcodes:  0xc3 0x89 0x0b
address: 0x16e6 instruction:  LXI SP, D16; SP.hi <-- 0x24 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x24
address: 0x16e9 instruction:  EI; special? opcodes:  0xfb 
address: 0x16ea instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x16eb instruction:  STA adr ; (0x2015) <-- A opcodes:  0x32 0x15 0x20
address: 0x16ee instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14d8opcodes:  0xcd 0xd8 0x14
address: 0x16f1 instruction:  MVI B, D8;  B <-- 0x04 opcodes:  0x06 0x04 
address: 0x16f3 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x18faopcodes:  0xcd 0xfa 0x18
address: 0x16f6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a59opcodes:  0xcd 0x59 0x0a
address: 0x16f9 instruction:  JNZ adr; if NZ, PC <-- 0x16ee opcodes:  0xc2 0xee 0x16
address: 0x16fc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d7opcodes:  0xcd 0xd7 0x19
address: 0x16ff instruction:  LXI H, D16; H <-- 0x27 L <-- 0x01 opcodes:  0x21 0x01 0x27
address: 0x1702 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19faopcodes:  0xcd 0xfa 0x19
address: 0x1705 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x1706 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a8bopcodes:  0xcd 0x8b 0x1a
address: 0x1709 instruction:  MVI B, D8;  B <-- 0xfb opcodes:  0x06 0xfb 
address: 0x170b instruction:  JMP adr;  PC <-- 0x196b opcodes:  0xc3 0x6b 0x19
address: 0x170e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09caopcodes:  0xcd 0xca 0x09
address: 0x1711 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1712 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1713 instruction:  LXI D, D16; D <-- 0x1c E <-- 0xb8 opcodes:  0x11 0xb8 0x1c
address: 0x1716 instruction:  LXI H, D16; H <-- 0x1a L <-- 0xa1 opcodes:  0x21 0xa1 0x1a
address: 0x1719 instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x171b instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x171c instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x171d instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x171e instruction:  JNC adr; if NCY, PC <-- 0x1727 opcodes:  0xd2 0x27 0x17
address: 0x1721 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1722 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1723 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1724 instruction:  JNZ adr; if NZ, PC <-- 0x171c opcodes:  0xc2 0x1c 0x17
address: 0x1727 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1728 instruction:  STA adr ; (0x20cf) <-- A opcodes:  0x32 0xcf 0x20
address: 0x172b instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x172c instruction:  LDA adr; A <-- (0x2025) opcodes:  0x3a 0x25 0x20
address: 0x172f instruction:  CPI D8;  A - 0x00 opcodes:  0xfe 0x00 
address: 0x1731 instruction:  JNZ adr; if NZ, PC <-- 0x1739 opcodes:  0xc2 0x39 0x17
address: 0x1734 instruction:  MVI B, D8;  B <-- 0xfd opcodes:  0x06 0xfd 
address: 0x1736 instruction:  JMP adr;  PC <-- 0x19dc opcodes:  0xc3 0xdc 0x19
address: 0x1739 instruction:  MVI B, D8;  B <-- 0x02 opcodes:  0x06 0x02 
address: 0x173b instruction:  JMP adr;  PC <-- 0x18fa opcodes:  0xc3 0xfa 0x18
address: 0x173e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x173f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1740 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x9b opcodes:  0x21 0x9b 0x20
address: 0x1743 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x1744 instruction:  CZ adr;  if Z,  CALL 0x176d opcodes:  0xcc 0x6d 0x17
address: 0x1747 instruction:  LDA adr; A <-- (0x2068) opcodes:  0x3a 0x68 0x20
address: 0x174a instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x174b instruction:  JZ adr;  PC <-- 0x176d opcodes:  0xca 0x6d 0x17
address: 0x174e instruction:  LXI H, D16; H <-- 0x20 L <-- 0x96 opcodes:  0x21 0x96 0x20
address: 0x1751 instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x1752 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x1753 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x98 opcodes:  0x21 0x98 0x20
address: 0x1756 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1757 instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x1759 instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x175c instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x175d instruction:  JZ adr;  PC <-- 0x176d opcodes:  0xca 0x6d 0x17
address: 0x1760 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x1761 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1762 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x1763 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1764 instruction:  DCX H; HL <-- HL - 1 opcodes:  0x2b 
address: 0x1765 instruction:  MVI M, D8;  (HL) <-- 0x01 opcodes:  0x36 0x01 
address: 0x1767 instruction:  MVI A, D8; A <-- 0x04 opcodes:  0x3e 0x04 
address: 0x1769 instruction:  STA adr ; (0x209b) <-- A opcodes:  0x32 0x9b 0x20
address: 0x176c instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x176d instruction:  LDA adr; A <-- (0x2098) opcodes:  0x3a 0x98 0x20
address: 0x1770 instruction:  ANI D8; A <-- A & 0x30 opcodes:  0xe6 0x30 
address: 0x1772 instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x1774 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1775 instruction:  LDA adr; A <-- (0x2095) opcodes:  0x3a 0x95 0x20
address: 0x1778 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x1779 instruction:  JZ adr;  PC <-- 0x17aa opcodes:  0xca 0xaa 0x17
address: 0x177c instruction:  LXI H, D16; H <-- 0x1a L <-- 0x11 opcodes:  0x21 0x11 0x1a
address: 0x177f instruction:  LXI D, D16; D <-- 0x1a E <-- 0x21 opcodes:  0x11 0x21 0x1a
address: 0x1782 instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x1785 instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1786 instruction:  JNC adr; if NCY, PC <-- 0x178e opcodes:  0xd2 0x8e 0x17
address: 0x1789 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x178a instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x178b instruction:  JMP adr;  PC <-- 0x1785 opcodes:  0xc3 0x85 0x17
address: 0x178e instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x178f instruction:  STA adr ; (0x2097) <-- A opcodes:  0x32 0x97 0x20
address: 0x1792 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x98 opcodes:  0x21 0x98 0x20
address: 0x1795 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1796 instruction:  ANI D8; A <-- A & 0x30 opcodes:  0xe6 0x30 
address: 0x1798 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x1799 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x179a instruction:  ANI D8; A <-- A & 0x0f opcodes:  0xe6 0x0f 
address: 0x179c instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x179d instruction:  CPI D8;  A - 0x10 opcodes:  0xfe 0x10 
address: 0x179f instruction:  JNZ adr; if NZ, PC <-- 0x17a4 opcodes:  0xc2 0xa4 0x17
address: 0x17a2 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x17a4 instruction:  ORA B; A <-- A | B opcodes:  0xb0 
address: 0x17a5 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x17a6 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x17a7 instruction:  STA adr ; (0x2095) <-- A opcodes:  0x32 0x95 0x20
address: 0x17aa instruction:  LXI H, D16; H <-- 0x20 L <-- 0x99 opcodes:  0x21 0x99 0x20
address: 0x17ad instruction:  DCR M; (HL) <-- (HL) - 1 opcodes:  0x35 
address: 0x17ae instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x17af instruction:  MVI B, D8;  B <-- 0xef opcodes:  0x06 0xef 
address: 0x17b1 instruction:  JMP adr;  PC <-- 0x19dc opcodes:  0xc3 0xdc 0x19
address: 0x17b4 instruction:  MVI B, D8;  B <-- 0xef opcodes:  0x06 0xef 
address: 0x17b6 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x98 opcodes:  0x21 0x98 0x20
address: 0x17b9 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x17ba instruction:  ANA B; A <-- A & B opcodes:  0xa0 
address: 0x17bb instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x17bc instruction:  OUT D8;  special? opcodes:  0xd3 0x05 
address: 0x17be instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x17bf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x17c0 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x17c3 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x17c4 instruction:  JNC adr; if NCY, PC <-- 0x17ca opcodes:  0xd2 0xca 0x17
address: 0x17c7 instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x17c9 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x17ca instruction:  IN D8; special opcodes:  0xdb 0x02 
address: 0x17cc instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x17cd instruction:  IN D8; special opcodes:  0xdb 0x02 
address: 0x17cf instruction:  ANI D8; A <-- A & 0x04 opcodes:  0xe6 0x04 
address: 0x17d1 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x17d2 instruction:  LDA adr; A <-- (0x209a) opcodes:  0x3a 0x9a 0x20
address: 0x17d5 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x17d6 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x17d7 instruction:  LXI SP, D16; SP.hi <-- 0x24 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x24
address: 0x17da instruction:  MVI B, D8;  B <-- 0x04 opcodes:  0x06 0x04 
address: 0x17dc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x09d6opcodes:  0xcd 0xd6 0x09
address: 0x17df instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x17e0 instruction:  JNZ adr; if NZ, PC <-- 0x17dc opcodes:  0xc2 0xdc 0x17
address: 0x17e3 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x17e5 instruction:  STA adr ; (0x209a) <-- A opcodes:  0x32 0x9a 0x20
address: 0x17e8 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d7opcodes:  0xcd 0xd7 0x19
address: 0x17eb instruction:  EI; special? opcodes:  0xfb 
address: 0x17ec instruction:  LXI D, D16; D <-- 0x1c E <-- 0xbc opcodes:  0x11 0xbc 0x1c
address: 0x17ef instruction:  LXI H, D16; H <-- 0x30 L <-- 0x16 opcodes:  0x21 0x16 0x30
address: 0x17f2 instruction:  MVI C, D8; C <-- 0x04 opcodes:  0x0e 0x04 
address: 0x17f4 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x17f7 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x17fa instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x17fb instruction:  STA adr ; (0x209a) <-- A opcodes:  0x32 0x9a 0x20
address: 0x17fe instruction:  STA adr ; (0x2093) <-- A opcodes:  0x32 0x93 0x20
address: 0x1801 instruction:  JMP adr;  PC <-- 0x16c9 opcodes:  0xc3 0xc9 0x16
address: 0x1804 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x84 opcodes:  0x21 0x84 0x20
address: 0x1807 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1808 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x1809 instruction:  JZ adr;  PC <-- 0x0707 opcodes:  0xca 0x07 0x07
address: 0x180c instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x180d instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x180e instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x180f instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x1810 instruction:  MVI B, D8;  B <-- 0x01 opcodes:  0x06 0x01 
address: 0x1812 instruction:  JMP adr;  PC <-- 0x18fa opcodes:  0xc3 0xfa 0x18
address: 0x1815 instruction:  LXI H, D16; H <-- 0x28 L <-- 0x10 opcodes:  0x21 0x10 0x28
address: 0x1818 instruction:  LXI D, D16; D <-- 0x1c E <-- 0xa3 opcodes:  0x11 0xa3 0x1c
address: 0x181b instruction:  MVI C, D8; C <-- 0x15 opcodes:  0x0e 0x15 
address: 0x181d instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08f3opcodes:  0xcd 0xf3 0x08
address: 0x1820 instruction:  MVI A, D8; A <-- 0x0a opcodes:  0x3e 0x0a 
address: 0x1822 instruction:  STA adr ; (0x206c) <-- A opcodes:  0x32 0x6c 0x20
address: 0x1825 instruction:  LXI B, D16; B<--0x1d C<--0xbe opcodes:  0x01 0xbe 0x1d
address: 0x1828 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1856opcodes:  0xcd 0x56 0x18
address: 0x182b instruction:  JC adr; if CY,  PC <-- 0x1837 opcodes:  0xda 0x37 0x18
address: 0x182e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1844opcodes:  0xcd 0x44 0x18
address: 0x1831 instruction:  JMP adr;  PC <-- 0x1828 opcodes:  0xc3 0x28 0x18
address: 0x1834 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0ab1opcodes:  0xcd 0xb1 0x0a
address: 0x1837 instruction:  LXI B, D16; B<--0x1d C<--0xcf opcodes:  0x01 0xcf 0x1d
address: 0x183a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1856opcodes:  0xcd 0x56 0x18
address: 0x183d instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x183e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x184copcodes:  0xcd 0x4c 0x18
address: 0x1841 instruction:  JMP adr;  PC <-- 0x183a opcodes:  0xc3 0x3a 0x18
address: 0x1844 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1845 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x1847 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1439opcodes:  0xcd 0x39 0x14
address: 0x184a instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x184b instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x184c instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x184d instruction:  LDA adr; A <-- (0x206c) opcodes:  0x3a 0x6c 0x20
address: 0x1850 instruction:  MOV C,A; C <-- A opcodes:  0x4f 
address: 0x1851 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x0a93opcodes:  0xcd 0x93 0x0a
address: 0x1854 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x1855 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1856 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1857 instruction:  CPI D8;  A - 0xff opcodes:  0xfe 0xff 
address: 0x1859 instruction:  STC; CY = 1 opcodes:  0x37 
address: 0x185a instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x185b instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x185c instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x185d instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x185e instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x185f instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1860 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1861 instruction:  MOV E,A; E <-- A opcodes:  0x5f 
address: 0x1862 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1863 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1864 instruction:  MOV D,A; D <-- A opcodes:  0x57 
address: 0x1865 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1866 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x1867 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1868 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xc2 opcodes:  0x21 0xc2 0x20
address: 0x186b instruction:  INR M; (HL) <-- (HL) + 1 opcodes:  0x34 
address: 0x186c instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x186d instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x186e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01d9opcodes:  0xcd 0xd9 0x01
address: 0x1871 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x1872 instruction:  LDA adr; A <-- (0x20ca) opcodes:  0x3a 0xca 0x20
address: 0x1875 instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x1876 instruction:  JZ adr;  PC <-- 0x1898 opcodes:  0xca 0x98 0x18
address: 0x1879 instruction:  LDA adr; A <-- (0x20c2) opcodes:  0x3a 0xc2 0x20
address: 0x187c instruction:  ANI D8; A <-- A & 0x04 opcodes:  0xe6 0x04 
address: 0x187e instruction:  LHLD adr; (0x20cc) <-- L , (0x20cc) + 1 <-- H opcodes:  0x2a 0xcc 0x20
address: 0x1881 instruction:  JNZ adr; if NZ, PC <-- 0x1888 opcodes:  0xc2 0x88 0x18
address: 0x1884 instruction:  LXI D, D16; D <-- 0x00 E <-- 0x30 opcodes:  0x11 0x30 0x00
address: 0x1887 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1888 instruction:  SHLD adr ; (0x20c7) <-- L , (0x20c7) + 1 <-- H opcodes:  0x22 0xc7 0x20
address: 0x188b instruction:  LXI H, D16; H <-- 0x20 L <-- 0xc5 opcodes:  0x21 0xc5 0x20
address: 0x188e instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a3bopcodes:  0xcd 0x3b 0x1a
address: 0x1891 instruction:  XCHG; 	H <-> D; L <-> E opcodes:  0xeb 0xc3 
address: 0x1893 instruction:  OUT D8;  special? opcodes:  0xd3 0x15 
address: 0x1895 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1896 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1897 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1898 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x189a instruction:  STA adr ; (0x20cb) <-- A opcodes:  0x32 0xcb 0x20
address: 0x189d instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x189e instruction:  LXI H, D16; H <-- 0x20 L <-- 0x50 opcodes:  0x21 0x50 0x20
address: 0x18a1 instruction:  LXI D, D16; D <-- 0x1b E <-- 0xc0 opcodes:  0x11 0xc0 0x1b
address: 0x18a4 instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x18a6 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a32opcodes:  0xcd 0x32 0x1a
address: 0x18a9 instruction:  MVI A, D8; A <-- 0x02 opcodes:  0x3e 0x02 
address: 0x18ab instruction:  STA adr ; (0x2080) <-- A opcodes:  0x32 0x80 0x20
address: 0x18ae instruction:  MVI A, D8; A <-- 0xff opcodes:  0x3e 0xff 
address: 0x18b0 instruction:  STA adr ; (0x207e) <-- A opcodes:  0x32 0x7e 0x20
address: 0x18b3 instruction:  MVI A, D8; A <-- 0x04 opcodes:  0x3e 0x04 
address: 0x18b5 instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x18b8 instruction:  LDA adr; A <-- (0x2055) opcodes:  0x3a 0x55 0x20
address: 0x18bb instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x18bd instruction:  JZ adr;  PC <-- 0x18b8 opcodes:  0xca 0xb8 0x18
address: 0x18c0 instruction:  LDA adr; A <-- (0x2055) opcodes:  0x3a 0x55 0x20
address: 0x18c3 instruction:  ANI D8; A <-- A & 0x01 opcodes:  0xe6 0x01 
address: 0x18c5 instruction:  JNZ adr; if NZ, PC <-- 0x18c0 opcodes:  0xc2 0xc0 0x18
address: 0x18c8 instruction:  LXI H, D16; H <-- 0x33 L <-- 0x11 opcodes:  0x21 0x11 0x33
address: 0x18cb instruction:  MVI A, D8; A <-- 0x26 opcodes:  0x3e 0x26 
address: 0x18cd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x18ce instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x08ffopcodes:  0xcd 0xff 0x08
address: 0x18d1 instruction:  JMP adr;  PC <-- 0x0ab6 opcodes:  0xc3 0xb6 0x0a
address: 0x18d4 instruction:  LXI SP, D16; SP.hi <-- 0x24 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x24
address: 0x18d7 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x18d9 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x01e6opcodes:  0xcd 0xe6 0x01
address: 0x18dc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1956opcodes:  0xcd 0x56 0x19
address: 0x18df instruction:  MVI A, D8; A <-- 0x08 opcodes:  0x3e 0x08 
address: 0x18e1 instruction:  STA adr ; (0x20cf) <-- A opcodes:  0x32 0xcf 0x20
address: 0x18e4 instruction:  JMP adr;  PC <-- 0x0aea opcodes:  0xc3 0xea 0x0a
address: 0x18e7 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x18ea instruction:  LXI H, D16; H <-- 0x20 L <-- 0xe7 opcodes:  0x21 0xe7 0x20
address: 0x18ed instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x18ee instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x18ef instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x18f0 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x18f1 instruction:  MVI B, D8;  B <-- 0x02 opcodes:  0x06 0x02 
address: 0x18f3 instruction:  LDA adr; A <-- (0x2082) opcodes:  0x3a 0x82 0x20
address: 0x18f6 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x18f7 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x18f8 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x18f9 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x18fa instruction:  LDA adr; A <-- (0x2094) opcodes:  0x3a 0x94 0x20
address: 0x18fd instruction:  ORA B; A <-- A | B opcodes:  0xb0 
address: 0x18fe instruction:  STA adr ; (0x2094) <-- A opcodes:  0x32 0x94 0x20
address: 0x1901 instruction:  OUT D8;  special? opcodes:  0xd3 0x03 
address: 0x1903 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1904 instruction:  LXI H, D16; H <-- 0x22 L <-- 0x00 opcodes:  0x21 0x00 0x22
address: 0x1907 instruction:  JMP adr;  PC <-- 0x01c3 opcodes:  0xc3 0xc3 0x01
address: 0x190a instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14d8opcodes:  0xcd 0xd8 0x14
address: 0x190d instruction:  JMP adr;  PC <-- 0x1597 opcodes:  0xc3 0x97 0x15
address: 0x1910 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xe7 opcodes:  0x21 0xe7 0x20
address: 0x1913 instruction:  LDA adr; A <-- (0x2067) opcodes:  0x3a 0x67 0x20
address: 0x1916 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1917 instruction:  RC; if CY, Return opcodes:  0xd8 
address: 0x1918 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1919 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x191a instruction:  MVI C, D8; C <-- 0x1c opcodes:  0x0e 0x1c 
address: 0x191c instruction:  LXI H, D16; H <-- 0x24 L <-- 0x1e opcodes:  0x21 0x1e 0x24
address: 0x191f instruction:  LXI D, D16; D <-- 0x1a E <-- 0xe4 opcodes:  0x11 0xe4 0x1a
address: 0x1922 instruction:  JMP adr;  PC <-- 0x08f3 opcodes:  0xc3 0xf3 0x08
address: 0x1925 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xf8 opcodes:  0x21 0xf8 0x20
address: 0x1928 instruction:  JMP adr;  PC <-- 0x1931 opcodes:  0xc3 0x31 0x19
address: 0x192b instruction:  LXI H, D16; H <-- 0x20 L <-- 0xfc opcodes:  0x21 0xfc 0x20
address: 0x192e instruction:  JMP adr;  PC <-- 0x1931 opcodes:  0xc3 0x31 0x19
address: 0x1931 instruction:  MOV E,M; E <-- (HL) opcodes:  0x5e 
address: 0x1932 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1933 instruction:  MOV D,M; D <-- (HL) opcodes:  0x56 
address: 0x1934 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1935 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1936 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1937 instruction:  MOV H,M; H <-- (HL) opcodes:  0x66 
address: 0x1938 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x1939 instruction:  JMP adr;  PC <-- 0x09ad opcodes:  0xc3 0xad 0x09
address: 0x193c instruction:  MVI C, D8; C <-- 0x07 opcodes:  0x0e 0x07 
address: 0x193e instruction:  LXI H, D16; H <-- 0x35 L <-- 0x01 opcodes:  0x21 0x01 0x35
address: 0x1941 instruction:  LXI D, D16; D <-- 0x1f E <-- 0xa9 opcodes:  0x11 0xa9 0x1f
address: 0x1944 instruction:  JMP adr;  PC <-- 0x08f3 opcodes:  0xc3 0xf3 0x08
address: 0x1947 instruction:  LDA adr; A <-- (0x20eb) opcodes:  0x3a 0xeb 0x20
address: 0x194a instruction:  LXI H, D16; H <-- 0x3c L <-- 0x01 opcodes:  0x21 0x01 0x3c
address: 0x194d instruction:  JMP adr;  PC <-- 0x09b2 opcodes:  0xc3 0xb2 0x09
address: 0x1950 instruction:  LXI H, D16; H <-- 0x20 L <-- 0xf4 opcodes:  0x21 0xf4 0x20
address: 0x1953 instruction:  JMP adr;  PC <-- 0x1931 opcodes:  0xc3 0x31 0x19
address: 0x1956 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1a5copcodes:  0xcd 0x5c 0x1a
address: 0x1959 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x191aopcodes:  0xcd 0x1a 0x19
address: 0x195c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1925opcodes:  0xcd 0x25 0x19
address: 0x195f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x192bopcodes:  0xcd 0x2b 0x19
address: 0x1962 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1950opcodes:  0xcd 0x50 0x19
address: 0x1965 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x193copcodes:  0xcd 0x3c 0x19
address: 0x1968 instruction:  JMP adr;  PC <-- 0x1947 opcodes:  0xc3 0x47 0x19
address: 0x196b instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19dcopcodes:  0xcd 0xdc 0x19
address: 0x196e instruction:  JMP adr;  PC <-- 0x1671 opcodes:  0xc3 0x71 0x16
address: 0x1971 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x1973 instruction:  STA adr ; (0x206d) <-- A opcodes:  0x32 0x6d 0x20
address: 0x1976 instruction:  JMP adr;  PC <-- 0x16e6 opcodes:  0xc3 0xe6 0x16
address: 0x1979 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19d7opcodes:  0xcd 0xd7 0x19
address: 0x197c instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1947opcodes:  0xcd 0x47 0x19
address: 0x197f instruction:  JMP adr;  PC <-- 0x193c opcodes:  0xc3 0x3c 0x19
address: 0x1982 instruction:  STA adr ; (0x20c1) <-- A opcodes:  0x32 0xc1 0x20
address: 0x1985 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1986 instruction:  ADC E; A <-- A + E + CY opcodes:  0x8b 
address: 0x1987 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1988 instruction:  JMP adr;  PC <-- 0x09d6 opcodes:  0xc3 0xd6 0x09
address: 0x198b instruction:  LXI H, D16; H <-- 0x28 L <-- 0x03 opcodes:  0x21 0x03 0x28
address: 0x198e instruction:  LXI D, D16; D <-- 0x19 E <-- 0xbe opcodes:  0x11 0xbe 0x19
address: 0x1991 instruction:  MVI C, D8; C <-- 0x13 opcodes:  0x0e 0x13 
address: 0x1993 instruction:  JMP adr;  PC <-- 0x08f3 opcodes:  0xc3 0xf3 0x08
address: 0x1996 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1997 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1998 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1999 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x199a instruction:  LDA adr; A <-- (0x201e) opcodes:  0x3a 0x1e 0x20
address: 0x199d instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x199e instruction:  JNZ adr; if NZ, PC <-- 0x19ac opcodes:  0xc2 0xac 0x19
address: 0x19a1 instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x19a3 instruction:  ANI D8; A <-- A & 0x76 opcodes:  0xe6 0x76 
address: 0x19a5 instruction:  SUI D8; A <-- A - 0x72 opcodes:  0xd6 0x72 
address: 0x19a7 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x19a8 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x19a9 instruction:  STA adr ; (0x201e) <-- A opcodes:  0x32 0x1e 0x20
address: 0x19ac instruction:  IN D8; special opcodes:  0xdb 0x01 
address: 0x19ae instruction:  ANI D8; A <-- A & 0x76 opcodes:  0xe6 0x76 
address: 0x19b0 instruction:  CPI D8;  A - 0x34 opcodes:  0xfe 0x34 
address: 0x19b2 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x19b3 instruction:  LXI H, D16; H <-- 0x2e L <-- 0x1b opcodes:  0x21 0x1b 0x2e
address: 0x19b6 instruction:  LXI D, D16; D <-- 0x0b E <-- 0xf7 opcodes:  0x11 0xf7 0x0b
address: 0x19b9 instruction:  MVI C, D8; C <-- 0x09 opcodes:  0x0e 0x09 
address: 0x19bb instruction:  JMP adr;  PC <-- 0x08f3 opcodes:  0xc3 0xf3 0x08
address: 0x19be instruction:  NOP; no operation opcodes:  0x28 
address: 0x19bf instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x19c0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x19c1 instruction:  NOP; no operation opcodes:  0x08 
address: 0x19c2 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x19c3 instruction:  MVI C, D8; C <-- 0x26 opcodes:  0x0e 0x26 
address: 0x19c5 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x19c6 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x19c8 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x19c9 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x19cb instruction:  NOP; no operation; opcodes:  0x00 
address: 0x19cc instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x19cd instruction:  NOP; no operation opcodes:  0x08 
address: 0x19ce instruction:  MVI C, D8; C <-- 0x0d opcodes:  0x0e 0x0d 
address: 0x19d0 instruction:  NOP; no operation opcodes:  0x28 
address: 0x19d1 instruction:  MVI A, D8; A <-- 0x01 opcodes:  0x3e 0x01 
address: 0x19d3 instruction:  STA adr ; (0x20e9) <-- A opcodes:  0x32 0xe9 0x20
address: 0x19d6 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x19d7 instruction:  XRA A; A <-- A ^ A opcodes:  0xaf 
address: 0x19d8 instruction:  JMP adr;  PC <-- 0x19d3 opcodes:  0xc3 0xd3 0x19
address: 0x19db instruction:  NOP; no operation; opcodes:  0x00 
address: 0x19dc instruction:  LDA adr; A <-- (0x2094) opcodes:  0x3a 0x94 0x20
address: 0x19df instruction:  ANA B; A <-- A & B opcodes:  0xa0 
address: 0x19e0 instruction:  STA adr ; (0x2094) <-- A opcodes:  0x32 0x94 0x20
address: 0x19e3 instruction:  OUT D8;  special? opcodes:  0xd3 0x03 
address: 0x19e5 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x19e6 instruction:  LXI H, D16; H <-- 0x27 L <-- 0x01 opcodes:  0x21 0x01 0x27
address: 0x19e9 instruction:  JZ adr;  PC <-- 0x19fa opcodes:  0xca 0xfa 0x19
address: 0x19ec instruction:  LXI D, D16; D <-- 0x1c E <-- 0x60 opcodes:  0x11 0x60 0x1c
address: 0x19ef instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x19f1 instruction:  MOV C,A; C <-- A opcodes:  0x4f 
address: 0x19f2 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x1439opcodes:  0xcd 0x39 0x14
address: 0x19f5 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x19f6 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x19f7 instruction:  JNZ adr; if NZ, PC <-- 0x19ec opcodes:  0xc2 0xec 0x19
address: 0x19fa instruction:  MVI B, D8;  B <-- 0x10 opcodes:  0x06 0x10 
address: 0x19fc instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x14cbopcodes:  0xcd 0xcb 0x14
address: 0x19ff instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1a00 instruction:  CPI D8;  A - 0x35 opcodes:  0xfe 0x35 
address: 0x1a02 instruction:  JNZ adr; if NZ, PC <-- 0x19fa opcodes:  0xc2 0xfa 0x19
address: 0x1a05 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a06 instruction:  LXI H, D16; H <-- 0x20 L <-- 0x72 opcodes:  0x21 0x72 0x20
address: 0x1a09 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x1a0a instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1a0b instruction:  ANI D8; A <-- A & 0x80 opcodes:  0xe6 0x80 
address: 0x1a0d instruction:  XRA B; A <-- A ^ B opcodes:  0xa8 
address: 0x1a0e instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x1a0f instruction:  STC; CY = 1 opcodes:  0x37 
address: 0x1a10 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a11 instruction:  STA adr ; (0x242b) <-- A opcodes:  0x32 0x2b 0x24
address: 0x1a14 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1a15 instruction:  MVI D, D8;  D <-- 0x11 opcodes:  0x16 0x11 
address: 0x1a17 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1a18 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1a19 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1a1a instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1a1b instruction:  MVI B, D8;  B <-- 0x05 opcodes:  0x06 0x05 
address: 0x1a1d instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1a1e instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1a1f instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1a20 instruction:  LXI B, D16; B<--0x2e C<--0x34 opcodes:  0x01 0x34 0x2e
address: 0x1a23 instruction:  DAA; special? opcodes:  0x27 
address: 0x1a24 instruction:  SHLD adr ; (0x181c) <-- L , (0x181c) + 1 <-- H opcodes:  0x22 0x1c 0x18
address: 0x1a27 instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1a28 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1a29 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1a2a instruction:  MVI C, D8; C <-- 0x0d opcodes:  0x0e 0x0d 
address: 0x1a2c instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1a2d instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1a2e instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x1a2f instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1a30 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1a31 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1a32 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1a33 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1a34 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a35 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1a36 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1a37 instruction:  JNZ adr; if NZ, PC <-- 0x1a32 opcodes:  0xc2 0x32 0x1a
address: 0x1a3a instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a3b instruction:  MOV E,M; E <-- (HL) opcodes:  0x5e 
address: 0x1a3c instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a3d instruction:  MOV D,M; D <-- (HL) opcodes:  0x56 
address: 0x1a3e instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a3f instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1a40 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a41 instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x1a42 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a43 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x1a44 instruction:  MOV H,C; H <-- C opcodes:  0x61 
address: 0x1a45 instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x1a46 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a47 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1a48 instruction:  MVI B, D8;  B <-- 0x03 opcodes:  0x06 0x03 
address: 0x1a4a instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1a4b instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1a4c instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x1a4d instruction:  MOV A,L; A <-- L opcodes:  0x7d 
address: 0x1a4e instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1a4f instruction:  MOV L,A; L <-- A opcodes:  0x6f 
address: 0x1a50 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1a51 instruction:  JNZ adr; if NZ, PC <-- 0x1a4a opcodes:  0xc2 0x4a 0x1a
address: 0x1a54 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1a55 instruction:  ANI D8; A <-- A & 0x3f opcodes:  0xe6 0x3f 
address: 0x1a57 instruction:  ORI D8; A <-- A | 0x20 opcodes:  0xf6 0x20 
address: 0x1a59 instruction:  MOV H,A; H <-- A opcodes:  0x67 
address: 0x1a5a instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x1a5b instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a5c instruction:  LXI H, D16; H <-- 0x24 L <-- 0x00 opcodes:  0x21 0x00 0x24
address: 0x1a5f instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x1a61 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a62 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1a63 instruction:  CPI D8;  A - 0x40 opcodes:  0xfe 0x40 
address: 0x1a65 instruction:  JNZ adr; if NZ, PC <-- 0x1a5f opcodes:  0xc2 0x5f 0x1a
address: 0x1a68 instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a69 instruction:  PUSH B;  (SP-2) <-- C; (SP-1) <-- B ; SP <-- SP - 2 opcodes:  0xc5 
address: 0x1a6a instruction:  PUSH H;  (SP-2) <-- L; (SP-1) <-- H ; SP <-- SP - 2 opcodes:  0xe5 
address: 0x1a6b instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1a6c instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x1a6d instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1a6e instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1a6f instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1a70 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1a71 instruction:  JNZ adr; if NZ, PC <-- 0x1a6b opcodes:  0xc2 0x6b 0x1a
address: 0x1a74 instruction:  POP H; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xe1 
address: 0x1a75 instruction:  LXI B, D16; B<--0x00 C<--0x20 opcodes:  0x01 0x20 0x00
address: 0x1a78 instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x1a79 instruction:  POP B; C <- (SP); B <- (SP+1); SP <- SP + 2 opcodes:  0xc1 
address: 0x1a7a instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1a7b instruction:  JNZ adr; if NZ, PC <-- 0x1a69 opcodes:  0xc2 0x69 0x1a
address: 0x1a7e instruction:  RET;  	PC.lo <- (sp); PC.hi<-(sp+1); SP <- SP+2 opcodes:  0xc9 
address: 0x1a7f instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x092eopcodes:  0xcd 0x2e 0x09
address: 0x1a82 instruction:  ANA A; A <-- A & A opcodes:  0xa7 
address: 0x1a83 instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x1a84 instruction:  PUSH PSW;  (SP-2) <-- flags; (SP-1) <-- A ; SP <-- SP - 2 opcodes:  0xf5 
address: 0x1a85 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1a86 instruction:  MOV M,A; (HL) <-- A opcodes:  0x77 
address: 0x1a87 instruction:  CALL adr; (SP-1)<-PC.hi;(SP-2)<-PC.lo;SP<-SP-2;PC = 0x19e6opcodes:  0xcd 0xe6 0x19
address: 0x1a8a instruction:  POP PSW; L <- (SP); H <- (SP+1); SP <- SP + 2 opcodes:  0xf1 
address: 0x1a8b instruction:  LXI H, D16; H <-- 0x25 L <-- 0x01 opcodes:  0x21 0x01 0x25
address: 0x1a8e instruction:  ANI D8; A <-- A & 0x0f opcodes:  0xe6 0x0f 
address: 0x1a90 instruction:  JMP adr;  PC <-- 0x09c5 opcodes:  0xc3 0xc5 0x09
address: 0x1a93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1a94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1a95 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1a96 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1a97 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1a98 instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x1a99 instruction:  CPI D8;  A - 0x20 opcodes:  0xfe 0x20 
address: 0x1a9b instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1a9c instruction:  NOP; no operation opcodes:  0x10 
address: 0x1a9d instruction:  SBB M; A <-- A - (HL) - CY opcodes:  0x9e 
address: 0x1a9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1a9f instruction:  NOP; no operation opcodes:  0x20 
address: 0x1aa0 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1aa1 instruction:  NOP; no operation opcodes:  0x30 
address: 0x1aa2 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1aa3 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1aa4 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1aa5 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1aa6 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x1aa8 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1aa9 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1aaa instruction:  MVI H, D8;  H <-- 0x0e opcodes:  0x26 0x0e 
address: 0x1aac instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1aad instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1aae instruction:  LXI D, D16; D <-- 0x26 E <-- 0x26 opcodes:  0x11 0x26 0x26
address: 0x1ab1 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1ab2 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1ab3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ab4 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1ab5 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ab6 instruction:  LXI D, D16; D <-- 0x26 E <-- 0x24 opcodes:  0x11 0x24 0x26
address: 0x1ab9 instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x1aba instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1abb instruction:  MVI H, D8;  H <-- 0x0e opcodes:  0x26 0x0e 
address: 0x1abd instruction:  LXI D, D16; D <-- 0x1c E <-- 0x26 opcodes:  0x11 0x26 0x1c
address: 0x1ac0 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1ac1 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1ac2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ac3 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1ac4 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ac5 instruction:  LXI D, D16; D <-- 0x26 E <-- 0x12 opcodes:  0x11 0x12 0x26
address: 0x1ac8 instruction:  LXI B, D16; B<--0x13 C<--0x14 opcodes:  0x01 0x14 0x13
address: 0x1acb instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1acc instruction:  MVI C, D8; C <-- 0x0d opcodes:  0x0e 0x0d 
address: 0x1ace instruction:  MVI H, D8;  H <-- 0x0e opcodes:  0x26 0x0e 
address: 0x1ad0 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1ad1 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1ad2 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1ad3 instruction:  MVI H, D8;  H <-- 0x1b opcodes:  0x26 0x1b 
address: 0x1ad5 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1ad6 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1ad7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ad8 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1ad9 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ada instruction:  LXI D, D16; D <-- 0x26 E <-- 0x26 opcodes:  0x11 0x26 0x26
address: 0x1add instruction:  LXI B, D16; B<--0x13 C<--0x14 opcodes:  0x01 0x14 0x13
address: 0x1ae0 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1ae1 instruction:  MVI C, D8; C <-- 0x0d opcodes:  0x0e 0x0d 
address: 0x1ae3 instruction:  MVI H, D8;  H <-- 0x26 opcodes:  0x26 0x26 
address: 0x1ae5 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1ae6 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1ae7 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x1ae9 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1aea instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1aeb instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1aec instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x1aed instruction:  MVI H, D8;  H <-- 0x07 opcodes:  0x26 0x07 
address: 0x1aef instruction:  NOP; no operation opcodes:  0x08 
address: 0x1af0 instruction:  CMA; CY <-- !CY opcodes:  0x3f 
address: 0x1af1 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1af2 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1af3 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x1af5 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1af6 instruction:  MVI H, D8;  H <-- 0x12 opcodes:  0x26 0x12 
address: 0x1af8 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1af9 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x1afb instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1afc instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1afd instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1afe instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x1aff instruction:  MVI H, D8;  H <-- 0x01 opcodes:  0x26 0x01 
address: 0x1b01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b02 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b03 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1b04 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b05 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b08 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1b09 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1b0a instruction:  NOP; no operation opcodes:  0x38 
address: 0x1b0b instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1b0c instruction:  NOP; no operation opcodes:  0x38 
address: 0x1b0d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b0e instruction:  RM; if M, Return opcodes:  0xf8 
address: 0x1b0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b11 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1b12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b13 instruction:  ADC M; A <-- A + (HL) + CY opcodes:  0x8e 
address: 0x1b14 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1b15 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b16 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1b17 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1b18 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1b19 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1b1a instruction:  NOP; no operation opcodes:  0x20 
address: 0x1b1b instruction:  NOP; no operation opcodes:  0x30 
address: 0x1b1c instruction:  NOP; no operation opcodes:  0x10 
address: 0x1b1d instruction:  LXI B, D16; B<--0x00 C<--0x00 opcodes:  0x01 0x00 0x00
address: 0x1b20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b23 instruction:  CMP E;  A - E opcodes:  0xbb 
address: 0x1b24 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1b25 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b26 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1b27 instruction:  SUB B; A <-- A + B opcodes:  0x90 
address: 0x1b28 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1b29 instruction:  NOP; no operation opcodes:  0x28 
address: 0x1b2a instruction:  NOP; no operation opcodes:  0x30 
address: 0x1b2b instruction:  LXI B, D16; B<--0x00 C<--0x04 opcodes:  0x01 0x04 0x00
address: 0x1b2e instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b2f instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b32 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1b33 instruction:  HLT; special? opcodes:  0x76 
address: 0x1b34 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b39 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b3a instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b3b instruction:  XRI D8;  A <-- A ^ 0x1c opcodes:  0xee 0x1c 
address: 0x1b3d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b3f instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1b40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b43 instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x1b44 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b47 instruction:  LXI B, D16; B<--0x1d C<--0x00 opcodes:  0x01 0x00 0x1d
address: 0x1b4a instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b4b instruction:  JPO adr; if PO, PC <-- 0x001c opcodes:  0xe2 0x1c 0x00
address: 0x1b4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b4f instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1b50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b53 instruction:  ADD D; A <-- A + D opcodes:  0x82 
address: 0x1b54 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x1b56 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b57 instruction:  LXI B, D16; B<--0x1d C<--0x06 opcodes:  0x01 0x06 0x1d
address: 0x1b5a instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b5b instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x1b5c instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1b5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b5f instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1b60 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b62 instruction:  RNZ; if NZ, Return opcodes:  0xc0 
address: 0x1b63 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1b64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b66 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1b67 instruction:  LXI H, D16; H <-- 0x00 L <-- 0x01 opcodes:  0x21 0x01 0x00
address: 0x1b6a instruction:  NOP; no operation opcodes:  0x30 
address: 0x1b6b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b6c instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1b6d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b70 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1b71 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1b72 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b73 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1b74 instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1b76 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1b77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b78 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1b79 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1b7a instruction:  LXI D, D16; D <-- 0x1b E <-- 0x24 opcodes:  0x11 0x24 0x1b
address: 0x1b7d instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x1b7e instruction:  CM adr;  if M,  CALL 0x0100 opcodes:  0xfc 0x00 0x01
address: 0x1b81 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b82 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1b83 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b84 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b85 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b86 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1b87 instruction:  MOV H,H; H <-- H opcodes:  0x64 
address: 0x1b88 instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1b89 instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x1b8a instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x1b8b instruction:  NOP; no operation opcodes:  0x18 
address: 0x1b8c instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1b8d instruction:  MOV D,H; D <-- H opcodes:  0x54 
address: 0x1b8e instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1b8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b90 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1b91 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b92 instruction:  MVI B, D8;  B <-- 0x00 opcodes:  0x06 0x00 
address: 0x1b94 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b95 instruction:  LXI B, D16; B<--0x00 C<--0x40 opcodes:  0x01 0x40 0x00
address: 0x1b98 instruction:  LXI B, D16; B<--0x00 C<--0x00 opcodes:  0x01 0x00 0x00
address: 0x1b9b instruction:  NOP; no operation opcodes:  0x10 
address: 0x1b9c instruction:  SBB M; A <-- A - (HL) - CY opcodes:  0x9e 
address: 0x1b9d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1b9e instruction:  NOP; no operation opcodes:  0x20 
address: 0x1b9f instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1ba0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ba1 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1ba2 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ba3 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1ba4 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ba5 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1ba6 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ba7 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1ba8 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1ba9 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x1baa instruction:  CM adr;  if M,  CALL 0x68fc opcodes:  0xfc 0xfc 0x68
address: 0x1bad instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1bae instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1baf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bb0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bb1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bb2 instruction:  LXI B, D16; B<--0x98 C<--0xb8 opcodes:  0x01 0xb8 0x98
address: 0x1bb5 instruction:  ANA B; A <-- A & B opcodes:  0xa0 
address: 0x1bb6 instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1bb7 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1bb8 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1bb9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bba instruction:  ANA B; A <-- A & B opcodes:  0xa0 
address: 0x1bbb instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1bbc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bbd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bbe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bbf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc1 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1bc2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc3 instruction:  MVI C, D8; C <-- 0x05 opcodes:  0x0e 0x05 
address: 0x1bc5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bc9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bca instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1bcb instruction:  RNC; if NCY, Return opcodes:  0xd0 
address: 0x1bcc instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1bcd instruction:  RZ; if Z, Return opcodes:  0xc8 
address: 0x1bce instruction:  SBB E; A <-- A - E - CY opcodes:  0x9b 
address: 0x1bcf instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1bd0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bd1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bd2 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1bd3 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1bd4 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1bd5 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1bd6 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1bd7 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1bd8 instruction:  LDA adr; A <-- (0xfa6d) opcodes:  0x3a 0x6d 0xfa
address: 0x1bdb instruction:  JM adr; if M,  PC <-- 0x3a6d opcodes:  0xfa 0x6d 0x3a
address: 0x1bde instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1bdf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1be9 instruction:  LXI B, D16; B<--0x00 C<--0x00 opcodes:  0x01 0x00 0x00
address: 0x1bec instruction:  LXI B, D16; B<--0x1f C<--0x74 opcodes:  0x01 0x74 0x1f
address: 0x1bef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf0 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1bf1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf6 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1bf7 instruction:  CMA; A <-- !A opcodes:  0x2f 
address: 0x1bf8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bf9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bfa instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1bfb instruction:  DAA; special? opcodes:  0x27 
address: 0x1bfc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bfd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1bfe instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1bff instruction:  DAD SP; HL = HL + SP opcodes:  0x39 
address: 0x1c00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c01 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c02 instruction:  DAD SP; HL = HL + SP opcodes:  0x39 
address: 0x1c03 instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x1c04 instruction:  MOV A,D; A <--  Dopcodes:  0x7a 
address: 0x1c05 instruction:  MOV L,M; L <-- (HL) opcodes:  0x6e 
address: 0x1c06 instruction:  CPE adr;  if PE,  CALL 0xfafa opcodes:  0xec 0xfa 0xfa
address: 0x1c09 instruction:  CPE adr;  if PE,  CALL 0x7a6e opcodes:  0xec 0x6e 0x7a
address: 0x1c0c instruction:  MOV A,C; A <-- C opcodes:  0x79 
address: 0x1c0d instruction:  DAD SP; HL = HL + SP opcodes:  0x39 
address: 0x1c0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c11 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c12 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c13 instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1c14 instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1c15 instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1c16 instruction:  MOV L,H; L <-- H opcodes:  0x6c 
address: 0x1c17 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1c18 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1c19 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1c1a instruction:  MOV L,H; L <-- H opcodes:  0x6c 
address: 0x1c1b instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1c1c instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1c1d instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1c1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c21 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c22 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c23 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c24 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1c25 instruction:  LDA adr; A <-- (0xfa6d) opcodes:  0x3a 0x6d 0xfa
address: 0x1c28 instruction:  JM adr; if M,  PC <-- 0x3a6d opcodes:  0xfa 0x6d 0x3a
address: 0x1c2b instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1c2c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c2d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c32 instruction:  NOP; no operation opcodes:  0x38 
address: 0x1c33 instruction:  MOV A,D; A <--  Dopcodes:  0x7a 
address: 0x1c34 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1c35 instruction:  MOV L,L; L <-- L opcodes:  0x6d 
address: 0x1c36 instruction:  CPE adr;  if PE,  CALL 0xfafa opcodes:  0xec 0xfa 0xfa
address: 0x1c39 instruction:  CPE adr;  if PE,  CALL 0x7f6d opcodes:  0xec 0x6d 0x7f
address: 0x1c3c instruction:  MOV A,D; A <--  Dopcodes:  0x7a 
address: 0x1c3d instruction:  NOP; no operation opcodes:  0x38 
address: 0x1c3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c42 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c43 instruction:  MVI C, D8; C <-- 0x18 opcodes:  0x0e 0x18 
address: 0x1c45 instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1c46 instruction:  MOV L,L; L <-- L opcodes:  0x6d 
address: 0x1c47 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1c48 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1c49 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1c4a instruction:  MOV L,L; L <-- L opcodes:  0x6d 
address: 0x1c4b instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1c4c instruction:  NOP; no operation opcodes:  0x18 
address: 0x1c4d instruction:  MVI C, D8; C <-- 0x00 opcodes:  0x0e 0x00 
address: 0x1c4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c51 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c52 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c53 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c54 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1c55 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1c56 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x1c57 instruction:  CM adr;  if M,  CALL 0x68fc opcodes:  0xfc 0xfc 0x68
address: 0x1c5a instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1c5b instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1c5c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c5d instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c5e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c5f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c61 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c62 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1c63 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c64 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c65 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c66 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c67 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1c68 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1c69 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1c6a instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c6b instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c6c instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c6d instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1c6e instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1c6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c71 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1c72 instruction:  LXI B, D16; B<--0x03 C<--0x13 opcodes:  0x01 0x13 0x03
address: 0x1c75 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1c76 instruction:  ORA E; A <-- A | E opcodes:  0xb3 
address: 0x1c77 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1c78 instruction:  CMA; A <-- !A opcodes:  0x2f 
address: 0x1c79 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1c7a instruction:  CMA; A <-- !A opcodes:  0x2f 
address: 0x1c7b instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1c7c instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1c7d instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1c7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1c7f instruction:  LXI B, D16; B<--0x08 C<--0x40 opcodes:  0x01 0x40 0x08
address: 0x1c82 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1c83 instruction:  ANA E; A <-- A & E opcodes:  0xa3 
address: 0x1c84 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1c85 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1c86 instruction:  MOV E,E; E <-- E opcodes:  0x5b 
address: 0x1c87 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1c88 instruction:  DAA; special? opcodes:  0x27 
address: 0x1c89 instruction:  DAA; special? opcodes:  0x27 
address: 0x1c8a instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1c8b instruction:  MOV C,E; C <-- E opcodes:  0x4b 
address: 0x1c8c instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1c8d instruction:  ADD H; A <-- A + H opcodes:  0x84 
address: 0x1c8e instruction:  LXI D, D16; D <-- 0x0f E <-- 0x48 opcodes:  0x11 0x48 0x0f
address: 0x1c91 instruction:  SBB C; A <-- A - C - CY opcodes:  0x99 
address: 0x1c92 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1c93 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1c94 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1c95 instruction:  CMP H;  A - H opcodes:  0xbc 
address: 0x1c96 instruction:  MVI A, D8; A <-- 0x7c opcodes:  0x3e 0x7c 
address: 0x1c98 instruction:  SBB C; A <-- A - C - CY opcodes:  0x99 
address: 0x1c99 instruction:  DAA; special? opcodes:  0x27 
address: 0x1c9a instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1c9b instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1c9c instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1c9e instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1ca0 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1ca1 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1ca2 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1ca3 instruction:  NOP; no operation opcodes:  0x28 
address: 0x1ca4 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1ca5 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1ca6 instruction:  MVI C, D8; C <-- 0x11 opcodes:  0x0e 0x11 
address: 0x1ca8 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ca9 instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x1cab instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1cac instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1cad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cae instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1caf instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1cb0 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1cb1 instruction:  MVI H, D8;  H <-- 0x13 opcodes:  0x26 0x13 
address: 0x1cb3 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cb4 instruction:  LXI B, D16; B<--0x04 C<--0x0b opcodes:  0x01 0x0b 0x04
address: 0x1cb7 instruction:  NOP; no operation opcodes:  0x28 
address: 0x1cb8 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1cb9 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1cba instruction:  NOP; no operation opcodes:  0x20 
address: 0x1cbb instruction:  NOP; no operation opcodes:  0x30 
address: 0x1cbc instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1cbd instruction:  NOP; no operation opcodes:  0x08 
address: 0x1cbe instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1cbf instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1cc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cc1 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1cc2 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1cc3 instruction:  SHLD adr ; (0x8114) <-- L , (0x8114) + 1 <-- H opcodes:  0x22 0x14 0x81
address: 0x1cc6 instruction:  MOV B,D; B <-- D opcodes:  0x42 
address: 0x1cc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cc8 instruction:  MOV B,D; B <-- D opcodes:  0x42 
address: 0x1cc9 instruction:  ADD C; A <-- A + C opcodes:  0x81 
address: 0x1cca instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ccb instruction:  SHLD adr ; (0x0849) <-- L , (0x0849) + 1 <-- H opcodes:  0x22 0x49 0x08
address: 0x1cce instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ccf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cd0 instruction:  MOV B,H; B <-- H opcodes:  0x44 
address: 0x1cd1 instruction:  XRA D; A <-- A ^ D opcodes:  0xaa 
address: 0x1cd2 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1cd3 instruction:  ADC B; A <-- A + B + CY opcodes:  0x88 
address: 0x1cd4 instruction:  MOV D,H; D <-- H opcodes:  0x54 
address: 0x1cd5 instruction:  SHLD adr ; (0xaa10) <-- L , (0xaa10) + 1 <-- H opcodes:  0x22 0x10 0xaa
address: 0x1cd8 instruction:  MOV B,H; B <-- H opcodes:  0x44 
address: 0x1cd9 instruction:  SHLD adr ; (0x8854) <-- L , (0x8854) + 1 <-- H opcodes:  0x22 0x54 0x88
address: 0x1cdc instruction:  MOV C,D; C <--  Dopcodes:  0x4a 
address: 0x1cdd instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1cde instruction:  CMP M;  A - (HL) opcodes:  0xbe 
address: 0x1cdf instruction:  CMA; CY <-- !CY opcodes:  0x3f 
address: 0x1ce0 instruction:  MOV E,M; E <-- (HL) opcodes:  0x5e 
address: 0x1ce1 instruction:  DCR H; H <-- H - 1 opcodes:  0x25 
address: 0x1ce2 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ce3 instruction:  CM adr;  if M,  CALL 0x1004 opcodes:  0xfc 0x04 0x10
address: 0x1ce6 instruction:  CM adr;  if M,  CALL 0x2010 opcodes:  0xfc 0x10 0x20
address: 0x1ce9 instruction:  CM adr;  if M,  CALL 0x8020 opcodes:  0xfc 0x20 0x80
address: 0x1cec instruction:  CM adr;  if M,  CALL 0x0080 opcodes:  0xfc 0x80 0x00
address: 0x1cef instruction:  CPI D8;  A - 0x00 opcodes:  0xfe 0x00 
address: 0x1cf1 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1cf2 instruction:  CPI D8;  A - 0x12 opcodes:  0xfe 0x12 
address: 0x1cf4 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cf5 instruction:  CPI D8;  A - 0x00 opcodes:  0xfe 0x00 
address: 0x1cf7 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1cf8 instruction:  CPI D8;  A - 0x90 opcodes:  0xfe 0x90 
address: 0x1cfa instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1cfb instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1cfc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cfd instruction:  DAD H; HL = HL + HI opcodes:  0x29 
address: 0x1cfe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1cff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d00 instruction:  LXI B, D16; B<--0x01 C<--0x07 opcodes:  0x01 0x07 0x01
address: 0x1d03 instruction:  LXI B, D16; B<--0x04 C<--0x01 opcodes:  0x01 0x01 0x04
address: 0x1d06 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1d07 instruction:  LXI B, D16; B<--0x03 C<--0x06 opcodes:  0x01 0x06 0x03
address: 0x1d0a instruction:  LXI B, D16; B<--0x0b C<--0x01 opcodes:  0x01 0x01 0x0b
address: 0x1d0d instruction:  DAD B; HL = HL + BC opcodes:  0x09 
address: 0x1d0e instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1d0f instruction:  NOP; no operation opcodes:  0x08 
address: 0x1d10 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1d11 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1d12 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1d13 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1d14 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1d15 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d16 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1d17 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d18 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1d19 instruction:  MVI B, D8;  B <-- 0x07 opcodes:  0x06 0x07 
address: 0x1d1b instruction:  NOP; no operation opcodes:  0x08 
address: 0x1d1c instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1d1d instruction:  MVI B, D8;  B <-- 0x0a opcodes:  0x06 0x0a 
address: 0x1d1f instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1d20 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d21 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1d22 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d23 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1d24 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d25 instruction:  CMA; CY <-- !CY opcodes:  0x3f 
address: 0x1d26 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d27 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1d28 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d29 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d2a instruction:  CM adr;  if M,  CALL 0xf8ff opcodes:  0xfc 0xff 0xf8
address: 0x1d2d instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d2e instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d2f instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d30 instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d31 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d32 instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d33 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d34 instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d35 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d36 instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d37 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d38 instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d39 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d3a instruction:  RP; if P, Return opcodes:  0xf0 
address: 0x1d3b instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d3c instruction:  RM; if M, Return opcodes:  0xf8 
address: 0x1d3d instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d3e instruction:  CM adr;  if M,  CALL 0xffff opcodes:  0xfc 0xff 0xff
address: 0x1d41 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d42 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d43 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d44 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d45 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1d46 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d47 instruction:  CMA; CY <-- !CY opcodes:  0x3f 
address: 0x1d48 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d49 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1d4a instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1d4b instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1d4c instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d4d instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d4e instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1d4f instruction:  NOP; no operation opcodes:  0x30 
address: 0x1d50 instruction:  SUB H; A <-- A - H opcodes:  0x94 
address: 0x1d51 instruction:  SUB A; A <-- A - A opcodes:  0x97 
address: 0x1d52 instruction:  SBB D; A <-- A - D - CY opcodes:  0x9a 
address: 0x1d53 instruction:  SBB L; A <-- A - L - CY opcodes:  0x9d 
address: 0x1d54 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d55 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d56 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d57 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d58 instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1d59 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d5a instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d5b instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d5c instruction:  NOP; no operation opcodes:  0x30 
address: 0x1d5d instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d5e instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d5f instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d60 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d61 instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1d62 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d63 instruction:  DCR B; B <-- B - 1 opcodes:  0x05 
address: 0x1d64 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d65 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d68 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1d69 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1d6a instruction:  MVI E, D8; E <-- 0x37 opcodes:  0x1e 0x37 
address: 0x1d6c instruction:  MVI A, D8; A <-- 0x7c opcodes:  0x3e 0x7c 
address: 0x1d6e instruction:  MOV M,H; (HL) <-- H opcodes:  0x74 
address: 0x1d6f instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1d70 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1d71 instruction:  MOV M,H; (HL) <-- H opcodes:  0x74 
address: 0x1d72 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1d73 instruction:  MVI A, D8; A <-- 0x37 opcodes:  0x3e 0x37 
address: 0x1d75 instruction:  MVI E, D8; E <-- 0x0c opcodes:  0x1e 0x0c 
address: 0x1d77 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1d78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d79 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d7a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d7b instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d7c instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d7d instruction:  SHLD adr ; (0xa500) <-- L , (0xa500) + 1 <-- H opcodes:  0x22 0x00 0xa5
address: 0x1d80 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1d81 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1d82 instruction:  SBB B; A <-- A - B - CY opcodes:  0x98 
address: 0x1d83 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1d84 instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x1d85 instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1d86 instruction:  MVI M, D8;  (HL) <-- 0x1d opcodes:  0x36 0x1d 
address: 0x1d88 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1d89 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1d8a instruction:  MOV H,D; H <-- D opcodes:  0x62 
address: 0x1d8b instruction:  ORA M; A <-- A | (HL) opcodes:  0xb6 
address: 0x1d8c instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1d8d instruction:  SBB B; A <-- A - B - CY opcodes:  0x98 
address: 0x1d8e instruction:  NOP; no operation opcodes:  0x08 
address: 0x1d8f instruction:  MOV B,D; B <-- D opcodes:  0x42 
address: 0x1d90 instruction:  SUB B; A <-- A + B opcodes:  0x90 
address: 0x1d91 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1d92 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d93 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1d94 instruction:  MVI H, D8;  H <-- 0x1f opcodes:  0x26 0x1f 
address: 0x1d96 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1d97 instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1d98 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1d99 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1d9a instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1d9b instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1d9c instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1d9d instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1d9e instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1d9f instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1da0 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1da1 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1da2 instruction:  NOP; no operation opcodes:  0x30 
address: 0x1da3 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1da4 instruction:  MOV D,B; D <-- B opcodes:  0x50 
address: 0x1da5 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1da6 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1da7 instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1da8 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1da9 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1daa instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1dab instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1dac instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1dad instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1dae instruction:  NOP; no operation opcodes:  0x18 
address: 0x1daf instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1db0 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1db1 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1db2 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1db3 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1db4 instruction:  MVI H, D8;  H <-- 0x26 opcodes:  0x26 0x26 
address: 0x1db6 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1db7 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1db8 instruction:  DCR D; D <-- D - 1 opcodes:  0x15 
address: 0x1db9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1dba instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1dbb instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1dbc instruction:  LXI D, D16; D <-- 0x0e E <-- 0x12 opcodes:  0x11 0x12 0x0e
address: 0x1dbf instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x1dc0 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x1dc1 instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1dc2 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1dc3 instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x1dc4 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1dc5 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1dc6 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1dc7 instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x1dc8 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1dc9 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1dca instruction:  NOP; no operation opcodes:  0x08 
address: 0x1dcb instruction:  INR L; L <-- L + 1 opcodes:  0x2c 
address: 0x1dcc instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1dcd instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1dce instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1dcf instruction:  MVI C, D8; C <-- 0x2e opcodes:  0x0e 0x2e 
address: 0x1dd1 instruction:  RPO; if PO, Return opcodes:  0xe0 
address: 0x1dd2 instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1dd3 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1dd4 instruction:  MVI L, D8; L <-- 0xea opcodes:  0x2e 0xea 
address: 0x1dd6 instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1dd7 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1dd8 instruction:  MVI L, D8; L <-- 0xf4 opcodes:  0x2e 0xf4 
address: 0x1dda instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1ddb instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ddc instruction:  MVI L, D8; L <-- 0x99 opcodes:  0x2e 0x99 
address: 0x1dde instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1ddf instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1de0 instruction:  DAA; special? opcodes:  0x27 
address: 0x1de1 instruction:  NOP; no operation opcodes:  0x38 
address: 0x1de2 instruction:  MVI H, D8;  H <-- 0x0c opcodes:  0x26 0x0c 
address: 0x1de4 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1de5 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1de6 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1de7 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1de8 instruction:  LXI D, D16; D <-- 0x27 E <-- 0x18 opcodes:  0x11 0x18 0x27
address: 0x1deb instruction:  DCR E; E <-- E - 1 opcodes:  0x1d 
address: 0x1dec instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1ded instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1def instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1df1 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1df2 instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1df3 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1df4 instruction:  DAA; special? opcodes:  0x27 
address: 0x1df5 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1df6 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1df7 instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1df9 instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1dfb instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1dfc instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1dfd instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1dfe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1dff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e01 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1e02 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1e03 instruction:  MOV B,H; B <-- H opcodes:  0x44 
address: 0x1e04 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1e05 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1e06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e09 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e0a instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e0b instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e0c instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e0d instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x1e0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e11 instruction:  MVI A, D8; A <-- 0x41 opcodes:  0x3e 0x41 
address: 0x1e13 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e14 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e15 instruction:  SHLD adr ; (0x0000) <-- L , (0x0000) + 1 <-- H opcodes:  0x22 0x00 0x00
address: 0x1e18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e19 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e1a instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e1b instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e1c instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e1d instruction:  MVI A, D8; A <-- 0x00 opcodes:  0x3e 0x00 
address: 0x1e1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e21 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e22 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e23 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e24 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e25 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e29 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e2a instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e2b instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e2c instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e2d instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1e2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e31 instruction:  MVI A, D8; A <-- 0x41 opcodes:  0x3e 0x41 
address: 0x1e33 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e34 instruction:  MOV B,L; B <-- L opcodes:  0x45 
address: 0x1e35 instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x1e36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e39 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e3a instruction:  NOP; no operation opcodes:  0x08 
address: 0x1e3b instruction:  NOP; no operation opcodes:  0x08 
address: 0x1e3c instruction:  NOP; no operation opcodes:  0x08 
address: 0x1e3d instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e41 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e42 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e43 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e44 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e45 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e46 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e47 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e49 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1e4a instruction:  LXI B, D16; B<--0x01 C<--0x01 opcodes:  0x01 0x01 0x01
address: 0x1e4d instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1e4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e50 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e51 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e52 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1e53 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1e54 instruction:  SHLD adr ; (0x0041) <-- L , (0x0041) + 1 <-- H opcodes:  0x22 0x41 0x00
address: 0x1e57 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e58 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e59 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e5a instruction:  LXI B, D16; B<--0x01 C<--0x01 opcodes:  0x01 0x01 0x01
address: 0x1e5d instruction:  LXI B, D16; B<--0x00 C<--0x00 opcodes:  0x01 0x00 0x00
address: 0x1e60 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e61 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e62 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1e63 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1e64 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1e65 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e66 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e68 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e69 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e6a instruction:  NOP; no operation opcodes:  0x10 
address: 0x1e6b instruction:  NOP; no operation opcodes:  0x08 
address: 0x1e6c instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1e6d instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e6e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e6f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e70 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e71 instruction:  MVI A, D8; A <-- 0x41 opcodes:  0x3e 0x41 
address: 0x1e73 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e74 instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1e75 instruction:  MVI A, D8; A <-- 0x00 opcodes:  0x3e 0x00 
address: 0x1e77 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e78 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e79 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e7a instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e7b instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e7c instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e7d instruction:  NOP; no operation opcodes:  0x30 
address: 0x1e7e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e7f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e80 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e81 instruction:  MVI A, D8; A <-- 0x41 opcodes:  0x3e 0x41 
address: 0x1e83 instruction:  MOV B,L; B <-- L opcodes:  0x45 
address: 0x1e84 instruction:  MOV B,D; B <-- D opcodes:  0x42 
address: 0x1e85 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1e86 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e87 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e88 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e89 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e8a instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1e8b instruction:  MOV C,H; C <-- H opcodes:  0x4c 
address: 0x1e8c instruction:  MOV C,D; C <--  Dopcodes:  0x4a 
address: 0x1e8d instruction:  LXI SP, D16; SP.hi <-- 0x00 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x00
address: 0x1e90 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e91 instruction:  STA adr ; (0x4949) <-- A opcodes:  0x32 0x49 0x49
address: 0x1e94 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1e95 instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x1e97 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e98 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e99 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1e9a instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1e9b instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1e9c instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1e9d instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1e9e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1e9f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ea0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ea1 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1ea2 instruction:  LXI B, D16; B<--0x01 C<--0x01 opcodes:  0x01 0x01 0x01
address: 0x1ea5 instruction:  MOV A,M; A <-- (HL) opcodes:  0x7e 
address: 0x1ea6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ea7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ea8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ea9 instruction:  MOV A,H; A <-- H opcodes:  0x7c 
address: 0x1eaa instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1eab instruction:  LXI B, D16; B<--0x7c C<--0x02 opcodes:  0x01 0x02 0x7c
address: 0x1eae instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eaf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eb0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eb1 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1eb2 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1eb3 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1eb4 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1eb5 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1eb6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eb7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eb8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eb9 instruction:  MOV H,E; H <-- E opcodes:  0x63 
address: 0x1eba instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ebb instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ebc instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ebd instruction:  MOV H,E; H <-- E opcodes:  0x63 
address: 0x1ebe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ebf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ec0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ec1 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1ec2 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1ec3 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1ec4 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1ec5 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1ec6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ec7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ec8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ec9 instruction:  MOV B,E; B <-- E opcodes:  0x43 
address: 0x1eca instruction:  MOV B,L; B <-- L opcodes:  0x45 
address: 0x1ecb instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1ecc instruction: opcodes:  0x51 
address: 0x1ecd instruction:  MOV H,C; H <-- C opcodes:  0x61 
address: 0x1ece instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ecf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ed0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ed1 instruction:  MVI A, D8; A <-- 0x45 opcodes:  0x3e 0x45 
address: 0x1ed3 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1ed4 instruction: opcodes:  0x51 
address: 0x1ed5 instruction:  MVI A, D8; A <-- 0x00 opcodes:  0x3e 0x00 
address: 0x1ed7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ed8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ed9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eda instruction:  LXI H, D16; H <-- 0x01 L <-- 0x7f opcodes:  0x21 0x7f 0x01
address: 0x1edd instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ede instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1edf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ee0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ee1 instruction:  INX H; HL <-- HL + 1 opcodes:  0x23 
address: 0x1ee2 instruction:  MOV B,L; B <-- L opcodes:  0x45 
address: 0x1ee3 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1ee4 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1ee5 instruction:  LXI SP, D16; SP.hi <-- 0x00 SP.lo <-- 0x00 opcodes:  0x31 0x00 0x00
address: 0x1ee8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ee9 instruction:  MOV B,D; B <-- D opcodes:  0x42 
address: 0x1eea instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1eeb instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1eec instruction:  MOV E,C; E <-- C opcodes:  0x59 
address: 0x1eed instruction:  MOV H,M; H <-- (HL) opcodes:  0x66 
address: 0x1eee instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eef instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ef0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ef1 instruction:  INR C; C <-- C + 1 opcodes:  0x0c 
address: 0x1ef2 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ef3 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1ef4 instruction:  MOV A,A; A <-- A opcodes:  0x7f 
address: 0x1ef5 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1ef6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ef7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ef8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1ef9 instruction:  MOV M,D; (HL) <-- D opcodes:  0x72 
address: 0x1efa instruction: opcodes:  0x51 
address: 0x1efb instruction: opcodes:  0x51 
address: 0x1efc instruction: opcodes:  0x51 
address: 0x1efd instruction:  MOV C,M; C <-- (HL) opcodes:  0x4e 
address: 0x1efe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1eff instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f00 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f01 instruction:  MVI E, D8; E <-- 0x29 opcodes:  0x1e 0x29 
address: 0x1f03 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1f04 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1f05 instruction:  MOV B,M; B <-- (HL) opcodes:  0x46 
address: 0x1f06 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f07 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f08 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f09 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1f0a instruction:  MOV B,A; B <-- A opcodes:  0x47 
address: 0x1f0b instruction:  MOV C,B; C <-- B opcodes:  0x48 
address: 0x1f0c instruction:  MOV D,B; D <-- B opcodes:  0x50 
address: 0x1f0d instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1f0e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f0f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f10 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f11 instruction:  MVI M, D8;  (HL) <-- 0x49 opcodes:  0x36 0x49 
address: 0x1f13 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1f14 instruction:  MOV C,C; C <-- C opcodes:  0x49 
address: 0x1f15 instruction:  MVI M, D8;  (HL) <-- 0x00 opcodes:  0x36 0x00 
address: 0x1f17 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f18 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f19 instruction:  LXI SP, D16; SP.hi <-- 0x49 SP.lo <-- 0x49 opcodes:  0x31 0x49 0x49
address: 0x1f1c instruction:  MOV C,D; C <--  Dopcodes:  0x4a 
address: 0x1f1d instruction:  INR A; A <-- A + 1 opcodes:  0x3c 
address: 0x1f1e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f1f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f20 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f21 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1f22 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f23 instruction:  SHLD adr ; (0x0041) <-- L , (0x0041) + 1 <-- H opcodes:  0x22 0x41 0x00
address: 0x1f26 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f27 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f28 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f29 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f2a instruction:  MOV B,C; B <-- C opcodes:  0x41 
address: 0x1f2b instruction:  SHLD adr ; (0x0814) <-- L , (0x0814) + 1 <-- H opcodes:  0x22 0x14 0x08
address: 0x1f2e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f2f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f30 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f31 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f32 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f33 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f34 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f35 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f36 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f37 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f38 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f39 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f3a instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f3b instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f3c instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f3d instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f3e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f3f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f40 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f41 instruction:  SHLD adr ; (0x7f14) <-- L , (0x7f14) + 1 <-- H opcodes:  0x22 0x14 0x7f
address: 0x1f44 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1f45 instruction:  SHLD adr ; (0x0000) <-- L , (0x0000) + 1 <-- H opcodes:  0x22 0x00 0x00
address: 0x1f48 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f49 instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1f4a instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1f4b instruction:  MOV A,B; A <-- B opcodes:  0x78 
address: 0x1f4c instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1f4d instruction:  INX B; BC<-- BC + 1 opcodes:  0x03 
address: 0x1f4e instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f4f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f50 instruction:  INR H; H <-- H + 1 opcodes:  0x24 
address: 0x1f51 instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1f52 instruction:  MVI H, D8;  H <-- 0x0e opcodes:  0x26 0x0e 
address: 0x1f54 instruction:  LXI D, D16; D <-- 0x1c E <-- 0x26 opcodes:  0x11 0x26 0x1c
address: 0x1f57 instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1f59 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1f5a instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f5b instruction:  NOP; no operation opcodes:  0x18 
address: 0x1f5c instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1f5d instruction:  LXI D, D16; D <-- 0x25 E <-- 0x12 opcodes:  0x11 0x12 0x25
address: 0x1f60 instruction:  MVI H, D8;  H <-- 0x26 opcodes:  0x26 0x26 
address: 0x1f62 instruction:  NOP; no operation opcodes:  0x28 
address: 0x1f63 instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1f64 instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1f66 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1f67 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f68 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1f69 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1f6a instruction:  LXI D, D16; D <-- 0x26 E <-- 0x26 opcodes:  0x11 0x26 0x26
address: 0x1f6d instruction:  DCX D; DE <-- DE - 1 opcodes:  0x1b 
address: 0x1f6e instruction:  MVI H, D8;  H <-- 0x02 opcodes:  0x26 0x02 
address: 0x1f70 instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1f72 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1f73 instruction:  MVI H, D8;  H <-- 0x01 opcodes:  0x26 0x01 
address: 0x1f75 instruction:  LXI B, D16; B<--0x00 C<--0x00 opcodes:  0x01 0x00 0x00
address: 0x1f78 instruction:  LXI B, D16; B<--0x02 C<--0x00 opcodes:  0x01 0x00 0x02
address: 0x1f7b instruction:  LXI B, D16; B<--0x02 C<--0x00 opcodes:  0x01 0x00 0x02
address: 0x1f7e instruction:  LXI B, D16; B<--0x60 C<--0x00 opcodes:  0x01 0x00 0x60
address: 0x1f81 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1f82 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1f83 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1f84 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1f85 instruction:  NOP; no operation opcodes:  0x30 
address: 0x1f86 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1f87 instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1f88 instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1f89 instruction:  MOV L,B; L <-- B opcodes:  0x68 
address: 0x1f8a instruction:  CM adr;  if M,  CALL 0x68fc opcodes:  0xfc 0xfc 0x68
address: 0x1f8d instruction:  DCR A; A <-- A - 1 opcodes:  0x3d 
address: 0x1f8e instruction:  LDAX D; A <-- (DE) opcodes:  0x1a 
address: 0x1f8f instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1f90 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1f91 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1f92 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1f93 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1f94 instruction:  LXI D, D16; D <-- 0x26 E <-- 0x13 opcodes:  0x11 0x13 0x26
address: 0x1f97 instruction:  MVI H, D8;  H <-- 0x02 opcodes:  0x26 0x02 
address: 0x1f99 instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1f9b instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1f9c instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1f9d instruction:  LHLD adr; (0x1f50) <-- L , (0x1f50) + 1 <-- H opcodes:  0x2a 0x50 0x1f
address: 0x1fa0 instruction:  LDAX B; A <-- (BC) opcodes:  0x0a 
address: 0x1fa1 instruction:  LHLD adr; (0x1f62) <-- L , (0x1f62) + 1 <-- H opcodes:  0x2a 0x62 0x1f
address: 0x1fa4 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1fa5 instruction:  LHLD adr; (0x1fe1) <-- L , (0x1fe1) + 1 <-- H opcodes:  0x2a 0xe1 0x1f
address: 0x1fa8 instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1fa9 instruction:  STAX B; A <-- (BC) opcodes:  0x02 
address: 0x1faa instruction:  LXI D, D16; D <-- 0x03 E <-- 0x04 opcodes:  0x11 0x04 0x03
address: 0x1fad instruction:  NOP; no operation opcodes:  0x08 
address: 0x1fae instruction:  INX D; DE <-- DE + 1 opcodes:  0x13 
address: 0x1faf instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x1fb1 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1fb2 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1fb3 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1fb4 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1fb5 instruction:  MOV H,B; H <-- B opcodes:  0x60 
address: 0x1fb6 instruction:  NOP; no operation opcodes:  0x38 
address: 0x1fb7 instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1fb8 instruction:  LDA adr; A <-- (0xfa6d) opcodes:  0x3a 0x6d 0xfa
address: 0x1fbb instruction:  JM adr; if M,  PC <-- 0x3a6d opcodes:  0xfa 0x6d 0x3a
address: 0x1fbe instruction:  DAD D; HL = HL + DE opcodes:  0x19 
address: 0x1fbf instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fc0 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fc1 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1fc2 instruction:  MOV B,B; B <-- B opcodes:  0x40 
address: 0x1fc3 instruction:  MOV C,L; C <-- L opcodes:  0x4d 
address: 0x1fc4 instruction:  MOV D,B; D <-- B opcodes:  0x50 
address: 0x1fc5 instruction:  NOP; no operation opcodes:  0x20 
address: 0x1fc6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fc7 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fc8 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fc9 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fca instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fcb instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1fcc instruction:  CMP B;  A - B opcodes:  0xb8 
address: 0x1fcd instruction:  RST 7;  CALL $38opcodes:  0xff 
address: 0x1fce instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1fcf instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1fd0 instruction:  NOP; no operation opcodes:  0x10 
address: 0x1fd1 instruction:  SUB A; A <-- A - A opcodes:  0x97 
address: 0x1fd2 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fd3 instruction:  ADD B; A <-- A + B opcodes:  0x80 
address: 0x1fd4 instruction:  RLC; A <-- A>>1, bit 7 =  prev bit 7, CY = prev bit 0 opcodes:  0x1f 
address: 0x1fd5 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fd6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fd7 instruction:  LXI B, D16; B<--0x22 C<--0xd0 opcodes:  0x01 0xd0 0x22
address: 0x1fda instruction:  NOP; no operation opcodes:  0x20 
address: 0x1fdb instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1fdc instruction:  NOP; no operation opcodes:  0x10 
address: 0x1fdd instruction:  SUB H; A <-- A - H opcodes:  0x94 
address: 0x1fde instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fdf instruction:  NOP; no operation opcodes:  0x20 
address: 0x1fe0 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1fe1 instruction:  NOP; no operation opcodes:  0x28 
address: 0x1fe2 instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1fe3 instruction:  MVI H, D8;  H <-- 0x0f opcodes:  0x26 0x0f 
address: 0x1fe5 instruction:  DCX B; BC <-- BC - 1 opcodes:  0x0b 
address: 0x1fe6 instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fe7 instruction:  NOP; no operation opcodes:  0x18 
address: 0x1fe8 instruction:  INR B; B <-- B + 1 opcodes:  0x04 
address: 0x1fe9 instruction:  LXI D, D16; D <-- 0x26 E <-- 0x12 opcodes:  0x11 0x12 0x26
address: 0x1fec instruction:  INR E; E <-- E + 1 opcodes:  0x1c 
address: 0x1fed instruction:  MVI H, D8;  H <-- 0x02 opcodes:  0x26 0x02 
address: 0x1fef instruction:  MVI C, D8; C <-- 0x08 opcodes:  0x0e 0x08 
address: 0x1ff1 instruction:  DCR C; C <-- C - 1 opcodes:  0x0d 
address: 0x1ff2 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1ff3 instruction:  RRC; A <-- A>>1, bit 7 =  prev bit 0, CY = prev bit 0 opcodes:  0x0f 
address: 0x1ff4 instruction:  INR D; D <-- D + 1 opcodes:  0x14 
address: 0x1ff5 instruction:  STAX D; (DE) <-- A opcodes:  0x12 
address: 0x1ff6 instruction:  RLC; A <-- A<<1, bit 0 = prev bit 7, CY = prev bit 7 opcodes:  0x07 
address: 0x1ff7 instruction:  MVI H, D8;  H <-- 0x00 opcodes:  0x26 0x00 
address: 0x1ff9 instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ffa instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ffb instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ffc instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ffd instruction:  NOP; no operation opcodes:  0x08 
address: 0x1ffe instruction:  NOP; no operation; opcodes:  0x00 
address: 0x1fff instruction:  NOP; no operation; opcodes:  0x00 

==============================================================================================================================================================================
